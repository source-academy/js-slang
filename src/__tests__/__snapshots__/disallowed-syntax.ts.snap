// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cannot have if without else 1`] = `
Object {
  "alertResult": undefined,
  "code": "if (true) { 5; }",
  "displayResult": undefined,
  "error": "Line 1: Missing \\"else\\" in \\"if-else\\" statement",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot have incomplete statements 1`] = `
Object {
  "alertResult": undefined,
  "code": "5",
  "displayResult": undefined,
  "error": "Line 1: Missing semicolon at the end of statement",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot leave blank expressions in for loop 1`] = `
Object {
  "alertResult": undefined,
  "code": "for(;;) {
  break;
}",
  "displayResult": undefined,
  "error": "Line 1: Missing init, test, update expressions in for statement.",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot leave blank init in for loop 1`] = `
Object {
  "alertResult": undefined,
  "code": "for(; i < 3; i = i + 1) {
  break;
}",
  "displayResult": undefined,
  "error": "Line 1: Missing init expression in for statement.",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot leave blank test in for loop 1`] = `
Object {
  "alertResult": undefined,
  "code": "for(let i = 0; ; i = i + 1) {
  break;
}",
  "displayResult": undefined,
  "error": "Line 1: Missing test expression in for statement.",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot leave blank update in for loop 1`] = `
Object {
  "alertResult": undefined,
  "code": "for(let i = 0; i < 3;) {
  break;
}",
  "displayResult": undefined,
  "error": "Line 1: Missing update expression in for statement.",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot leave while loop predicate blank 1`] = `
Object {
  "alertResult": undefined,
  "code": "while() {
  x;
}",
  "displayResult": undefined,
  "error": "Line 1: SyntaxError: Unexpected token (1:6)",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use assignment expressions 1`] = `
Object {
  "alertResult": undefined,
  "code": "let x = 3;
let y = x = 5;
x;",
  "displayResult": undefined,
  "error": "Line 2: Assignment inside an expression is not allowed. Only assignment in a statement is allowed.",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use assignment expressions 3`] = `
Object {
  "alertResult": undefined,
  "code": "let x = 3;
let y = 4;
x = y = 5;
x;",
  "displayResult": undefined,
  "error": "Line 3: Assignment inside an expression is not allowed. Only assignment in a statement is allowed.",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use assignment expressions 5`] = `
Object {
  "alertResult": undefined,
  "code": "let y = 4;
for (let x = y = 1; x < 1; x = x + 1) {
  y;
}",
  "displayResult": undefined,
  "error": "Line 2: Assignment inside an expression is not allowed. Only assignment in a statement is allowed.",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use destructuring declarations 1`] = `
Object {
  "alertResult": undefined,
  "code": "let x = [1, 2];
let [a, b] = x;
a;",
  "displayResult": undefined,
  "error": "Line 2: Array patterns are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use function expressions 1`] = `
Object {
  "alertResult": undefined,
  "code": "(function fib(x) { return x <= 1 ? x : fib(x-1) + fib(x-2); })(4);",
  "displayResult": undefined,
  "error": "Line 1: Function expressions are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use function expressions 3`] = `
Object {
  "alertResult": undefined,
  "code": "(function(x) { return x + 1; })(4);",
  "displayResult": undefined,
  "error": "Line 1: Function expressions are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use multiple declarations 1`] = `
Object {
  "alertResult": undefined,
  "code": "let x = 3, y = 5;
x;",
  "displayResult": undefined,
  "error": "Line 1: Multiple declaration in a single statement",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use update expressions 1`] = `
Object {
  "alertResult": undefined,
  "code": "let x = 3;
x++;
x;",
  "displayResult": undefined,
  "error": "Line 2: Update expressions are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`Cannot use update statements 1`] = `
Object {
  "alertResult": undefined,
  "code": "let x = 3;
x += 5;
x;",
  "displayResult": undefined,
  "error": "Line 2: The assignment operator += is not allowed. Use = instead",
  "visualiseListResult": undefined,
}
`;

exports[`No array expressions in chapter 2 1`] = `
Object {
  "alertResult": undefined,
  "code": "[];",
  "displayResult": undefined,
  "error": "Line 1: Array expressions are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`No empty statements 1`] = `
Object {
  "alertResult": undefined,
  "code": ";",
  "displayResult": undefined,
  "error": "Line 1: Empty statements are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`No rest pattern 1`] = `
Object {
  "alertResult": undefined,
  "code": "function f(...rest) {
  return rest;
}
f(1, 2);",
  "displayResult": undefined,
  "error": "Line 1: Rest elements are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`No spread operator 1`] = `
Object {
  "alertResult": undefined,
  "code": "function f(x, y) {
  return x + y;
}
f(...[1, 2]);",
  "displayResult": undefined,
  "error": "Line 4: Spread elements are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`No trailing commas in arrays 1`] = `
Object {
  "alertResult": undefined,
  "code": "[1,];",
  "displayResult": undefined,
  "result": Array [
    1,
  ],
  "visualiseListResult": undefined,
}
`;

exports[`No trailing commas in objects 1`] = `
Object {
  "alertResult": undefined,
  "code": "({
  a: 1,
  b: 2,
});",
  "displayResult": undefined,
  "result": Object {
    "a": 1,
    "b": 2,
  },
  "visualiseListResult": undefined,
}
`;

exports[`for needs braces 1`] = `
Object {
  "alertResult": undefined,
  "code": "for (let i = 0; i < 1; i = i + 1)
  i;",
  "displayResult": undefined,
  "error": "Line 1: Missing curly braces around \\"for\\" block",
  "visualiseListResult": undefined,
}
`;

exports[`if needs braces 1`] = `
Object {
  "alertResult": undefined,
  "code": "if (true)
  true;
else
  false;",
  "displayResult": undefined,
  "error": "Line 1: Missing curly braces around \\"if\\" block
Line 1: Missing curly braces around \\"else\\" block",
  "visualiseListResult": undefined,
}
`;

exports[`no assigning to reserved keywords 1`] = `
Object {
  "alertResult": undefined,
  "code": "package = 5;",
  "displayResult": undefined,
  "error": "Line 1: SyntaxError: The keyword 'package' is reserved (1:0)",
  "visualiseListResult": undefined,
}
`;

exports[`no classes 1`] = `
Object {
  "alertResult": undefined,
  "code": "class Box {
}",
  "displayResult": undefined,
  "error": "Line 1: Class bodys are not allowed
Line 1: Class declarations are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no debugger statement 1`] = `
Object {
  "alertResult": undefined,
  "code": "debugger;",
  "displayResult": undefined,
  "error": "Line 1: Debugger statements are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no declaration without assignment 1`] = `
Object {
  "alertResult": undefined,
  "code": "let x;",
  "displayResult": undefined,
  "error": "Line 1: Missing value in variable declaration",
  "visualiseListResult": undefined,
}
`;

exports[`no declaring reserved keywords 1`] = `
Object {
  "alertResult": undefined,
  "code": "let yield = 5;",
  "displayResult": undefined,
  "error": "Line 1: SyntaxError: The keyword 'yield' is reserved (1:4)",
  "visualiseListResult": undefined,
}
`;

exports[`no export constant 1`] = `
Object {
  "alertResult": undefined,
  "code": "export const x = 1;",
  "displayResult": undefined,
  "error": "Line 1: Export named declarations are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no export default 1`] = `
Object {
  "alertResult": undefined,
  "code": "const x = 1;
export default x;",
  "displayResult": undefined,
  "error": "Line 2: Export default declarations are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no export function 1`] = `
Object {
  "alertResult": undefined,
  "code": "export function f(x) {
  return x;
}",
  "displayResult": undefined,
  "error": "Line 1: Export named declarations are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no for in loops 1`] = `
Object {
  "alertResult": undefined,
  "code": "for (let i in { a: 1, b: 2 }) {
}",
  "displayResult": undefined,
  "error": "Line 1: Missing value in variable declaration
Line 1: For in statements are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no for of loops 1`] = `
Object {
  "alertResult": undefined,
  "code": "for (let i of list()) {
}",
  "displayResult": undefined,
  "error": "Line 1: Missing value in variable declaration
Line 1: For of statements are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no generator functions 1`] = `
Object {
  "alertResult": undefined,
  "code": "function* gen() {
  yield 2;
  return 1;
}",
  "displayResult": undefined,
  "error": "Line 2: Yield expressions are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no implicit undefined return 1`] = `
Object {
  "alertResult": undefined,
  "code": "function f() {
  return;
}",
  "displayResult": undefined,
  "error": "Line 2: Missing value in return statement",
  "visualiseListResult": undefined,
}
`;

exports[`no import 1`] = `
Object {
  "alertResult": undefined,
  "code": "import { stripIndent } from 'common-tags';",
  "displayResult": undefined,
  "error": "Line 1: Import specifiers are not allowed
Line 1: Import declarations are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no interface 1`] = `
Object {
  "alertResult": undefined,
  "code": "interface Box {
}",
  "displayResult": undefined,
  "error": "Line 1: SyntaxError: The keyword 'interface' is reserved (1:0)",
  "visualiseListResult": undefined,
}
`;

exports[`no regexp 1`] = `
Object {
  "alertResult": undefined,
  "code": "/pattern/",
  "displayResult": undefined,
  "error": "Line 1: Missing semicolon at the end of statement
Line 1: 'RegExp' literals are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no repeated params 1`] = `
Object {
  "alertResult": undefined,
  "code": "function f(x, x) {
  return x;
}",
  "displayResult": undefined,
  "error": "Line 1: SyntaxError: Argument name clash (1:14)",
  "visualiseListResult": undefined,
}
`;

exports[`no sequence expression 1`] = `
Object {
  "alertResult": undefined,
  "code": "(1, 2);",
  "displayResult": undefined,
  "error": "Line 1: Sequence expressions are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no super 1`] = `
Object {
  "alertResult": undefined,
  "code": "class BoxError extends Error {
  constructor() {
    super(1);
  }
}",
  "displayResult": undefined,
  "error": "Line 3: Supers are not allowed
Line 2: Function expressions are not allowed
Line 2: Method definitions are not allowed
Line 1: Class bodys are not allowed
Line 1: Class declarations are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no template literals 1`] = `
Object {
  "alertResult": undefined,
  "code": "\`hi\`",
  "displayResult": undefined,
  "error": "Line 1: Missing semicolon at the end of statement
Line 1: Template elements are not allowed
Line 1: Template literals are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no this, no new 1`] = `
Object {
  "alertResult": undefined,
  "code": "function Box() {
  this[0] = 5;
}
const box = new Box();",
  "displayResult": undefined,
  "error": "Line 2: 'this' expressions are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no try statements 1`] = `
Object {
  "alertResult": undefined,
  "code": "function f(x, y) {
  return x + y;
}
try {
  f(...[1, 2]);
} catch (e) {
  display(e);
}",
  "displayResult": undefined,
  "error": "Line 5: Spread elements are not allowed
Line 6: Catch clauses are not allowed
Line 4: Try statements are not allowed",
  "visualiseListResult": undefined,
}
`;

exports[`no unspecified operators 1`] = `
Object {
  "alertResult": undefined,
  "code": "1 << 10;",
  "displayResult": undefined,
  "error": "Line 1: Operator '<<' is not allowed.",
  "visualiseListResult": undefined,
}
`;

exports[`no unspecified unary operators 1`] = `
Object {
  "alertResult": undefined,
  "code": "let x = 5;
typeof x;",
  "displayResult": undefined,
  "error": "Line 2: Operator 'typeof' is not allowed.",
  "visualiseListResult": undefined,
}
`;

exports[`while needs braces 1`] = `
Object {
  "alertResult": undefined,
  "code": "let i = 0;
while (i < 1)
  i = i + 1;",
  "displayResult": undefined,
  "error": "Line 2: Missing curly braces around \\"while\\" block",
  "visualiseListResult": undefined,
}
`;
