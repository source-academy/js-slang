// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cannot leave blank expressions in for loops 1`] = `"Line 2: For statement cannot have empty init expression."`;

exports[`Cannot leave blank expressions in for loops 2`] = `"Line 2: For statement cannot have empty test expression."`;

exports[`Cannot leave blank expressions in for loops 3`] = `"Line 2: For statement cannot have empty update expression."`;

exports[`Cannot leave blank expressions in for loops 4`] = `"Line 2: For statement cannot have empty init,test,update expressions."`;

exports[`Cannot use update expressions 1`] = `"Line 3: Update expressions are not allowed"`;

exports[`Compound assignment not allowed even though it is allowed 1`] = `
Object {
  "status": "error",
}
`;

exports[`Compound assignment not allowed even though it is allowed 2`] = `
Array [
  NoUnspecifiedOperatorError {
    "node": Node {
      "__id": "node_48",
      "end": 23,
      "left": Node {
        "end": 18,
        "loc": SourceLocation {
          "end": Position {
            "column": 2,
            "line": 3,
          },
          "start": Position {
            "column": 1,
            "line": 3,
          },
        },
        "name": "x",
        "start": 17,
        "type": "Identifier",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 3,
        },
        "start": Position {
          "column": 1,
          "line": 3,
        },
      },
      "operator": "|=",
      "right": Node {
        "__id": "node_47",
        "end": 23,
        "loc": SourceLocation {
          "end": Position {
            "column": 7,
            "line": 3,
          },
          "start": Position {
            "column": 6,
            "line": 3,
          },
        },
        "raw": "1",
        "start": 22,
        "type": "Literal",
        "value": 1,
      },
      "start": 17,
      "type": "AssignmentExpression",
    },
    "severity": "Error",
    "type": "Syntax",
    "unspecifiedOperator": "|=",
  },
]
`;

exports[`Compound assignment not allowed when not allowed 1`] = `
Object {
  "status": "error",
}
`;

exports[`Compound assignment not allowed when not allowed 2`] = `
Array [
  NoUnspecifiedCompoundAssignmentError {
    "node": Node {
      "__id": "node_42",
      "end": 23,
      "left": Node {
        "end": 18,
        "loc": SourceLocation {
          "end": Position {
            "column": 2,
            "line": 3,
          },
          "start": Position {
            "column": 1,
            "line": 3,
          },
        },
        "name": "x",
        "start": 17,
        "type": "Identifier",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 3,
        },
        "start": Position {
          "column": 1,
          "line": 3,
        },
      },
      "operator": "+=",
      "right": Node {
        "__id": "node_41",
        "end": 23,
        "loc": SourceLocation {
          "end": Position {
            "column": 7,
            "line": 3,
          },
          "start": Position {
            "column": 6,
            "line": 3,
          },
        },
        "raw": "1",
        "start": 22,
        "type": "Literal",
        "value": 1,
      },
      "start": 17,
      "type": "AssignmentExpression",
    },
    "severity": "Error",
    "type": "Syntax",
    "unspecifiedOperator": "+=",
  },
]
`;
