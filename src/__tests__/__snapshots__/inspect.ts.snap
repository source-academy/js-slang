// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`debugger; pauses for 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 5,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {},
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 0,
            },
            "name": "forBlockEnvironment",
            "tail": Object {
              "head": Object {
                "i": 0,
              },
              "name": "forLoopEnvironment",
              "tail": Object {
                "callExpression": Object {
                  "arguments": Array [
                    Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 10,
                    },
                  ],
                  "callee": Node {
                    "end": 78,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 3,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 2,
                        "line": 7,
                      },
                    },
                    "name": "a",
                    "start": 77,
                    "type": "Identifier",
                  },
                  "end": 82,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 7,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "start": 77,
                  "type": "CallExpression",
                },
                "head": Object {
                  "x": 10,
                },
                "name": "a",
                "tail": Object {
                  "head": Object {
                    "Infinity": Infinity,
                    "NaN": NaN,
                    "a": [Function],
                    "accumulate": [Function],
                    "append": [Function],
                    "array_length": [Function],
                    "build_list": [Function],
                    "display": [Function],
                    "draw_data": [Function],
                    "enum_list": [Function],
                    "equal": [Function],
                    "error": [Function],
                    "filter": [Function],
                    "for_each": [Function],
                    "head": [Function],
                    "is_array": [Function],
                    "is_boolean": [Function],
                    "is_function": [Function],
                    "is_list": [Function],
                    "is_null": [Function],
                    "is_number": [Function],
                    "is_pair": [Function],
                    "is_string": [Function],
                    "is_undefined": [Function],
                    "length": [Function],
                    "list": [Function],
                    "list_ref": [Function],
                    "list_to_string": [Function],
                    "map": [Function],
                    "math_E": 2.718281828459045,
                    "math_LN10": 2.302585092994046,
                    "math_LN2": 0.6931471805599453,
                    "math_LOG10E": 0.4342944819032518,
                    "math_LOG2E": 1.4426950408889634,
                    "math_PI": 3.141592653589793,
                    "math_SQRT1_2": 0.7071067811865476,
                    "math_SQRT2": 1.4142135623730951,
                    "math_abs": [Function],
                    "math_acos": [Function],
                    "math_acosh": [Function],
                    "math_asin": [Function],
                    "math_asinh": [Function],
                    "math_atan": [Function],
                    "math_atan2": [Function],
                    "math_atanh": [Function],
                    "math_cbrt": [Function],
                    "math_ceil": [Function],
                    "math_clz32": [Function],
                    "math_cos": [Function],
                    "math_cosh": [Function],
                    "math_exp": [Function],
                    "math_expm1": [Function],
                    "math_floor": [Function],
                    "math_fround": [Function],
                    "math_hypot": [Function],
                    "math_imul": [Function],
                    "math_log": [Function],
                    "math_log10": [Function],
                    "math_log1p": [Function],
                    "math_log2": [Function],
                    "math_max": [Function],
                    "math_min": [Function],
                    "math_pow": [Function],
                    "math_random": [Function],
                    "math_round": [Function],
                    "math_sign": [Function],
                    "math_sin": [Function],
                    "math_sinh": [Function],
                    "math_sqrt": [Function],
                    "math_tan": [Function],
                    "math_tanh": [Function],
                    "math_trunc": [Function],
                    "member": [Function],
                    "pair": [Function],
                    "parse_int": [Function],
                    "prompt": [Function],
                    "raw_display": [Function],
                    "remove": [Function],
                    "remove_all": [Function],
                    "reverse": [Function],
                    "runtime": [Function],
                    "set_head": [Function],
                    "set_tail": [Function],
                    "stringify": [Function],
                    "tail": [Function],
                    "undefined": undefined,
                  },
                  "name": "global",
                  "tail": null,
                },
                "thisContext": undefined,
              },
              "thisContext": [Circular],
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 0,
          },
          "name": "forBlockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 0,
            },
            "name": "forLoopEnvironment",
            "tail": Object {
              "callExpression": Object {
                "arguments": Array [
                  Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 10,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 82,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "head": Object {
                "x": 10,
              },
              "name": "a",
              "tail": Object {
                "head": Object {
                  "Infinity": Infinity,
                  "NaN": NaN,
                  "a": [Function],
                  "accumulate": [Function],
                  "append": [Function],
                  "array_length": [Function],
                  "build_list": [Function],
                  "display": [Function],
                  "draw_data": [Function],
                  "enum_list": [Function],
                  "equal": [Function],
                  "error": [Function],
                  "filter": [Function],
                  "for_each": [Function],
                  "head": [Function],
                  "is_array": [Function],
                  "is_boolean": [Function],
                  "is_function": [Function],
                  "is_list": [Function],
                  "is_null": [Function],
                  "is_number": [Function],
                  "is_pair": [Function],
                  "is_string": [Function],
                  "is_undefined": [Function],
                  "length": [Function],
                  "list": [Function],
                  "list_ref": [Function],
                  "list_to_string": [Function],
                  "map": [Function],
                  "math_E": 2.718281828459045,
                  "math_LN10": 2.302585092994046,
                  "math_LN2": 0.6931471805599453,
                  "math_LOG10E": 0.4342944819032518,
                  "math_LOG2E": 1.4426950408889634,
                  "math_PI": 3.141592653589793,
                  "math_SQRT1_2": 0.7071067811865476,
                  "math_SQRT2": 1.4142135623730951,
                  "math_abs": [Function],
                  "math_acos": [Function],
                  "math_acosh": [Function],
                  "math_asin": [Function],
                  "math_asinh": [Function],
                  "math_atan": [Function],
                  "math_atan2": [Function],
                  "math_atanh": [Function],
                  "math_cbrt": [Function],
                  "math_ceil": [Function],
                  "math_clz32": [Function],
                  "math_cos": [Function],
                  "math_cosh": [Function],
                  "math_exp": [Function],
                  "math_expm1": [Function],
                  "math_floor": [Function],
                  "math_fround": [Function],
                  "math_hypot": [Function],
                  "math_imul": [Function],
                  "math_log": [Function],
                  "math_log10": [Function],
                  "math_log1p": [Function],
                  "math_log2": [Function],
                  "math_max": [Function],
                  "math_min": [Function],
                  "math_pow": [Function],
                  "math_random": [Function],
                  "math_round": [Function],
                  "math_sign": [Function],
                  "math_sin": [Function],
                  "math_sinh": [Function],
                  "math_sqrt": [Function],
                  "math_tan": [Function],
                  "math_tanh": [Function],
                  "math_trunc": [Function],
                  "member": [Function],
                  "pair": [Function],
                  "parse_int": [Function],
                  "prompt": [Function],
                  "raw_display": [Function],
                  "remove": [Function],
                  "remove_all": [Function],
                  "reverse": [Function],
                  "runtime": [Function],
                  "set_head": [Function],
                  "set_tail": [Function],
                  "stringify": [Function],
                  "tail": [Function],
                  "undefined": undefined,
                },
                "name": "global",
                "tail": null,
              },
              "thisContext": undefined,
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 0,
          },
          "name": "forLoopEnvironment",
          "tail": Object {
            "callExpression": Object {
              "arguments": Array [
                Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 10,
                },
              ],
              "callee": Node {
                "end": 78,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "name": "a",
                "start": 77,
                "type": "Identifier",
              },
              "end": 82,
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "start": 77,
              "type": "CallExpression",
            },
            "head": Object {
              "x": 10,
            },
            "name": "a",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "a": [Function],
                "accumulate": [Function],
                "append": [Function],
                "array_length": [Function],
                "build_list": [Function],
                "display": [Function],
                "draw_data": [Function],
                "enum_list": [Function],
                "equal": [Function],
                "error": [Function],
                "filter": [Function],
                "for_each": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "length": [Function],
                "list": [Function],
                "list_ref": [Function],
                "list_to_string": [Function],
                "map": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "member": [Function],
                "pair": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "remove": [Function],
                "remove_all": [Function],
                "reverse": [Function],
                "runtime": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stringify": [Function],
                "tail": [Function],
                "undefined": undefined,
              },
              "name": "global",
              "tail": null,
            },
            "thisContext": undefined,
          },
          "thisContext": [Circular],
        },
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 82,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "head": Object {
            "x": 10,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 64,
          "loc": SourceLocation {
            "end": Position {
              "column": 15,
              "line": 4,
            },
            "start": Position {
              "column": 6,
              "line": 4,
            },
          },
          "start": 55,
          "type": "DebuggerStatement",
        },
        Node {
          "body": Array [
            Node {
              "end": 64,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "start": 55,
              "type": "DebuggerStatement",
            },
          ],
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 5,
            },
            "start": Position {
              "column": 29,
              "line": 3,
            },
          },
          "start": 47,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "end": 64,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 4,
                  },
                },
                "start": 55,
                "type": "DebuggerStatement",
              },
            ],
            "end": 70,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 5,
              },
              "start": Position {
                "column": 29,
                "line": 3,
              },
            },
            "start": 47,
            "type": "BlockStatement",
          },
          "end": 70,
          "init": Node {
            "declarations": Array [
              Node {
                "end": 34,
                "id": Node {
                  "end": 32,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 3,
                    },
                  },
                  "name": "i",
                  "start": 31,
                  "type": "Identifier",
                },
                "init": Node {
                  "end": 34,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 16,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 15,
                      "line": 3,
                    },
                  },
                  "raw": "0",
                  "start": 33,
                  "type": "Literal",
                  "value": 0,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 3,
                  },
                },
                "start": 31,
                "type": "VariableDeclarator",
              },
            ],
            "end": 34,
            "kind": "let",
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 3,
              },
              "start": Position {
                "column": 9,
                "line": 3,
              },
            },
            "start": 27,
            "type": "VariableDeclaration",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 22,
          "test": Node {
            "end": 39,
            "left": Node {
              "end": 37,
              "loc": SourceLocation {
                "end": Position {
                  "column": 19,
                  "line": 3,
                },
                "start": Position {
                  "column": 18,
                  "line": 3,
                },
              },
              "name": "i",
              "start": 36,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 3,
              },
              "start": Position {
                "column": 18,
                "line": 3,
              },
            },
            "operator": "<",
            "right": Node {
              "end": 39,
              "loc": SourceLocation {
                "end": Position {
                  "column": 21,
                  "line": 3,
                },
                "start": Position {
                  "column": 20,
                  "line": 3,
                },
              },
              "name": "x",
              "start": 38,
              "type": "Identifier",
            },
            "start": 36,
            "type": "BinaryExpression",
          },
          "type": "ForStatement",
          "update": Node {
            "end": 46,
            "left": Node {
              "end": 42,
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 3,
                },
                "start": Position {
                  "column": 23,
                  "line": 3,
                },
              },
              "name": "i",
              "start": 41,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 28,
                "line": 3,
              },
              "start": Position {
                "column": 23,
                "line": 3,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 46,
              "left": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 25,
                    "line": 3,
                  },
                },
                "name": "i",
                "start": 43,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 28,
                  "line": 3,
                },
                "start": Position {
                  "column": 25,
                  "line": 3,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 46,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 28,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 27,
                    "line": 3,
                  },
                },
                "raw": "1",
                "start": 45,
                "type": "Literal",
                "value": 1,
              },
              "start": 43,
              "type": "BinaryExpression",
            },
            "start": 41,
            "type": "AssignmentExpression",
          },
        },
        Node {
          "arguments": Array [
            Node {
              "end": 81,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 7,
                },
                "start": Position {
                  "column": 4,
                  "line": 7,
                },
              },
              "raw": "10",
              "start": 79,
              "type": "Literal",
              "value": 10,
            },
          ],
          "callee": Node {
            "end": 78,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "name": "a",
            "start": 77,
            "type": "Identifier",
          },
          "end": 82,
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "CallExpression",
        },
        Node {
          "end": 83,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 81,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 7,
                  },
                },
                "raw": "10",
                "start": 79,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 82,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "body": Node {
                      "body": Array [
                        Node {
                          "end": 64,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 6,
                              "line": 4,
                            },
                          },
                          "start": 55,
                          "type": "DebuggerStatement",
                        },
                      ],
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 5,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 29,
                          "line": 3,
                        },
                      },
                      "start": 47,
                      "type": "BlockStatement",
                    },
                    "end": 70,
                    "init": Node {
                      "declarations": Array [
                        Node {
                          "end": 34,
                          "id": Node {
                            "end": 32,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 14,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 13,
                                "line": 3,
                              },
                            },
                            "name": "i",
                            "start": 31,
                            "type": "Identifier",
                          },
                          "init": Node {
                            "end": 34,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 16,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 15,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 33,
                            "type": "Literal",
                            "value": 0,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 3,
                            },
                          },
                          "start": 31,
                          "type": "VariableDeclarator",
                        },
                      ],
                      "end": 34,
                      "kind": "let",
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 9,
                          "line": 3,
                        },
                      },
                      "start": 27,
                      "type": "VariableDeclaration",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 22,
                    "test": Node {
                      "end": 39,
                      "left": Node {
                        "end": 37,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 19,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 18,
                            "line": 3,
                          },
                        },
                        "name": "i",
                        "start": 36,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 18,
                          "line": 3,
                        },
                      },
                      "operator": "<",
                      "right": Node {
                        "end": 39,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 21,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 20,
                            "line": 3,
                          },
                        },
                        "name": "x",
                        "start": 38,
                        "type": "Identifier",
                      },
                      "start": 36,
                      "type": "BinaryExpression",
                    },
                    "type": "ForStatement",
                    "update": Node {
                      "end": 46,
                      "left": Node {
                        "end": 42,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 24,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 23,
                            "line": 3,
                          },
                        },
                        "name": "i",
                        "start": 41,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 28,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 23,
                          "line": 3,
                        },
                      },
                      "operator": "=",
                      "right": Node {
                        "end": 46,
                        "left": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 25,
                              "line": 3,
                            },
                          },
                          "name": "i",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 28,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 25,
                            "line": 3,
                          },
                        },
                        "operator": "+",
                        "right": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 28,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 27,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 45,
                          "type": "Literal",
                          "value": 1,
                        },
                        "start": 43,
                        "type": "BinaryExpression",
                      },
                      "start": 41,
                      "type": "AssignmentExpression",
                    },
                  },
                ],
                "end": 74,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "start": 16,
                "type": "BlockStatement",
              },
              "end": 74,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "x",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 83,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 81,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 6,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "raw": "10",
                    "start": 79,
                    "type": "Literal",
                    "value": 10,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 82,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 8,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "start": 77,
              "type": "ExpressionStatement",
            },
          ],
          "end": 86,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`debugger; pauses for 2`] = `""`;

exports[`debugger; pauses while 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 6,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {},
          "name": "blockEnvironment",
          "tail": Object {
            "callExpression": Object {
              "arguments": Array [
                Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 10,
                },
              ],
              "callee": Node {
                "end": 78,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 8,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 8,
                  },
                },
                "name": "a",
                "start": 77,
                "type": "Identifier",
              },
              "end": 82,
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 8,
                },
                "start": Position {
                  "column": 2,
                  "line": 8,
                },
              },
              "start": 77,
              "type": "CallExpression",
            },
            "head": Object {
              "x": 10,
            },
            "name": "a",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "a": [Function],
                "accumulate": [Function],
                "append": [Function],
                "array_length": [Function],
                "build_list": [Function],
                "display": [Function],
                "draw_data": [Function],
                "enum_list": [Function],
                "equal": [Function],
                "error": [Function],
                "filter": [Function],
                "for_each": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "length": [Function],
                "list": [Function],
                "list_ref": [Function],
                "list_to_string": [Function],
                "map": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "member": [Function],
                "pair": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "remove": [Function],
                "remove_all": [Function],
                "reverse": [Function],
                "runtime": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stringify": [Function],
                "tail": [Function],
                "undefined": undefined,
              },
              "name": "global",
              "tail": null,
            },
            "thisContext": undefined,
          },
          "thisContext": [Circular],
        },
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 8,
                },
                "start": Position {
                  "column": 2,
                  "line": 8,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 82,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 8,
              },
              "start": Position {
                "column": 2,
                "line": 8,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "head": Object {
            "x": 10,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 51,
          "loc": SourceLocation {
            "end": Position {
              "column": 15,
              "line": 4,
            },
            "start": Position {
              "column": 6,
              "line": 4,
            },
          },
          "start": 42,
          "type": "DebuggerStatement",
        },
        Node {
          "body": Array [
            Node {
              "end": 51,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "start": 42,
              "type": "DebuggerStatement",
            },
            Node {
              "end": 64,
              "expression": Node {
                "end": 63,
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 7,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 5,
                    },
                  },
                  "name": "x",
                  "start": 58,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 5,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 63,
                  "left": Node {
                    "end": 61,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "name": "x",
                    "start": 60,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 63,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 62,
                    "type": "Literal",
                    "value": 1,
                  },
                  "start": 60,
                  "type": "BinaryExpression",
                },
                "start": 58,
                "type": "AssignmentExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 5,
                },
                "start": Position {
                  "column": 6,
                  "line": 5,
                },
              },
              "start": 58,
              "type": "ExpressionStatement",
            },
          ],
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 6,
            },
            "start": Position {
              "column": 16,
              "line": 3,
            },
          },
          "start": 34,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "end": 51,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 4,
                  },
                },
                "start": 42,
                "type": "DebuggerStatement",
              },
              Node {
                "end": 64,
                "expression": Node {
                  "end": 63,
                  "left": Node {
                    "end": 59,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 7,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "name": "x",
                    "start": 58,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 5,
                    },
                  },
                  "operator": "=",
                  "right": Node {
                    "end": 63,
                    "left": Node {
                      "end": 61,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "name": "x",
                      "start": 60,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 63,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 62,
                      "type": "Literal",
                      "value": 1,
                    },
                    "start": 60,
                    "type": "BinaryExpression",
                  },
                  "start": 58,
                  "type": "AssignmentExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 5,
                  },
                },
                "start": 58,
                "type": "ExpressionStatement",
              },
            ],
            "end": 70,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 6,
              },
              "start": Position {
                "column": 16,
                "line": 3,
              },
            },
            "start": 34,
            "type": "BlockStatement",
          },
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 6,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 22,
          "test": Node {
            "end": 33,
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 3,
                },
                "start": Position {
                  "column": 10,
                  "line": 3,
                },
              },
              "name": "x",
              "start": 28,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 15,
                "line": 3,
              },
              "start": Position {
                "column": 10,
                "line": 3,
              },
            },
            "operator": ">",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 3,
                },
                "start": Position {
                  "column": 14,
                  "line": 3,
                },
              },
              "raw": "1",
              "start": 32,
              "type": "Literal",
              "value": 1,
            },
            "start": 28,
            "type": "BinaryExpression",
          },
          "type": "WhileStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 81,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 8,
                },
                "start": Position {
                  "column": 4,
                  "line": 8,
                },
              },
              "raw": "10",
              "start": 79,
              "type": "Literal",
              "value": 10,
            },
          ],
          "callee": Node {
            "end": 78,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 8,
              },
              "start": Position {
                "column": 2,
                "line": 8,
              },
            },
            "name": "a",
            "start": 77,
            "type": "Identifier",
          },
          "end": 82,
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 8,
            },
            "start": Position {
              "column": 2,
              "line": 8,
            },
          },
          "start": 77,
          "type": "CallExpression",
        },
        Node {
          "end": 83,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 81,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 8,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 8,
                  },
                },
                "raw": "10",
                "start": 79,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 8,
                },
                "start": Position {
                  "column": 2,
                  "line": 8,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 82,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 8,
              },
              "start": Position {
                "column": 2,
                "line": 8,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 8,
            },
            "start": Position {
              "column": 2,
              "line": 8,
            },
          },
          "start": 77,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "body": Node {
                      "body": Array [
                        Node {
                          "end": 51,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 6,
                              "line": 4,
                            },
                          },
                          "start": 42,
                          "type": "DebuggerStatement",
                        },
                        Node {
                          "end": 64,
                          "expression": Node {
                            "end": 63,
                            "left": Node {
                              "end": 59,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 7,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 6,
                                  "line": 5,
                                },
                              },
                              "name": "x",
                              "start": 58,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 11,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 6,
                                "line": 5,
                              },
                            },
                            "operator": "=",
                            "right": Node {
                              "end": 63,
                              "left": Node {
                                "end": 61,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "x",
                                "start": 60,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 11,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 63,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 11,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 10,
                                    "line": 5,
                                  },
                                },
                                "raw": "1",
                                "start": 62,
                                "type": "Literal",
                                "value": 1,
                              },
                              "start": 60,
                              "type": "BinaryExpression",
                            },
                            "start": 58,
                            "type": "AssignmentExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 12,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 6,
                              "line": 5,
                            },
                          },
                          "start": 58,
                          "type": "ExpressionStatement",
                        },
                      ],
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 5,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 16,
                          "line": 3,
                        },
                      },
                      "start": 34,
                      "type": "BlockStatement",
                    },
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 22,
                    "test": Node {
                      "end": 33,
                      "left": Node {
                        "end": 29,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 11,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 10,
                            "line": 3,
                          },
                        },
                        "name": "x",
                        "start": 28,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 3,
                        },
                      },
                      "operator": ">",
                      "right": Node {
                        "end": 33,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 15,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 14,
                            "line": 3,
                          },
                        },
                        "raw": "1",
                        "start": 32,
                        "type": "Literal",
                        "value": 1,
                      },
                      "start": 28,
                      "type": "BinaryExpression",
                    },
                    "type": "WhileStatement",
                  },
                ],
                "end": 74,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "start": 16,
                "type": "BlockStatement",
              },
              "end": 74,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "x",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 83,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 81,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 6,
                        "line": 8,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 8,
                      },
                    },
                    "raw": "10",
                    "start": 79,
                    "type": "Literal",
                    "value": 10,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 8,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 8,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 82,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 8,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 8,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 8,
                  "line": 8,
                },
                "start": Position {
                  "column": 2,
                  "line": 8,
                },
              },
              "start": 77,
              "type": "ExpressionStatement",
            },
          ],
          "end": 86,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 9,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`debugger; pauses while 2`] = `""`;

exports[`debugger; statement basic test 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 0,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": 2,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 25,
          "loc": SourceLocation {
            "end": Position {
              "column": 11,
              "line": 3,
            },
            "start": Position {
              "column": 2,
              "line": 3,
            },
          },
          "start": 16,
          "type": "DebuggerStatement",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 12,
                  "id": Node {
                    "end": 8,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 7,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 2,
                      },
                    },
                    "name": "a",
                    "start": 7,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 12,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "raw": "2",
                    "start": 11,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 2,
                    },
                  },
                  "start": 7,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 13,
              "kind": "let",
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "type": "VariableDeclaration",
            },
            Node {
              "end": 25,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 3,
                },
                "start": Position {
                  "column": 2,
                  "line": 3,
                },
              },
              "start": 16,
              "type": "DebuggerStatement",
            },
          ],
          "end": 28,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 4,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`debugger; statement basic test 2`] = `""`;

exports[`debugger; statement execution sequence 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 2,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": 10,
}
`;

exports[`debugger; statement execution sequence 2`] = `""`;

exports[`debugger; statement hoisting 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 4,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 108,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 9,
                },
                "start": Position {
                  "column": 2,
                  "line": 9,
                },
              },
              "name": "a",
              "start": 107,
              "type": "Identifier",
            },
            "end": 112,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 9,
              },
              "start": Position {
                "column": 2,
                "line": 9,
              },
            },
            "start": 107,
            "type": "CallExpression",
          },
          "head": Object {
            "b": Symbol(Used to implement hoisting),
            "c": Symbol(Used to implement hoisting),
            "x": 10,
            "z": Symbol(Used to implement hoisting),
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 31,
          "loc": SourceLocation {
            "end": Position {
              "column": 13,
              "line": 3,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 22,
          "type": "DebuggerStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 111,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 9,
                },
                "start": Position {
                  "column": 4,
                  "line": 9,
                },
              },
              "raw": "10",
              "start": 109,
              "type": "Literal",
              "value": 10,
            },
          ],
          "callee": Node {
            "end": 108,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 9,
              },
              "start": Position {
                "column": 2,
                "line": 9,
              },
            },
            "name": "a",
            "start": 107,
            "type": "Identifier",
          },
          "end": 112,
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 9,
            },
            "start": Position {
              "column": 2,
              "line": 9,
            },
          },
          "start": 107,
          "type": "CallExpression",
        },
        Node {
          "end": 113,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 111,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 9,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 9,
                  },
                },
                "raw": "10",
                "start": 109,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 108,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 9,
                },
                "start": Position {
                  "column": 2,
                  "line": 9,
                },
              },
              "name": "a",
              "start": 107,
              "type": "Identifier",
            },
            "end": 112,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 9,
              },
              "start": Position {
                "column": 2,
                "line": 9,
              },
            },
            "start": 107,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 9,
            },
            "start": Position {
              "column": 2,
              "line": 9,
            },
          },
          "start": 107,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "end": 31,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 22,
                    "type": "DebuggerStatement",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 46,
                        "id": Node {
                          "end": 41,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "name": "z",
                          "start": 40,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 4,
                            },
                          },
                          "raw": "20",
                          "start": 44,
                          "type": "Literal",
                          "value": 20,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 14,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "start": 40,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 47,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "start": 36,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 65,
                        "id": Node {
                          "end": 57,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 5,
                            },
                          },
                          "name": "c",
                          "start": 56,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 65,
                          "left": Node {
                            "end": 61,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 13,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 5,
                              },
                            },
                            "name": "z",
                            "start": 60,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 17,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 5,
                            },
                          },
                          "operator": "*",
                          "right": Node {
                            "end": 65,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 17,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 16,
                                "line": 5,
                              },
                            },
                            "name": "x",
                            "start": 64,
                            "type": "Identifier",
                          },
                          "start": 60,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 17,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 5,
                          },
                        },
                        "start": 56,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 66,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "start": 52,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 85,
                        "id": Node {
                          "end": 76,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 6,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 6,
                            },
                          },
                          "name": "b",
                          "start": 75,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 6,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 6,
                            },
                          },
                          "raw": "123095",
                          "start": 79,
                          "type": "Literal",
                          "value": 123095,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 6,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 6,
                          },
                        },
                        "start": 75,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 86,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 19,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 6,
                      },
                    },
                    "start": 71,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "argument": Node {
                      "end": 99,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 7,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 7,
                        },
                      },
                      "name": "x",
                      "start": 98,
                      "type": "Identifier",
                    },
                    "end": 100,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "start": 91,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 104,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 8,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "start": 16,
                "type": "BlockStatement",
              },
              "end": 104,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 8,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "x",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 113,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 111,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 6,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 9,
                      },
                    },
                    "raw": "10",
                    "start": 109,
                    "type": "Literal",
                    "value": 10,
                  },
                ],
                "callee": Node {
                  "end": 108,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 9,
                    },
                  },
                  "name": "a",
                  "start": 107,
                  "type": "Identifier",
                },
                "end": 112,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 9,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 9,
                  },
                },
                "start": 107,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 8,
                  "line": 9,
                },
                "start": Position {
                  "column": 2,
                  "line": 9,
                },
              },
              "start": 107,
              "type": "ExpressionStatement",
            },
          ],
          "end": 116,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 10,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`debugger; statement hoisting 2`] = `""`;

exports[`debugger; statement in function 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 1,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 53,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 6,
                },
              },
              "name": "a",
              "start": 52,
              "type": "Identifier",
            },
            "end": 57,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 6,
              },
              "start": Position {
                "column": 2,
                "line": 6,
              },
            },
            "start": 52,
            "type": "CallExpression",
          },
          "head": Object {
            "x": 10,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 31,
          "loc": SourceLocation {
            "end": Position {
              "column": 13,
              "line": 3,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 22,
          "type": "DebuggerStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 56,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 6,
                },
                "start": Position {
                  "column": 4,
                  "line": 6,
                },
              },
              "raw": "10",
              "start": 54,
              "type": "Literal",
              "value": 10,
            },
          ],
          "callee": Node {
            "end": 53,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 6,
              },
              "start": Position {
                "column": 2,
                "line": 6,
              },
            },
            "name": "a",
            "start": 52,
            "type": "Identifier",
          },
          "end": 57,
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 6,
            },
            "start": Position {
              "column": 2,
              "line": 6,
            },
          },
          "start": 52,
          "type": "CallExpression",
        },
        Node {
          "end": 58,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 56,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "raw": "10",
                "start": 54,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 53,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 6,
                },
              },
              "name": "a",
              "start": 52,
              "type": "Identifier",
            },
            "end": 57,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 6,
              },
              "start": Position {
                "column": 2,
                "line": 6,
              },
            },
            "start": 52,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 6,
            },
            "start": Position {
              "column": 2,
              "line": 6,
            },
          },
          "start": 52,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "end": 31,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 22,
                    "type": "DebuggerStatement",
                  },
                  Node {
                    "argument": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 4,
                        },
                      },
                      "name": "x",
                      "start": 43,
                      "type": "Identifier",
                    },
                    "end": 45,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "start": 36,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "start": 16,
                "type": "BlockStatement",
              },
              "end": 49,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "x",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 58,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 56,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 6,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 6,
                      },
                    },
                    "raw": "10",
                    "start": 54,
                    "type": "Literal",
                    "value": 10,
                  },
                ],
                "callee": Node {
                  "end": 53,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 6,
                    },
                  },
                  "name": "a",
                  "start": 52,
                  "type": "Identifier",
                },
                "end": 57,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 6,
                  },
                },
                "start": 52,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 8,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 6,
                },
              },
              "start": 52,
              "type": "ExpressionStatement",
            },
          ],
          "end": 61,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 7,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`debugger; statement in function 2`] = `""`;

exports[`debugger; statement test function scope 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 266,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 17,
                },
                "start": Position {
                  "column": 2,
                  "line": 17,
                },
              },
              "name": "a",
              "start": 265,
              "type": "Identifier",
            },
            "end": 270,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 17,
              },
              "start": Position {
                "column": 2,
                "line": 17,
              },
            },
            "start": 265,
            "type": "CallExpression",
          },
          "head": Object {
            "b": 100,
            "c": 200,
            "d": 300,
            "e": 30000,
            "f": 60000,
            "g": 2000,
            "h": 2300,
            "i": 666.6666666666666,
            "j": 600,
            "k": 0.0033333333333333335,
            "l": 0.5,
            "x": 10,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 244,
          "loc": SourceLocation {
            "end": Position {
              "column": 13,
              "line": 14,
            },
            "start": Position {
              "column": 4,
              "line": 14,
            },
          },
          "start": 235,
          "type": "DebuggerStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 269,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 17,
                },
                "start": Position {
                  "column": 4,
                  "line": 17,
                },
              },
              "raw": "10",
              "start": 267,
              "type": "Literal",
              "value": 10,
            },
          ],
          "callee": Node {
            "end": 266,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 17,
              },
              "start": Position {
                "column": 2,
                "line": 17,
              },
            },
            "name": "a",
            "start": 265,
            "type": "Identifier",
          },
          "end": 270,
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 17,
            },
            "start": Position {
              "column": 2,
              "line": 17,
            },
          },
          "start": 265,
          "type": "CallExpression",
        },
        Node {
          "end": 271,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 269,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 17,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 17,
                  },
                },
                "raw": "10",
                "start": 267,
                "type": "Literal",
                "value": 10,
              },
            ],
            "callee": Node {
              "end": 266,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 17,
                },
                "start": Position {
                  "column": 2,
                  "line": 17,
                },
              },
              "name": "a",
              "start": 265,
              "type": "Identifier",
            },
            "end": 270,
            "loc": SourceLocation {
              "end": Position {
                "column": 7,
                "line": 17,
              },
              "start": Position {
                "column": 2,
                "line": 17,
              },
            },
            "start": 265,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 17,
            },
            "start": Position {
              "column": 2,
              "line": 17,
            },
          },
          "start": 265,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 36,
                        "id": Node {
                          "end": 27,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 3,
                            },
                          },
                          "name": "b",
                          "start": 26,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 36,
                          "left": Node {
                            "end": 32,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 14,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 3,
                              },
                            },
                            "raw": "10",
                            "start": 30,
                            "type": "Literal",
                            "value": 10,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 3,
                            },
                          },
                          "operator": "*",
                          "right": Node {
                            "end": 36,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 17,
                                "line": 3,
                              },
                            },
                            "name": "x",
                            "start": 35,
                            "type": "Identifier",
                          },
                          "start": 30,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 3,
                          },
                        },
                        "start": 26,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 37,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 19,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 22,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 56,
                        "id": Node {
                          "end": 47,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "name": "c",
                          "start": 46,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 56,
                          "left": Node {
                            "end": 52,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 14,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 4,
                              },
                            },
                            "raw": "20",
                            "start": 50,
                            "type": "Literal",
                            "value": 20,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 4,
                            },
                          },
                          "operator": "*",
                          "right": Node {
                            "end": 56,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 17,
                                "line": 4,
                              },
                            },
                            "name": "x",
                            "start": 55,
                            "type": "Identifier",
                          },
                          "start": 50,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "start": 46,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 57,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 19,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "start": 42,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 76,
                        "id": Node {
                          "end": 67,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 5,
                            },
                          },
                          "name": "d",
                          "start": 66,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 76,
                          "left": Node {
                            "end": 72,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 14,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 5,
                              },
                            },
                            "raw": "30",
                            "start": 70,
                            "type": "Literal",
                            "value": 30,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 5,
                            },
                          },
                          "operator": "*",
                          "right": Node {
                            "end": 76,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 17,
                                "line": 5,
                              },
                            },
                            "name": "x",
                            "start": 75,
                            "type": "Identifier",
                          },
                          "start": 70,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 5,
                          },
                        },
                        "start": 66,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 77,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 19,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "start": 62,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 95,
                        "id": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 6,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 6,
                            },
                          },
                          "name": "e",
                          "start": 86,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 95,
                          "left": Node {
                            "end": 91,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 13,
                                "line": 6,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 6,
                              },
                            },
                            "name": "d",
                            "start": 90,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 17,
                              "line": 6,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 6,
                            },
                          },
                          "operator": "*",
                          "right": Node {
                            "end": 95,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 17,
                                "line": 6,
                              },
                              "start": Position {
                                "column": 16,
                                "line": 6,
                              },
                            },
                            "name": "b",
                            "start": 94,
                            "type": "Identifier",
                          },
                          "start": 90,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 17,
                            "line": 6,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 6,
                          },
                        },
                        "start": 86,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 96,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 6,
                      },
                    },
                    "start": 82,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 114,
                        "id": Node {
                          "end": 106,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 7,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 7,
                            },
                          },
                          "name": "f",
                          "start": 105,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 114,
                          "left": Node {
                            "end": 110,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 13,
                                "line": 7,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 7,
                              },
                            },
                            "name": "c",
                            "start": 109,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 17,
                              "line": 7,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 7,
                            },
                          },
                          "operator": "*",
                          "right": Node {
                            "end": 114,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 17,
                                "line": 7,
                              },
                              "start": Position {
                                "column": 16,
                                "line": 7,
                              },
                            },
                            "name": "d",
                            "start": 113,
                            "type": "Identifier",
                          },
                          "start": 109,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 17,
                            "line": 7,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 7,
                          },
                        },
                        "start": 105,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 115,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "start": 101,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 134,
                        "id": Node {
                          "end": 125,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 8,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 8,
                            },
                          },
                          "name": "g",
                          "start": 124,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 134,
                          "left": Node {
                            "end": 130,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 14,
                                "line": 8,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 8,
                              },
                            },
                            "raw": "10",
                            "start": 128,
                            "type": "Literal",
                            "value": 10,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 8,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 8,
                            },
                          },
                          "operator": "*",
                          "right": Node {
                            "end": 134,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 8,
                              },
                              "start": Position {
                                "column": 17,
                                "line": 8,
                              },
                            },
                            "name": "c",
                            "start": 133,
                            "type": "Identifier",
                          },
                          "start": 128,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 8,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 8,
                          },
                        },
                        "start": 124,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 135,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 19,
                        "line": 8,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 8,
                      },
                    },
                    "start": 120,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 153,
                        "id": Node {
                          "end": 145,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 9,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 9,
                            },
                          },
                          "name": "h",
                          "start": 144,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 153,
                          "left": Node {
                            "end": 149,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 13,
                                "line": 9,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 9,
                              },
                            },
                            "name": "g",
                            "start": 148,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 17,
                              "line": 9,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 9,
                            },
                          },
                          "operator": "+",
                          "right": Node {
                            "end": 153,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 17,
                                "line": 9,
                              },
                              "start": Position {
                                "column": 16,
                                "line": 9,
                              },
                            },
                            "name": "d",
                            "start": 152,
                            "type": "Identifier",
                          },
                          "start": 148,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 17,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 9,
                          },
                        },
                        "start": 144,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 154,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 9,
                      },
                    },
                    "start": 140,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 172,
                        "id": Node {
                          "end": 164,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 10,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 10,
                            },
                          },
                          "name": "i",
                          "start": 163,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 172,
                          "left": Node {
                            "end": 168,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 13,
                                "line": 10,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 10,
                              },
                            },
                            "name": "g",
                            "start": 167,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 17,
                              "line": 10,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 10,
                            },
                          },
                          "operator": "/",
                          "right": Node {
                            "end": 172,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 17,
                                "line": 10,
                              },
                              "start": Position {
                                "column": 16,
                                "line": 10,
                              },
                            },
                            "raw": "3",
                            "start": 171,
                            "type": "Literal",
                            "value": 3,
                          },
                          "start": 167,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 17,
                            "line": 10,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 10,
                          },
                        },
                        "start": 163,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 173,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 10,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 10,
                      },
                    },
                    "start": 159,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 191,
                        "id": Node {
                          "end": 183,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 11,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 11,
                            },
                          },
                          "name": "j",
                          "start": 182,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 191,
                          "left": Node {
                            "end": 187,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 13,
                                "line": 11,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 11,
                              },
                            },
                            "name": "f",
                            "start": 186,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 17,
                              "line": 11,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 11,
                            },
                          },
                          "operator": "/",
                          "right": Node {
                            "end": 191,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 17,
                                "line": 11,
                              },
                              "start": Position {
                                "column": 16,
                                "line": 11,
                              },
                            },
                            "name": "b",
                            "start": 190,
                            "type": "Identifier",
                          },
                          "start": 186,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 17,
                            "line": 11,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 11,
                          },
                        },
                        "start": 182,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 192,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 11,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 11,
                      },
                    },
                    "start": 178,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 210,
                        "id": Node {
                          "end": 202,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 12,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 12,
                            },
                          },
                          "name": "k",
                          "start": 201,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 210,
                          "left": Node {
                            "end": 206,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 13,
                                "line": 12,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 12,
                              },
                            },
                            "name": "b",
                            "start": 205,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 17,
                              "line": 12,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 12,
                            },
                          },
                          "operator": "/",
                          "right": Node {
                            "end": 210,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 17,
                                "line": 12,
                              },
                              "start": Position {
                                "column": 16,
                                "line": 12,
                              },
                            },
                            "name": "e",
                            "start": 209,
                            "type": "Identifier",
                          },
                          "start": 205,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 17,
                            "line": 12,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 12,
                          },
                        },
                        "start": 201,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 211,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 12,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 12,
                      },
                    },
                    "start": 197,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 229,
                        "id": Node {
                          "end": 221,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 13,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 13,
                            },
                          },
                          "name": "l",
                          "start": 220,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 229,
                          "left": Node {
                            "end": 225,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 13,
                                "line": 13,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 13,
                              },
                            },
                            "name": "b",
                            "start": 224,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 17,
                              "line": 13,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 13,
                            },
                          },
                          "operator": "/",
                          "right": Node {
                            "end": 229,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 17,
                                "line": 13,
                              },
                              "start": Position {
                                "column": 16,
                                "line": 13,
                              },
                            },
                            "name": "c",
                            "start": 228,
                            "type": "Identifier",
                          },
                          "start": 224,
                          "type": "BinaryExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 17,
                            "line": 13,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 13,
                          },
                        },
                        "start": 220,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 230,
                    "kind": "let",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 13,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 13,
                      },
                    },
                    "start": 216,
                    "type": "VariableDeclaration",
                  },
                  Node {
                    "end": 244,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 14,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 14,
                      },
                    },
                    "start": 235,
                    "type": "DebuggerStatement",
                  },
                  Node {
                    "argument": Node {
                      "end": 257,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 15,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 15,
                        },
                      },
                      "name": "x",
                      "start": 256,
                      "type": "Identifier",
                    },
                    "end": 258,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 15,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 15,
                      },
                    },
                    "start": 249,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 262,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 16,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "start": 16,
                "type": "BlockStatement",
              },
              "end": 262,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 16,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "x",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 271,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 269,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 6,
                        "line": 17,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 17,
                      },
                    },
                    "raw": "10",
                    "start": 267,
                    "type": "Literal",
                    "value": 10,
                  },
                ],
                "callee": Node {
                  "end": 266,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 17,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 17,
                    },
                  },
                  "name": "a",
                  "start": 265,
                  "type": "Identifier",
                },
                "end": 270,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 17,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 17,
                  },
                },
                "start": 265,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 8,
                  "line": 17,
                },
                "start": Position {
                  "column": 2,
                  "line": 17,
                },
              },
              "start": 265,
              "type": "ExpressionStatement",
            },
          ],
          "end": 274,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 18,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`debugger; statement test function scope 2`] = `""`;

exports[`setBreakpointAtLine basic 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 7,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": Symbol(Used to implement hoisting),
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "b": Symbol(Used to implement hoisting),
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "declarations": Array [
            Node {
              "end": 15,
              "id": Node {
                "end": 10,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 9,
                "type": "Identifier",
              },
              "init": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 2,
                  },
                },
                "raw": "10",
                "start": 13,
                "type": "Literal",
                "value": 10,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 8,
                  "line": 2,
                },
              },
              "start": 9,
              "type": "VariableDeclarator",
            },
          ],
          "end": 16,
          "kind": "const",
          "loc": SourceLocation {
            "end": Position {
              "column": 15,
              "line": 2,
            },
            "start": Position {
              "column": 2,
              "line": 2,
            },
          },
          "start": 3,
          "type": "VariableDeclaration",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 15,
                  "id": Node {
                    "end": 10,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 2,
                      },
                    },
                    "name": "a",
                    "start": 9,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 15,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 14,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 2,
                      },
                    },
                    "raw": "10",
                    "start": 13,
                    "type": "Literal",
                    "value": 10,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 2,
                    },
                  },
                  "start": 9,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 16,
              "kind": "const",
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "type": "VariableDeclaration",
            },
            Node {
              "declarations": Array [
                Node {
                  "end": 31,
                  "id": Node {
                    "end": 26,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 3,
                      },
                    },
                    "name": "b",
                    "start": 25,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 31,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 14,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 3,
                      },
                    },
                    "raw": "20",
                    "start": 29,
                    "type": "Literal",
                    "value": 20,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 3,
                    },
                  },
                  "start": 25,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 32,
              "kind": "const",
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 3,
                },
                "start": Position {
                  "column": 2,
                  "line": 3,
                },
              },
              "start": 19,
              "type": "VariableDeclaration",
            },
          ],
          "end": 35,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 4,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine basic 2`] = `""`;

exports[`setBreakpointAtLine for loops 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 15,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "b": Symbol(Used to implement hoisting),
          },
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 1,
            },
            "name": "forBlockEnvironment",
            "tail": Object {
              "head": Object {
                "i": 1,
              },
              "name": "forLoopEnvironment",
              "tail": Object {
                "head": Object {
                  "Infinity": Infinity,
                  "NaN": NaN,
                  "accumulate": [Function],
                  "append": [Function],
                  "array_length": [Function],
                  "build_list": [Function],
                  "display": [Function],
                  "draw_data": [Function],
                  "enum_list": [Function],
                  "equal": [Function],
                  "error": [Function],
                  "filter": [Function],
                  "for_each": [Function],
                  "head": [Function],
                  "is_array": [Function],
                  "is_boolean": [Function],
                  "is_function": [Function],
                  "is_list": [Function],
                  "is_null": [Function],
                  "is_number": [Function],
                  "is_pair": [Function],
                  "is_string": [Function],
                  "is_undefined": [Function],
                  "length": [Function],
                  "list": [Function],
                  "list_ref": [Function],
                  "list_to_string": [Function],
                  "map": [Function],
                  "math_E": 2.718281828459045,
                  "math_LN10": 2.302585092994046,
                  "math_LN2": 0.6931471805599453,
                  "math_LOG10E": 0.4342944819032518,
                  "math_LOG2E": 1.4426950408889634,
                  "math_PI": 3.141592653589793,
                  "math_SQRT1_2": 0.7071067811865476,
                  "math_SQRT2": 1.4142135623730951,
                  "math_abs": [Function],
                  "math_acos": [Function],
                  "math_acosh": [Function],
                  "math_asin": [Function],
                  "math_asinh": [Function],
                  "math_atan": [Function],
                  "math_atan2": [Function],
                  "math_atanh": [Function],
                  "math_cbrt": [Function],
                  "math_ceil": [Function],
                  "math_clz32": [Function],
                  "math_cos": [Function],
                  "math_cosh": [Function],
                  "math_exp": [Function],
                  "math_expm1": [Function],
                  "math_floor": [Function],
                  "math_fround": [Function],
                  "math_hypot": [Function],
                  "math_imul": [Function],
                  "math_log": [Function],
                  "math_log10": [Function],
                  "math_log1p": [Function],
                  "math_log2": [Function],
                  "math_max": [Function],
                  "math_min": [Function],
                  "math_pow": [Function],
                  "math_random": [Function],
                  "math_round": [Function],
                  "math_sign": [Function],
                  "math_sin": [Function],
                  "math_sinh": [Function],
                  "math_sqrt": [Function],
                  "math_tan": [Function],
                  "math_tanh": [Function],
                  "math_trunc": [Function],
                  "member": [Function],
                  "pair": [Function],
                  "parse_int": [Function],
                  "prompt": [Function],
                  "raw_display": [Function],
                  "remove": [Function],
                  "remove_all": [Function],
                  "reverse": [Function],
                  "runtime": [Function],
                  "set_head": [Function],
                  "set_tail": [Function],
                  "stringify": [Function],
                  "tail": [Function],
                  "undefined": undefined,
                },
                "name": "global",
                "tail": null,
              },
              "thisContext": [Circular],
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 1,
          },
          "name": "forBlockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 1,
            },
            "name": "forLoopEnvironment",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "accumulate": [Function],
                "append": [Function],
                "array_length": [Function],
                "build_list": [Function],
                "display": [Function],
                "draw_data": [Function],
                "enum_list": [Function],
                "equal": [Function],
                "error": [Function],
                "filter": [Function],
                "for_each": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "length": [Function],
                "list": [Function],
                "list_ref": [Function],
                "list_to_string": [Function],
                "map": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "member": [Function],
                "pair": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "remove": [Function],
                "remove_all": [Function],
                "reverse": [Function],
                "runtime": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stringify": [Function],
                "tail": [Function],
                "undefined": undefined,
              },
              "name": "global",
              "tail": null,
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 1,
          },
          "name": "forLoopEnvironment",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "declarations": Array [
            Node {
              "end": 44,
              "id": Node {
                "end": 40,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 3,
                  },
                },
                "name": "b",
                "start": 39,
                "type": "Identifier",
              },
              "init": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "i",
                "start": 43,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 3,
                },
                "start": Position {
                  "column": 10,
                  "line": 3,
                },
              },
              "start": 39,
              "type": "VariableDeclarator",
            },
          ],
          "end": 45,
          "kind": "const",
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 3,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 33,
          "type": "VariableDeclaration",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 44,
                  "id": Node {
                    "end": 40,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 3,
                      },
                    },
                    "name": "b",
                    "start": 39,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 44,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 3,
                      },
                    },
                    "name": "i",
                    "start": 43,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 3,
                    },
                  },
                  "start": 39,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 45,
              "kind": "const",
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "start": 33,
              "type": "VariableDeclaration",
            },
          ],
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 26,
              "line": 2,
            },
          },
          "start": 27,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "declarations": Array [
                  Node {
                    "end": 44,
                    "id": Node {
                      "end": 40,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 3,
                        },
                      },
                      "name": "b",
                      "start": 39,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 3,
                        },
                      },
                      "name": "i",
                      "start": 43,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 3,
                      },
                    },
                    "start": 39,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 45,
                "kind": "const",
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "start": 33,
                "type": "VariableDeclaration",
              },
            ],
            "end": 49,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 4,
              },
              "start": Position {
                "column": 26,
                "line": 2,
              },
            },
            "start": 27,
            "type": "BlockStatement",
          },
          "end": 49,
          "init": Node {
            "declarations": Array [
              Node {
                "end": 14,
                "id": Node {
                  "end": 12,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 11,
                  "type": "Identifier",
                },
                "init": Node {
                  "end": 14,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 13,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 2,
                  },
                },
                "start": 11,
                "type": "VariableDeclarator",
              },
            ],
            "end": 14,
            "kind": "let",
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 2,
              },
              "start": Position {
                "column": 6,
                "line": 2,
              },
            },
            "start": 7,
            "type": "VariableDeclaration",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 2,
              "line": 2,
            },
          },
          "start": 3,
          "test": Node {
            "end": 19,
            "left": Node {
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 2,
                },
                "start": Position {
                  "column": 14,
                  "line": 2,
                },
              },
              "name": "i",
              "start": 15,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 2,
              },
              "start": Position {
                "column": 14,
                "line": 2,
              },
            },
            "operator": "<",
            "right": Node {
              "end": 19,
              "loc": SourceLocation {
                "end": Position {
                  "column": 18,
                  "line": 2,
                },
                "start": Position {
                  "column": 16,
                  "line": 2,
                },
              },
              "raw": "10",
              "start": 17,
              "type": "Literal",
              "value": 10,
            },
            "start": 15,
            "type": "BinaryExpression",
          },
          "type": "ForStatement",
          "update": Node {
            "end": 25,
            "left": Node {
              "end": 21,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 19,
                  "line": 2,
                },
              },
              "name": "i",
              "start": 20,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 24,
                "line": 2,
              },
              "start": Position {
                "column": 19,
                "line": 2,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 25,
              "left": Node {
                "end": 23,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 22,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 21,
                    "line": 2,
                  },
                },
                "name": "i",
                "start": 22,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "operator": "*",
              "right": Node {
                "end": 25,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 23,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 24,
                "type": "Literal",
                "value": 2,
              },
              "start": 22,
              "type": "BinaryExpression",
            },
            "start": 20,
            "type": "AssignmentExpression",
          },
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 44,
                        "id": Node {
                          "end": 40,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 11,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 10,
                              "line": 3,
                            },
                          },
                          "name": "b",
                          "start": 39,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 3,
                            },
                          },
                          "name": "i",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 15,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 10,
                            "line": 3,
                          },
                        },
                        "start": 39,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 45,
                    "kind": "const",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 33,
                    "type": "VariableDeclaration",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 26,
                    "line": 2,
                  },
                },
                "start": 27,
                "type": "BlockStatement",
              },
              "end": 49,
              "init": Node {
                "declarations": Array [
                  Node {
                    "end": 14,
                    "id": Node {
                      "end": 12,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 2,
                        },
                      },
                      "name": "i",
                      "start": 11,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 14,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 2,
                        },
                      },
                      "raw": "1",
                      "start": 13,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "start": 11,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 14,
                "kind": "let",
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 2,
                  },
                },
                "start": 7,
                "type": "VariableDeclaration",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "test": Node {
                "end": 19,
                "left": Node {
                  "end": 16,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 15,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 2,
                  },
                },
                "operator": "<",
                "right": Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "raw": "10",
                  "start": 17,
                  "type": "Literal",
                  "value": 10,
                },
                "start": 15,
                "type": "BinaryExpression",
              },
              "type": "ForStatement",
              "update": Node {
                "end": 25,
                "left": Node {
                  "end": 21,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 20,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 20,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 25,
                  "left": Node {
                    "end": 23,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 22,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "name": "i",
                    "start": 22,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 24,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 21,
                      "line": 2,
                    },
                  },
                  "operator": "*",
                  "right": Node {
                    "end": 25,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 24,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 23,
                        "line": 2,
                      },
                    },
                    "raw": "2",
                    "start": 24,
                    "type": "Literal",
                    "value": 2,
                  },
                  "start": 22,
                  "type": "BinaryExpression",
                },
                "start": 20,
                "type": "AssignmentExpression",
              },
            },
          ],
          "end": 52,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 5,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine for loops 2`] = `""`;

exports[`setBreakpointAtLine for loops 3`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 15,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "b": Symbol(Used to implement hoisting),
          },
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 2,
            },
            "name": "forBlockEnvironment",
            "tail": Object {
              "head": Object {
                "i": 2,
              },
              "name": "forLoopEnvironment",
              "tail": Object {
                "head": Object {
                  "Infinity": Infinity,
                  "NaN": NaN,
                  "accumulate": [Function],
                  "append": [Function],
                  "array_length": [Function],
                  "build_list": [Function],
                  "display": [Function],
                  "draw_data": [Function],
                  "enum_list": [Function],
                  "equal": [Function],
                  "error": [Function],
                  "filter": [Function],
                  "for_each": [Function],
                  "head": [Function],
                  "is_array": [Function],
                  "is_boolean": [Function],
                  "is_function": [Function],
                  "is_list": [Function],
                  "is_null": [Function],
                  "is_number": [Function],
                  "is_pair": [Function],
                  "is_string": [Function],
                  "is_undefined": [Function],
                  "length": [Function],
                  "list": [Function],
                  "list_ref": [Function],
                  "list_to_string": [Function],
                  "map": [Function],
                  "math_E": 2.718281828459045,
                  "math_LN10": 2.302585092994046,
                  "math_LN2": 0.6931471805599453,
                  "math_LOG10E": 0.4342944819032518,
                  "math_LOG2E": 1.4426950408889634,
                  "math_PI": 3.141592653589793,
                  "math_SQRT1_2": 0.7071067811865476,
                  "math_SQRT2": 1.4142135623730951,
                  "math_abs": [Function],
                  "math_acos": [Function],
                  "math_acosh": [Function],
                  "math_asin": [Function],
                  "math_asinh": [Function],
                  "math_atan": [Function],
                  "math_atan2": [Function],
                  "math_atanh": [Function],
                  "math_cbrt": [Function],
                  "math_ceil": [Function],
                  "math_clz32": [Function],
                  "math_cos": [Function],
                  "math_cosh": [Function],
                  "math_exp": [Function],
                  "math_expm1": [Function],
                  "math_floor": [Function],
                  "math_fround": [Function],
                  "math_hypot": [Function],
                  "math_imul": [Function],
                  "math_log": [Function],
                  "math_log10": [Function],
                  "math_log1p": [Function],
                  "math_log2": [Function],
                  "math_max": [Function],
                  "math_min": [Function],
                  "math_pow": [Function],
                  "math_random": [Function],
                  "math_round": [Function],
                  "math_sign": [Function],
                  "math_sin": [Function],
                  "math_sinh": [Function],
                  "math_sqrt": [Function],
                  "math_tan": [Function],
                  "math_tanh": [Function],
                  "math_trunc": [Function],
                  "member": [Function],
                  "pair": [Function],
                  "parse_int": [Function],
                  "prompt": [Function],
                  "raw_display": [Function],
                  "remove": [Function],
                  "remove_all": [Function],
                  "reverse": [Function],
                  "runtime": [Function],
                  "set_head": [Function],
                  "set_tail": [Function],
                  "stringify": [Function],
                  "tail": [Function],
                  "undefined": undefined,
                },
                "name": "global",
                "tail": null,
              },
              "thisContext": [Circular],
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 2,
          },
          "name": "forBlockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 2,
            },
            "name": "forLoopEnvironment",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "accumulate": [Function],
                "append": [Function],
                "array_length": [Function],
                "build_list": [Function],
                "display": [Function],
                "draw_data": [Function],
                "enum_list": [Function],
                "equal": [Function],
                "error": [Function],
                "filter": [Function],
                "for_each": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "length": [Function],
                "list": [Function],
                "list_ref": [Function],
                "list_to_string": [Function],
                "map": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "member": [Function],
                "pair": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "remove": [Function],
                "remove_all": [Function],
                "reverse": [Function],
                "runtime": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stringify": [Function],
                "tail": [Function],
                "undefined": undefined,
              },
              "name": "global",
              "tail": null,
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 2,
          },
          "name": "forLoopEnvironment",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "declarations": Array [
            Node {
              "end": 44,
              "id": Node {
                "end": 40,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 3,
                  },
                },
                "name": "b",
                "start": 39,
                "type": "Identifier",
              },
              "init": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "i",
                "start": 43,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 3,
                },
                "start": Position {
                  "column": 10,
                  "line": 3,
                },
              },
              "start": 39,
              "type": "VariableDeclarator",
            },
          ],
          "end": 45,
          "kind": "const",
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 3,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 33,
          "type": "VariableDeclaration",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 44,
                  "id": Node {
                    "end": 40,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 3,
                      },
                    },
                    "name": "b",
                    "start": 39,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 44,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 3,
                      },
                    },
                    "name": "i",
                    "start": 43,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 3,
                    },
                  },
                  "start": 39,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 45,
              "kind": "const",
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "start": 33,
              "type": "VariableDeclaration",
            },
          ],
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 26,
              "line": 2,
            },
          },
          "start": 27,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "declarations": Array [
                  Node {
                    "end": 44,
                    "id": Node {
                      "end": 40,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 3,
                        },
                      },
                      "name": "b",
                      "start": 39,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 3,
                        },
                      },
                      "name": "i",
                      "start": 43,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 3,
                      },
                    },
                    "start": 39,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 45,
                "kind": "const",
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "start": 33,
                "type": "VariableDeclaration",
              },
            ],
            "end": 49,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 4,
              },
              "start": Position {
                "column": 26,
                "line": 2,
              },
            },
            "start": 27,
            "type": "BlockStatement",
          },
          "end": 49,
          "init": Node {
            "declarations": Array [
              Node {
                "end": 14,
                "id": Node {
                  "end": 12,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 11,
                  "type": "Identifier",
                },
                "init": Node {
                  "end": 14,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 13,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 2,
                  },
                },
                "start": 11,
                "type": "VariableDeclarator",
              },
            ],
            "end": 14,
            "kind": "let",
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 2,
              },
              "start": Position {
                "column": 6,
                "line": 2,
              },
            },
            "start": 7,
            "type": "VariableDeclaration",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 2,
              "line": 2,
            },
          },
          "start": 3,
          "test": Node {
            "end": 19,
            "left": Node {
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 2,
                },
                "start": Position {
                  "column": 14,
                  "line": 2,
                },
              },
              "name": "i",
              "start": 15,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 2,
              },
              "start": Position {
                "column": 14,
                "line": 2,
              },
            },
            "operator": "<",
            "right": Node {
              "end": 19,
              "loc": SourceLocation {
                "end": Position {
                  "column": 18,
                  "line": 2,
                },
                "start": Position {
                  "column": 16,
                  "line": 2,
                },
              },
              "raw": "10",
              "start": 17,
              "type": "Literal",
              "value": 10,
            },
            "start": 15,
            "type": "BinaryExpression",
          },
          "type": "ForStatement",
          "update": Node {
            "end": 25,
            "left": Node {
              "end": 21,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 19,
                  "line": 2,
                },
              },
              "name": "i",
              "start": 20,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 24,
                "line": 2,
              },
              "start": Position {
                "column": 19,
                "line": 2,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 25,
              "left": Node {
                "end": 23,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 22,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 21,
                    "line": 2,
                  },
                },
                "name": "i",
                "start": 22,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "operator": "*",
              "right": Node {
                "end": 25,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 23,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 24,
                "type": "Literal",
                "value": 2,
              },
              "start": 22,
              "type": "BinaryExpression",
            },
            "start": 20,
            "type": "AssignmentExpression",
          },
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 44,
                        "id": Node {
                          "end": 40,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 11,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 10,
                              "line": 3,
                            },
                          },
                          "name": "b",
                          "start": 39,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 3,
                            },
                          },
                          "name": "i",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 15,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 10,
                            "line": 3,
                          },
                        },
                        "start": 39,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 45,
                    "kind": "const",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 33,
                    "type": "VariableDeclaration",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 26,
                    "line": 2,
                  },
                },
                "start": 27,
                "type": "BlockStatement",
              },
              "end": 49,
              "init": Node {
                "declarations": Array [
                  Node {
                    "end": 14,
                    "id": Node {
                      "end": 12,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 2,
                        },
                      },
                      "name": "i",
                      "start": 11,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 14,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 2,
                        },
                      },
                      "raw": "1",
                      "start": 13,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "start": 11,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 14,
                "kind": "let",
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 2,
                  },
                },
                "start": 7,
                "type": "VariableDeclaration",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "test": Node {
                "end": 19,
                "left": Node {
                  "end": 16,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 15,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 2,
                  },
                },
                "operator": "<",
                "right": Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "raw": "10",
                  "start": 17,
                  "type": "Literal",
                  "value": 10,
                },
                "start": 15,
                "type": "BinaryExpression",
              },
              "type": "ForStatement",
              "update": Node {
                "end": 25,
                "left": Node {
                  "end": 21,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 20,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 20,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 25,
                  "left": Node {
                    "end": 23,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 22,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "name": "i",
                    "start": 22,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 24,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 21,
                      "line": 2,
                    },
                  },
                  "operator": "*",
                  "right": Node {
                    "end": 25,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 24,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 23,
                        "line": 2,
                      },
                    },
                    "raw": "2",
                    "start": 24,
                    "type": "Literal",
                    "value": 2,
                  },
                  "start": 22,
                  "type": "BinaryExpression",
                },
                "start": 20,
                "type": "AssignmentExpression",
              },
            },
          ],
          "end": 52,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 5,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine for loops 4`] = `""`;

exports[`setBreakpointAtLine for loops 5`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 15,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "b": Symbol(Used to implement hoisting),
          },
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 4,
            },
            "name": "forBlockEnvironment",
            "tail": Object {
              "head": Object {
                "i": 4,
              },
              "name": "forLoopEnvironment",
              "tail": Object {
                "head": Object {
                  "Infinity": Infinity,
                  "NaN": NaN,
                  "accumulate": [Function],
                  "append": [Function],
                  "array_length": [Function],
                  "build_list": [Function],
                  "display": [Function],
                  "draw_data": [Function],
                  "enum_list": [Function],
                  "equal": [Function],
                  "error": [Function],
                  "filter": [Function],
                  "for_each": [Function],
                  "head": [Function],
                  "is_array": [Function],
                  "is_boolean": [Function],
                  "is_function": [Function],
                  "is_list": [Function],
                  "is_null": [Function],
                  "is_number": [Function],
                  "is_pair": [Function],
                  "is_string": [Function],
                  "is_undefined": [Function],
                  "length": [Function],
                  "list": [Function],
                  "list_ref": [Function],
                  "list_to_string": [Function],
                  "map": [Function],
                  "math_E": 2.718281828459045,
                  "math_LN10": 2.302585092994046,
                  "math_LN2": 0.6931471805599453,
                  "math_LOG10E": 0.4342944819032518,
                  "math_LOG2E": 1.4426950408889634,
                  "math_PI": 3.141592653589793,
                  "math_SQRT1_2": 0.7071067811865476,
                  "math_SQRT2": 1.4142135623730951,
                  "math_abs": [Function],
                  "math_acos": [Function],
                  "math_acosh": [Function],
                  "math_asin": [Function],
                  "math_asinh": [Function],
                  "math_atan": [Function],
                  "math_atan2": [Function],
                  "math_atanh": [Function],
                  "math_cbrt": [Function],
                  "math_ceil": [Function],
                  "math_clz32": [Function],
                  "math_cos": [Function],
                  "math_cosh": [Function],
                  "math_exp": [Function],
                  "math_expm1": [Function],
                  "math_floor": [Function],
                  "math_fround": [Function],
                  "math_hypot": [Function],
                  "math_imul": [Function],
                  "math_log": [Function],
                  "math_log10": [Function],
                  "math_log1p": [Function],
                  "math_log2": [Function],
                  "math_max": [Function],
                  "math_min": [Function],
                  "math_pow": [Function],
                  "math_random": [Function],
                  "math_round": [Function],
                  "math_sign": [Function],
                  "math_sin": [Function],
                  "math_sinh": [Function],
                  "math_sqrt": [Function],
                  "math_tan": [Function],
                  "math_tanh": [Function],
                  "math_trunc": [Function],
                  "member": [Function],
                  "pair": [Function],
                  "parse_int": [Function],
                  "prompt": [Function],
                  "raw_display": [Function],
                  "remove": [Function],
                  "remove_all": [Function],
                  "reverse": [Function],
                  "runtime": [Function],
                  "set_head": [Function],
                  "set_tail": [Function],
                  "stringify": [Function],
                  "tail": [Function],
                  "undefined": undefined,
                },
                "name": "global",
                "tail": null,
              },
              "thisContext": [Circular],
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 4,
          },
          "name": "forBlockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 4,
            },
            "name": "forLoopEnvironment",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "accumulate": [Function],
                "append": [Function],
                "array_length": [Function],
                "build_list": [Function],
                "display": [Function],
                "draw_data": [Function],
                "enum_list": [Function],
                "equal": [Function],
                "error": [Function],
                "filter": [Function],
                "for_each": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "length": [Function],
                "list": [Function],
                "list_ref": [Function],
                "list_to_string": [Function],
                "map": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "member": [Function],
                "pair": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "remove": [Function],
                "remove_all": [Function],
                "reverse": [Function],
                "runtime": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stringify": [Function],
                "tail": [Function],
                "undefined": undefined,
              },
              "name": "global",
              "tail": null,
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 4,
          },
          "name": "forLoopEnvironment",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "declarations": Array [
            Node {
              "end": 44,
              "id": Node {
                "end": 40,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 3,
                  },
                },
                "name": "b",
                "start": 39,
                "type": "Identifier",
              },
              "init": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "i",
                "start": 43,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 3,
                },
                "start": Position {
                  "column": 10,
                  "line": 3,
                },
              },
              "start": 39,
              "type": "VariableDeclarator",
            },
          ],
          "end": 45,
          "kind": "const",
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 3,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 33,
          "type": "VariableDeclaration",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 44,
                  "id": Node {
                    "end": 40,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 3,
                      },
                    },
                    "name": "b",
                    "start": 39,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 44,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 3,
                      },
                    },
                    "name": "i",
                    "start": 43,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 3,
                    },
                  },
                  "start": 39,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 45,
              "kind": "const",
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "start": 33,
              "type": "VariableDeclaration",
            },
          ],
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 26,
              "line": 2,
            },
          },
          "start": 27,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "declarations": Array [
                  Node {
                    "end": 44,
                    "id": Node {
                      "end": 40,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 3,
                        },
                      },
                      "name": "b",
                      "start": 39,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 3,
                        },
                      },
                      "name": "i",
                      "start": 43,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 3,
                      },
                    },
                    "start": 39,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 45,
                "kind": "const",
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "start": 33,
                "type": "VariableDeclaration",
              },
            ],
            "end": 49,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 4,
              },
              "start": Position {
                "column": 26,
                "line": 2,
              },
            },
            "start": 27,
            "type": "BlockStatement",
          },
          "end": 49,
          "init": Node {
            "declarations": Array [
              Node {
                "end": 14,
                "id": Node {
                  "end": 12,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 11,
                  "type": "Identifier",
                },
                "init": Node {
                  "end": 14,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 13,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 2,
                  },
                },
                "start": 11,
                "type": "VariableDeclarator",
              },
            ],
            "end": 14,
            "kind": "let",
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 2,
              },
              "start": Position {
                "column": 6,
                "line": 2,
              },
            },
            "start": 7,
            "type": "VariableDeclaration",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 2,
              "line": 2,
            },
          },
          "start": 3,
          "test": Node {
            "end": 19,
            "left": Node {
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 2,
                },
                "start": Position {
                  "column": 14,
                  "line": 2,
                },
              },
              "name": "i",
              "start": 15,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 2,
              },
              "start": Position {
                "column": 14,
                "line": 2,
              },
            },
            "operator": "<",
            "right": Node {
              "end": 19,
              "loc": SourceLocation {
                "end": Position {
                  "column": 18,
                  "line": 2,
                },
                "start": Position {
                  "column": 16,
                  "line": 2,
                },
              },
              "raw": "10",
              "start": 17,
              "type": "Literal",
              "value": 10,
            },
            "start": 15,
            "type": "BinaryExpression",
          },
          "type": "ForStatement",
          "update": Node {
            "end": 25,
            "left": Node {
              "end": 21,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 19,
                  "line": 2,
                },
              },
              "name": "i",
              "start": 20,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 24,
                "line": 2,
              },
              "start": Position {
                "column": 19,
                "line": 2,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 25,
              "left": Node {
                "end": 23,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 22,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 21,
                    "line": 2,
                  },
                },
                "name": "i",
                "start": 22,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "operator": "*",
              "right": Node {
                "end": 25,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 23,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 24,
                "type": "Literal",
                "value": 2,
              },
              "start": 22,
              "type": "BinaryExpression",
            },
            "start": 20,
            "type": "AssignmentExpression",
          },
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 44,
                        "id": Node {
                          "end": 40,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 11,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 10,
                              "line": 3,
                            },
                          },
                          "name": "b",
                          "start": 39,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 3,
                            },
                          },
                          "name": "i",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 15,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 10,
                            "line": 3,
                          },
                        },
                        "start": 39,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 45,
                    "kind": "const",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 33,
                    "type": "VariableDeclaration",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 26,
                    "line": 2,
                  },
                },
                "start": 27,
                "type": "BlockStatement",
              },
              "end": 49,
              "init": Node {
                "declarations": Array [
                  Node {
                    "end": 14,
                    "id": Node {
                      "end": 12,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 2,
                        },
                      },
                      "name": "i",
                      "start": 11,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 14,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 2,
                        },
                      },
                      "raw": "1",
                      "start": 13,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "start": 11,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 14,
                "kind": "let",
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 2,
                  },
                },
                "start": 7,
                "type": "VariableDeclaration",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "test": Node {
                "end": 19,
                "left": Node {
                  "end": 16,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 15,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 2,
                  },
                },
                "operator": "<",
                "right": Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "raw": "10",
                  "start": 17,
                  "type": "Literal",
                  "value": 10,
                },
                "start": 15,
                "type": "BinaryExpression",
              },
              "type": "ForStatement",
              "update": Node {
                "end": 25,
                "left": Node {
                  "end": 21,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 20,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 20,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 25,
                  "left": Node {
                    "end": 23,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 22,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "name": "i",
                    "start": 22,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 24,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 21,
                      "line": 2,
                    },
                  },
                  "operator": "*",
                  "right": Node {
                    "end": 25,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 24,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 23,
                        "line": 2,
                      },
                    },
                    "raw": "2",
                    "start": 24,
                    "type": "Literal",
                    "value": 2,
                  },
                  "start": 22,
                  "type": "BinaryExpression",
                },
                "start": 20,
                "type": "AssignmentExpression",
              },
            },
          ],
          "end": 52,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 5,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine for loops 6`] = `""`;

exports[`setBreakpointAtLine for loops 7`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 15,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "b": Symbol(Used to implement hoisting),
          },
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 8,
            },
            "name": "forBlockEnvironment",
            "tail": Object {
              "head": Object {
                "i": 8,
              },
              "name": "forLoopEnvironment",
              "tail": Object {
                "head": Object {
                  "Infinity": Infinity,
                  "NaN": NaN,
                  "accumulate": [Function],
                  "append": [Function],
                  "array_length": [Function],
                  "build_list": [Function],
                  "display": [Function],
                  "draw_data": [Function],
                  "enum_list": [Function],
                  "equal": [Function],
                  "error": [Function],
                  "filter": [Function],
                  "for_each": [Function],
                  "head": [Function],
                  "is_array": [Function],
                  "is_boolean": [Function],
                  "is_function": [Function],
                  "is_list": [Function],
                  "is_null": [Function],
                  "is_number": [Function],
                  "is_pair": [Function],
                  "is_string": [Function],
                  "is_undefined": [Function],
                  "length": [Function],
                  "list": [Function],
                  "list_ref": [Function],
                  "list_to_string": [Function],
                  "map": [Function],
                  "math_E": 2.718281828459045,
                  "math_LN10": 2.302585092994046,
                  "math_LN2": 0.6931471805599453,
                  "math_LOG10E": 0.4342944819032518,
                  "math_LOG2E": 1.4426950408889634,
                  "math_PI": 3.141592653589793,
                  "math_SQRT1_2": 0.7071067811865476,
                  "math_SQRT2": 1.4142135623730951,
                  "math_abs": [Function],
                  "math_acos": [Function],
                  "math_acosh": [Function],
                  "math_asin": [Function],
                  "math_asinh": [Function],
                  "math_atan": [Function],
                  "math_atan2": [Function],
                  "math_atanh": [Function],
                  "math_cbrt": [Function],
                  "math_ceil": [Function],
                  "math_clz32": [Function],
                  "math_cos": [Function],
                  "math_cosh": [Function],
                  "math_exp": [Function],
                  "math_expm1": [Function],
                  "math_floor": [Function],
                  "math_fround": [Function],
                  "math_hypot": [Function],
                  "math_imul": [Function],
                  "math_log": [Function],
                  "math_log10": [Function],
                  "math_log1p": [Function],
                  "math_log2": [Function],
                  "math_max": [Function],
                  "math_min": [Function],
                  "math_pow": [Function],
                  "math_random": [Function],
                  "math_round": [Function],
                  "math_sign": [Function],
                  "math_sin": [Function],
                  "math_sinh": [Function],
                  "math_sqrt": [Function],
                  "math_tan": [Function],
                  "math_tanh": [Function],
                  "math_trunc": [Function],
                  "member": [Function],
                  "pair": [Function],
                  "parse_int": [Function],
                  "prompt": [Function],
                  "raw_display": [Function],
                  "remove": [Function],
                  "remove_all": [Function],
                  "reverse": [Function],
                  "runtime": [Function],
                  "set_head": [Function],
                  "set_tail": [Function],
                  "stringify": [Function],
                  "tail": [Function],
                  "undefined": undefined,
                },
                "name": "global",
                "tail": null,
              },
              "thisContext": [Circular],
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 8,
          },
          "name": "forBlockEnvironment",
          "tail": Object {
            "head": Object {
              "i": 8,
            },
            "name": "forLoopEnvironment",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "accumulate": [Function],
                "append": [Function],
                "array_length": [Function],
                "build_list": [Function],
                "display": [Function],
                "draw_data": [Function],
                "enum_list": [Function],
                "equal": [Function],
                "error": [Function],
                "filter": [Function],
                "for_each": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "length": [Function],
                "list": [Function],
                "list_ref": [Function],
                "list_to_string": [Function],
                "map": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "member": [Function],
                "pair": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "remove": [Function],
                "remove_all": [Function],
                "reverse": [Function],
                "runtime": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stringify": [Function],
                "tail": [Function],
                "undefined": undefined,
              },
              "name": "global",
              "tail": null,
            },
            "thisContext": [Circular],
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "i": 8,
          },
          "name": "forLoopEnvironment",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "declarations": Array [
            Node {
              "end": 44,
              "id": Node {
                "end": 40,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 3,
                  },
                },
                "name": "b",
                "start": 39,
                "type": "Identifier",
              },
              "init": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "i",
                "start": 43,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 3,
                },
                "start": Position {
                  "column": 10,
                  "line": 3,
                },
              },
              "start": 39,
              "type": "VariableDeclarator",
            },
          ],
          "end": 45,
          "kind": "const",
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 3,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 33,
          "type": "VariableDeclaration",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 44,
                  "id": Node {
                    "end": 40,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 3,
                      },
                    },
                    "name": "b",
                    "start": 39,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 44,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 3,
                      },
                    },
                    "name": "i",
                    "start": 43,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 3,
                    },
                  },
                  "start": 39,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 45,
              "kind": "const",
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "start": 33,
              "type": "VariableDeclaration",
            },
          ],
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 26,
              "line": 2,
            },
          },
          "start": 27,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "declarations": Array [
                  Node {
                    "end": 44,
                    "id": Node {
                      "end": 40,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 3,
                        },
                      },
                      "name": "b",
                      "start": 39,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 3,
                        },
                      },
                      "name": "i",
                      "start": 43,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 3,
                      },
                    },
                    "start": 39,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 45,
                "kind": "const",
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "start": 33,
                "type": "VariableDeclaration",
              },
            ],
            "end": 49,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 4,
              },
              "start": Position {
                "column": 26,
                "line": 2,
              },
            },
            "start": 27,
            "type": "BlockStatement",
          },
          "end": 49,
          "init": Node {
            "declarations": Array [
              Node {
                "end": 14,
                "id": Node {
                  "end": 12,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 11,
                  "type": "Identifier",
                },
                "init": Node {
                  "end": 14,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 13,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 2,
                  },
                },
                "start": 11,
                "type": "VariableDeclarator",
              },
            ],
            "end": 14,
            "kind": "let",
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 2,
              },
              "start": Position {
                "column": 6,
                "line": 2,
              },
            },
            "start": 7,
            "type": "VariableDeclaration",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 2,
              "line": 2,
            },
          },
          "start": 3,
          "test": Node {
            "end": 19,
            "left": Node {
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 2,
                },
                "start": Position {
                  "column": 14,
                  "line": 2,
                },
              },
              "name": "i",
              "start": 15,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 2,
              },
              "start": Position {
                "column": 14,
                "line": 2,
              },
            },
            "operator": "<",
            "right": Node {
              "end": 19,
              "loc": SourceLocation {
                "end": Position {
                  "column": 18,
                  "line": 2,
                },
                "start": Position {
                  "column": 16,
                  "line": 2,
                },
              },
              "raw": "10",
              "start": 17,
              "type": "Literal",
              "value": 10,
            },
            "start": 15,
            "type": "BinaryExpression",
          },
          "type": "ForStatement",
          "update": Node {
            "end": 25,
            "left": Node {
              "end": 21,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 19,
                  "line": 2,
                },
              },
              "name": "i",
              "start": 20,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 24,
                "line": 2,
              },
              "start": Position {
                "column": 19,
                "line": 2,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 25,
              "left": Node {
                "end": 23,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 22,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 21,
                    "line": 2,
                  },
                },
                "name": "i",
                "start": 22,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "operator": "*",
              "right": Node {
                "end": 25,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 23,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 24,
                "type": "Literal",
                "value": 2,
              },
              "start": 22,
              "type": "BinaryExpression",
            },
            "start": 20,
            "type": "AssignmentExpression",
          },
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "declarations": Array [
                      Node {
                        "end": 44,
                        "id": Node {
                          "end": 40,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 11,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 10,
                              "line": 3,
                            },
                          },
                          "name": "b",
                          "start": 39,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 3,
                            },
                          },
                          "name": "i",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 15,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 10,
                            "line": 3,
                          },
                        },
                        "start": 39,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "end": 45,
                    "kind": "const",
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 33,
                    "type": "VariableDeclaration",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 26,
                    "line": 2,
                  },
                },
                "start": 27,
                "type": "BlockStatement",
              },
              "end": 49,
              "init": Node {
                "declarations": Array [
                  Node {
                    "end": 14,
                    "id": Node {
                      "end": 12,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 2,
                        },
                      },
                      "name": "i",
                      "start": 11,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 14,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 2,
                        },
                      },
                      "raw": "1",
                      "start": 13,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "start": 11,
                    "type": "VariableDeclarator",
                  },
                ],
                "end": 14,
                "kind": "let",
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 2,
                  },
                },
                "start": 7,
                "type": "VariableDeclaration",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "test": Node {
                "end": 19,
                "left": Node {
                  "end": 16,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 15,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 2,
                  },
                },
                "operator": "<",
                "right": Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "raw": "10",
                  "start": 17,
                  "type": "Literal",
                  "value": 10,
                },
                "start": 15,
                "type": "BinaryExpression",
              },
              "type": "ForStatement",
              "update": Node {
                "end": 25,
                "left": Node {
                  "end": 21,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 20,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "name": "i",
                  "start": 20,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 25,
                  "left": Node {
                    "end": 23,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 22,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "name": "i",
                    "start": 22,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 24,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 21,
                      "line": 2,
                    },
                  },
                  "operator": "*",
                  "right": Node {
                    "end": 25,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 24,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 23,
                        "line": 2,
                      },
                    },
                    "raw": "2",
                    "start": 24,
                    "type": "Literal",
                    "value": 2,
                  },
                  "start": 22,
                  "type": "BinaryExpression",
                },
                "start": 20,
                "type": "AssignmentExpression",
              },
            },
          ],
          "end": 52,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 5,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine for loops 8`] = `""`;

exports[`setBreakpointAtLine for loops 9`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 15,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`setBreakpointAtLine for loops 10`] = `""`;

exports[`setBreakpointAtLine function 1 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 8,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": Symbol(Used to implement hoisting),
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "body": Node {
            "body": Array [
              Node {
                "argument": Node {
                  "end": 34,
                  "left": Node {
                    "end": 30,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "name": "x",
                    "start": 29,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 16,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "operator": "+",
                  "right": Node {
                    "end": 34,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "x",
                    "start": 33,
                    "type": "Identifier",
                  },
                  "start": 29,
                  "type": "BinaryExpression",
                },
                "end": 35,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "start": 22,
                "type": "ReturnStatement",
              },
            ],
            "end": 39,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 4,
              },
              "start": Position {
                "column": 15,
                "line": 2,
              },
            },
            "start": 16,
            "type": "BlockStatement",
          },
          "end": 39,
          "expression": false,
          "generator": false,
          "id": Node {
            "end": 13,
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 2,
              },
              "start": Position {
                "column": 11,
                "line": 2,
              },
            },
            "name": "a",
            "start": 12,
            "type": "Identifier",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 4,
            },
            "start": Position {
              "column": 2,
              "line": 2,
            },
          },
          "params": Array [
            Node {
              "end": 15,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "name": "x",
              "start": 14,
              "type": "Identifier",
            },
          ],
          "start": 3,
          "type": "FunctionDeclaration",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "end": 34,
                      "left": Node {
                        "end": 30,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "x",
                        "start": 29,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "+",
                      "right": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "x",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "start": 29,
                      "type": "BinaryExpression",
                    },
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 22,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 39,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "start": 16,
                "type": "BlockStatement",
              },
              "end": 39,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "x",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 48,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 46,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 6,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "10",
                    "start": 44,
                    "type": "Literal",
                    "value": 10,
                  },
                ],
                "callee": Node {
                  "end": 43,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 5,
                    },
                  },
                  "name": "a",
                  "start": 42,
                  "type": "Identifier",
                },
                "end": 47,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 5,
                  },
                },
                "start": 42,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 8,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "start": 42,
              "type": "ExpressionStatement",
            },
          ],
          "end": 51,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 6,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine function 1 2`] = `""`;

exports[`setBreakpointAtLine function 2 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 9,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": "bob",
              },
            ],
            "callee": Node {
              "end": 43,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "name": "a",
              "start": 42,
              "type": "Identifier",
            },
            "end": 50,
            "loc": SourceLocation {
              "end": Position {
                "column": 10,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "start": 42,
            "type": "CallExpression",
          },
          "head": Object {
            "x": "bob",
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "argument": Node {
            "end": 34,
            "left": Node {
              "end": 30,
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "name": "x",
              "start": 29,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 3,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "operator": "+",
            "right": Node {
              "end": 34,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 3,
                },
                "start": Position {
                  "column": 15,
                  "line": 3,
                },
              },
              "name": "x",
              "start": 33,
              "type": "Identifier",
            },
            "start": 29,
            "type": "BinaryExpression",
          },
          "end": 35,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 3,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 22,
          "type": "ReturnStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 49,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "raw": "\\"bob\\"",
              "start": 44,
              "type": "Literal",
              "value": "bob",
            },
          ],
          "callee": Node {
            "end": 43,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "name": "a",
            "start": 42,
            "type": "Identifier",
          },
          "end": 50,
          "loc": SourceLocation {
            "end": Position {
              "column": 10,
              "line": 5,
            },
            "start": Position {
              "column": 2,
              "line": 5,
            },
          },
          "start": 42,
          "type": "CallExpression",
        },
        Node {
          "end": 51,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "raw": "\\"bob\\"",
                "start": 44,
                "type": "Literal",
                "value": "bob",
              },
            ],
            "callee": Node {
              "end": 43,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "name": "a",
              "start": 42,
              "type": "Identifier",
            },
            "end": 50,
            "loc": SourceLocation {
              "end": Position {
                "column": 10,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "start": 42,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 11,
              "line": 5,
            },
            "start": Position {
              "column": 2,
              "line": 5,
            },
          },
          "start": 42,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "end": 34,
                      "left": Node {
                        "end": 30,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "x",
                        "start": 29,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "+",
                      "right": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "x",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "start": 29,
                      "type": "BinaryExpression",
                    },
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 22,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 39,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "start": 16,
                "type": "BlockStatement",
              },
              "end": 39,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "x",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 51,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 49,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "\\"bob\\"",
                    "start": 44,
                    "type": "Literal",
                    "value": "bob",
                  },
                ],
                "callee": Node {
                  "end": 43,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 5,
                    },
                  },
                  "name": "a",
                  "start": 42,
                  "type": "Identifier",
                },
                "end": 50,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 5,
                  },
                },
                "start": 42,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "start": 42,
              "type": "ExpressionStatement",
            },
          ],
          "end": 54,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 6,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine function 2 2`] = `""`;

exports[`setBreakpointAtLine function 3 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 10,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": 40,
}
`;

exports[`setBreakpointAtLine function 3 2`] = `""`;

exports[`setBreakpointAtLine function 4 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 11,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 55,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 53,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "raw": "123345898",
                "start": 44,
                "type": "Literal",
                "value": 123345898,
              },
            ],
            "callee": Node {
              "end": 43,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "name": "a",
              "start": 42,
              "type": "Identifier",
            },
            "end": 54,
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "start": 42,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 15,
              "line": 5,
            },
            "start": Position {
              "column": 2,
              "line": 5,
            },
          },
          "start": 42,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "end": 34,
                      "left": Node {
                        "end": 30,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "x",
                        "start": 29,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "+",
                      "right": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "x",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "start": 29,
                      "type": "BinaryExpression",
                    },
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 22,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 39,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "start": 16,
                "type": "BlockStatement",
              },
              "end": 39,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "x",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 55,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 53,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "123345898",
                    "start": 44,
                    "type": "Literal",
                    "value": 123345898,
                  },
                ],
                "callee": Node {
                  "end": 43,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 5,
                    },
                  },
                  "name": "a",
                  "start": 42,
                  "type": "Identifier",
                },
                "end": 54,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 5,
                  },
                },
                "start": 42,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "start": 42,
              "type": "ExpressionStatement",
            },
          ],
          "end": 58,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 6,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine function 4 2`] = `""`;

exports[`setBreakpointAtLine granularity 1 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 12,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "head": Object {
            "ctrlf": 1,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "argument": Node {
            "alternate": Node {
              "arguments": Array [
                Node {
                  "end": 68,
                  "left": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "name": "ctrlf",
                    "start": 59,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 68,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 67,
                    "type": "Literal",
                    "value": 1,
                  },
                  "start": 59,
                  "type": "BinaryExpression",
                },
              ],
              "callee": Node {
                "end": 58,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "name": "a",
                "start": 57,
                "type": "Identifier",
              },
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "start": 57,
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 50,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "raw": "0",
              "start": 49,
              "type": "Literal",
              "value": 0,
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "start": 33,
            "test": Node {
              "end": 42,
              "left": Node {
                "end": 38,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "name": "ctrlf",
                "start": 33,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "operator": "<",
              "right": Node {
                "end": 42,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 41,
                "type": "Literal",
                "value": 0,
              },
              "start": 33,
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 26,
          "type": "ReturnStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 80,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 7,
                },
                "start": Position {
                  "column": 4,
                  "line": 7,
                },
              },
              "raw": "1",
              "start": 79,
              "type": "Literal",
              "value": 1,
            },
          ],
          "callee": Node {
            "end": 78,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "name": "a",
            "start": 77,
            "type": "Identifier",
          },
          "end": 81,
          "loc": SourceLocation {
            "end": Position {
              "column": 6,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "CallExpression",
        },
        Node {
          "end": 82,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 80,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 7,
                  },
                },
                "raw": "1",
                "start": 79,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "alternate": Node {
                        "arguments": Array [
                          Node {
                            "end": 68,
                            "left": Node {
                              "end": 64,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 11,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 6,
                                  "line": 5,
                                },
                              },
                              "name": "ctrlf",
                              "start": 59,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 15,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 6,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 68,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 67,
                              "type": "Literal",
                              "value": 1,
                            },
                            "start": 59,
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Node {
                          "end": 58,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 5,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 5,
                            },
                          },
                          "name": "a",
                          "start": 57,
                          "type": "Identifier",
                        },
                        "end": 69,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 5,
                          },
                        },
                        "start": 57,
                        "type": "CallExpression",
                      },
                      "consequent": Node {
                        "end": 50,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "raw": "0",
                        "start": 49,
                        "type": "Literal",
                        "value": 0,
                      },
                      "end": 69,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "start": 33,
                      "test": Node {
                        "end": 42,
                        "left": Node {
                          "end": 38,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "name": "ctrlf",
                          "start": 33,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "<",
                        "right": Node {
                          "end": 42,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 41,
                          "type": "Literal",
                          "value": 0,
                        },
                        "start": 33,
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 26,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 74,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "start": 20,
                "type": "BlockStatement",
              },
              "end": 74,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "ctrlf",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 82,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "raw": "1",
                    "start": 79,
                    "type": "Literal",
                    "value": 1,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 81,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "start": 77,
              "type": "ExpressionStatement",
            },
          ],
          "end": 85,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine granularity 1 2`] = `""`;

exports[`setBreakpointAtLine granularity 1 3`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 12,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 0,
              },
            ],
            "callee": Node {
              "end": 58,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "name": "a",
              "start": 57,
              "type": "Identifier",
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "start": 57,
            "type": "CallExpression",
          },
          "head": Object {
            "ctrlf": 0,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "argument": Node {
            "alternate": Node {
              "arguments": Array [
                Node {
                  "end": 68,
                  "left": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "name": "ctrlf",
                    "start": 59,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 68,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 67,
                    "type": "Literal",
                    "value": 1,
                  },
                  "start": 59,
                  "type": "BinaryExpression",
                },
              ],
              "callee": Node {
                "end": 58,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "name": "a",
                "start": 57,
                "type": "Identifier",
              },
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "start": 57,
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 50,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "raw": "0",
              "start": 49,
              "type": "Literal",
              "value": 0,
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "start": 33,
            "test": Node {
              "end": 42,
              "left": Node {
                "end": 38,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "name": "ctrlf",
                "start": 33,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "operator": "<",
              "right": Node {
                "end": 42,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 41,
                "type": "Literal",
                "value": 0,
              },
              "start": 33,
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 26,
          "type": "ReturnStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 80,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 7,
                },
                "start": Position {
                  "column": 4,
                  "line": 7,
                },
              },
              "raw": "1",
              "start": 79,
              "type": "Literal",
              "value": 1,
            },
          ],
          "callee": Node {
            "end": 78,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "name": "a",
            "start": 77,
            "type": "Identifier",
          },
          "end": 81,
          "loc": SourceLocation {
            "end": Position {
              "column": 6,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "CallExpression",
        },
        Node {
          "end": 82,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 80,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 7,
                  },
                },
                "raw": "1",
                "start": 79,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "alternate": Node {
                        "arguments": Array [
                          Node {
                            "end": 68,
                            "left": Node {
                              "end": 64,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 11,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 6,
                                  "line": 5,
                                },
                              },
                              "name": "ctrlf",
                              "start": 59,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 15,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 6,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 68,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 67,
                              "type": "Literal",
                              "value": 1,
                            },
                            "start": 59,
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Node {
                          "end": 58,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 5,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 5,
                            },
                          },
                          "name": "a",
                          "start": 57,
                          "type": "Identifier",
                        },
                        "end": 69,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 5,
                          },
                        },
                        "start": 57,
                        "type": "CallExpression",
                      },
                      "consequent": Node {
                        "end": 50,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "raw": "0",
                        "start": 49,
                        "type": "Literal",
                        "value": 0,
                      },
                      "end": 69,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "start": 33,
                      "test": Node {
                        "end": 42,
                        "left": Node {
                          "end": 38,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "name": "ctrlf",
                          "start": 33,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "<",
                        "right": Node {
                          "end": 42,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 41,
                          "type": "Literal",
                          "value": 0,
                        },
                        "start": 33,
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 26,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 74,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "start": 20,
                "type": "BlockStatement",
              },
              "end": 74,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "ctrlf",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 82,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "raw": "1",
                    "start": 79,
                    "type": "Literal",
                    "value": 1,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 81,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "start": 77,
              "type": "ExpressionStatement",
            },
          ],
          "end": 85,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine granularity 1 4`] = `""`;

exports[`setBreakpointAtLine granularity 1 5`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 12,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": -1,
              },
            ],
            "callee": Node {
              "end": 58,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "name": "a",
              "start": 57,
              "type": "Identifier",
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "start": 57,
            "type": "CallExpression",
          },
          "head": Object {
            "ctrlf": -1,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "argument": Node {
            "alternate": Node {
              "arguments": Array [
                Node {
                  "end": 68,
                  "left": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "name": "ctrlf",
                    "start": 59,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 68,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 67,
                    "type": "Literal",
                    "value": 1,
                  },
                  "start": 59,
                  "type": "BinaryExpression",
                },
              ],
              "callee": Node {
                "end": 58,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "name": "a",
                "start": 57,
                "type": "Identifier",
              },
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "start": 57,
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 50,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "raw": "0",
              "start": 49,
              "type": "Literal",
              "value": 0,
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "start": 33,
            "test": Node {
              "end": 42,
              "left": Node {
                "end": 38,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "name": "ctrlf",
                "start": 33,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "operator": "<",
              "right": Node {
                "end": 42,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 41,
                "type": "Literal",
                "value": 0,
              },
              "start": 33,
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 26,
          "type": "ReturnStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 80,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 7,
                },
                "start": Position {
                  "column": 4,
                  "line": 7,
                },
              },
              "raw": "1",
              "start": 79,
              "type": "Literal",
              "value": 1,
            },
          ],
          "callee": Node {
            "end": 78,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "name": "a",
            "start": 77,
            "type": "Identifier",
          },
          "end": 81,
          "loc": SourceLocation {
            "end": Position {
              "column": 6,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "CallExpression",
        },
        Node {
          "end": 82,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 80,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 7,
                  },
                },
                "raw": "1",
                "start": 79,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "alternate": Node {
                        "arguments": Array [
                          Node {
                            "end": 68,
                            "left": Node {
                              "end": 64,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 11,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 6,
                                  "line": 5,
                                },
                              },
                              "name": "ctrlf",
                              "start": 59,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 15,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 6,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 68,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 67,
                              "type": "Literal",
                              "value": 1,
                            },
                            "start": 59,
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Node {
                          "end": 58,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 5,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 5,
                            },
                          },
                          "name": "a",
                          "start": 57,
                          "type": "Identifier",
                        },
                        "end": 69,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 5,
                          },
                        },
                        "start": 57,
                        "type": "CallExpression",
                      },
                      "consequent": Node {
                        "end": 50,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "raw": "0",
                        "start": 49,
                        "type": "Literal",
                        "value": 0,
                      },
                      "end": 69,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "start": 33,
                      "test": Node {
                        "end": 42,
                        "left": Node {
                          "end": 38,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "name": "ctrlf",
                          "start": 33,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "<",
                        "right": Node {
                          "end": 42,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 41,
                          "type": "Literal",
                          "value": 0,
                        },
                        "start": 33,
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 26,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 74,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "start": 20,
                "type": "BlockStatement",
              },
              "end": 74,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "ctrlf",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 82,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "raw": "1",
                    "start": 79,
                    "type": "Literal",
                    "value": 1,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 81,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "start": 77,
              "type": "ExpressionStatement",
            },
          ],
          "end": 85,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine granularity 1 6`] = `""`;

exports[`setBreakpointAtLine granularity 2 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 13,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": -1,
              },
            ],
            "callee": Node {
              "end": 58,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "name": "a",
              "start": 57,
              "type": "Identifier",
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "start": 57,
            "type": "CallExpression",
          },
          "head": Object {
            "ctrlf": -1,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 50,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "raw": "0",
          "start": 49,
          "type": "Literal",
          "value": 0,
        },
        Node {
          "argument": Node {
            "alternate": Node {
              "arguments": Array [
                Node {
                  "end": 68,
                  "left": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "name": "ctrlf",
                    "start": 59,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 68,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 67,
                    "type": "Literal",
                    "value": 1,
                  },
                  "start": 59,
                  "type": "BinaryExpression",
                },
              ],
              "callee": Node {
                "end": 58,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "name": "a",
                "start": 57,
                "type": "Identifier",
              },
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "start": 57,
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 50,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "raw": "0",
              "start": 49,
              "type": "Literal",
              "value": 0,
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "start": 33,
            "test": Node {
              "end": 42,
              "left": Node {
                "end": 38,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "name": "ctrlf",
                "start": 33,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "operator": "<",
              "right": Node {
                "end": 42,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 41,
                "type": "Literal",
                "value": 0,
              },
              "start": 33,
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 26,
          "type": "ReturnStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 80,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 7,
                },
                "start": Position {
                  "column": 4,
                  "line": 7,
                },
              },
              "raw": "1",
              "start": 79,
              "type": "Literal",
              "value": 1,
            },
          ],
          "callee": Node {
            "end": 78,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "name": "a",
            "start": 77,
            "type": "Identifier",
          },
          "end": 81,
          "loc": SourceLocation {
            "end": Position {
              "column": 6,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "CallExpression",
        },
        Node {
          "end": 82,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 80,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 7,
                  },
                },
                "raw": "1",
                "start": 79,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "alternate": Node {
                        "arguments": Array [
                          Node {
                            "end": 68,
                            "left": Node {
                              "end": 64,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 11,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 6,
                                  "line": 5,
                                },
                              },
                              "name": "ctrlf",
                              "start": 59,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 15,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 6,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 68,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 67,
                              "type": "Literal",
                              "value": 1,
                            },
                            "start": 59,
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Node {
                          "end": 58,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 5,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 5,
                            },
                          },
                          "name": "a",
                          "start": 57,
                          "type": "Identifier",
                        },
                        "end": 69,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 5,
                          },
                        },
                        "start": 57,
                        "type": "CallExpression",
                      },
                      "consequent": Node {
                        "end": 50,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "raw": "0",
                        "start": 49,
                        "type": "Literal",
                        "value": 0,
                      },
                      "end": 69,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "start": 33,
                      "test": Node {
                        "end": 42,
                        "left": Node {
                          "end": 38,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "name": "ctrlf",
                          "start": 33,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "<",
                        "right": Node {
                          "end": 42,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 41,
                          "type": "Literal",
                          "value": 0,
                        },
                        "start": 33,
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 26,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 74,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "start": 20,
                "type": "BlockStatement",
              },
              "end": 74,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "ctrlf",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 82,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "raw": "1",
                    "start": 79,
                    "type": "Literal",
                    "value": 1,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 81,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "start": 77,
              "type": "ExpressionStatement",
            },
          ],
          "end": 85,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine granularity 2 2`] = `""`;

exports[`setBreakpointAtLine granularity 2 3`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 13,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": 0,
}
`;

exports[`setBreakpointAtLine granularity 2 4`] = `""`;

exports[`setBreakpointAtLine granularity 3 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 14,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "head": Object {
            "ctrlf": 1,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 58,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 5,
            },
          },
          "name": "a",
          "start": 57,
          "type": "Identifier",
        },
        Node {
          "argument": Node {
            "alternate": Node {
              "arguments": Array [
                Node {
                  "end": 68,
                  "left": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "name": "ctrlf",
                    "start": 59,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 68,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 67,
                    "type": "Literal",
                    "value": 1,
                  },
                  "start": 59,
                  "type": "BinaryExpression",
                },
              ],
              "callee": Node {
                "end": 58,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "name": "a",
                "start": 57,
                "type": "Identifier",
              },
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "start": 57,
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 50,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "raw": "0",
              "start": 49,
              "type": "Literal",
              "value": 0,
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "start": 33,
            "test": Node {
              "end": 42,
              "left": Node {
                "end": 38,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "name": "ctrlf",
                "start": 33,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "operator": "<",
              "right": Node {
                "end": 42,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 41,
                "type": "Literal",
                "value": 0,
              },
              "start": 33,
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 26,
          "type": "ReturnStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 80,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 7,
                },
                "start": Position {
                  "column": 4,
                  "line": 7,
                },
              },
              "raw": "1",
              "start": 79,
              "type": "Literal",
              "value": 1,
            },
          ],
          "callee": Node {
            "end": 78,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "name": "a",
            "start": 77,
            "type": "Identifier",
          },
          "end": 81,
          "loc": SourceLocation {
            "end": Position {
              "column": 6,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "CallExpression",
        },
        Node {
          "end": 82,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 80,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 7,
                  },
                },
                "raw": "1",
                "start": 79,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "alternate": Node {
                        "arguments": Array [
                          Node {
                            "end": 68,
                            "left": Node {
                              "end": 64,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 11,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 6,
                                  "line": 5,
                                },
                              },
                              "name": "ctrlf",
                              "start": 59,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 15,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 6,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 68,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 67,
                              "type": "Literal",
                              "value": 1,
                            },
                            "start": 59,
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Node {
                          "end": 58,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 5,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 5,
                            },
                          },
                          "name": "a",
                          "start": 57,
                          "type": "Identifier",
                        },
                        "end": 69,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 5,
                          },
                        },
                        "start": 57,
                        "type": "CallExpression",
                      },
                      "consequent": Node {
                        "end": 50,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "raw": "0",
                        "start": 49,
                        "type": "Literal",
                        "value": 0,
                      },
                      "end": 69,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "start": 33,
                      "test": Node {
                        "end": 42,
                        "left": Node {
                          "end": 38,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "name": "ctrlf",
                          "start": 33,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "<",
                        "right": Node {
                          "end": 42,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 41,
                          "type": "Literal",
                          "value": 0,
                        },
                        "start": 33,
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 26,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 74,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "start": 20,
                "type": "BlockStatement",
              },
              "end": 74,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "ctrlf",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 82,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "raw": "1",
                    "start": 79,
                    "type": "Literal",
                    "value": 1,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 81,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "start": 77,
              "type": "ExpressionStatement",
            },
          ],
          "end": 85,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine granularity 3 2`] = `""`;

exports[`setBreakpointAtLine granularity 3 3`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 14,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "callExpression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 0,
              },
            ],
            "callee": Node {
              "end": 58,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "name": "a",
              "start": 57,
              "type": "Identifier",
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "start": 57,
            "type": "CallExpression",
          },
          "head": Object {
            "ctrlf": 0,
          },
          "name": "a",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": [Function],
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": undefined,
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 58,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 5,
            },
          },
          "name": "a",
          "start": 57,
          "type": "Identifier",
        },
        Node {
          "argument": Node {
            "alternate": Node {
              "arguments": Array [
                Node {
                  "end": 68,
                  "left": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "name": "ctrlf",
                    "start": 59,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 68,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 67,
                    "type": "Literal",
                    "value": 1,
                  },
                  "start": 59,
                  "type": "BinaryExpression",
                },
              ],
              "callee": Node {
                "end": 58,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "name": "a",
                "start": 57,
                "type": "Identifier",
              },
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "start": 57,
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 50,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "raw": "0",
              "start": 49,
              "type": "Literal",
              "value": 0,
            },
            "end": 69,
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "start": 33,
            "test": Node {
              "end": 42,
              "left": Node {
                "end": 38,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "name": "ctrlf",
                "start": 33,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "operator": "<",
              "right": Node {
                "end": 42,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 41,
                "type": "Literal",
                "value": 0,
              },
              "start": 33,
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "end": 70,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 5,
            },
            "start": Position {
              "column": 4,
              "line": 3,
            },
          },
          "start": 26,
          "type": "ReturnStatement",
        },
        Node {
          "arguments": Array [
            Node {
              "end": 80,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 7,
                },
                "start": Position {
                  "column": 4,
                  "line": 7,
                },
              },
              "raw": "1",
              "start": 79,
              "type": "Literal",
              "value": 1,
            },
          ],
          "callee": Node {
            "end": 78,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "name": "a",
            "start": 77,
            "type": "Identifier",
          },
          "end": 81,
          "loc": SourceLocation {
            "end": Position {
              "column": 6,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "CallExpression",
        },
        Node {
          "end": 82,
          "expression": Node {
            "arguments": Array [
              Node {
                "end": 80,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 7,
                  },
                },
                "raw": "1",
                "start": 79,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 78,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "a",
              "start": 77,
              "type": "Identifier",
            },
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "start": 77,
            "type": "CallExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 7,
            },
            "start": Position {
              "column": 2,
              "line": 7,
            },
          },
          "start": 77,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "argument": Node {
                      "alternate": Node {
                        "arguments": Array [
                          Node {
                            "end": 68,
                            "left": Node {
                              "end": 64,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 11,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 6,
                                  "line": 5,
                                },
                              },
                              "name": "ctrlf",
                              "start": 59,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 15,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 6,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 68,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 67,
                              "type": "Literal",
                              "value": 1,
                            },
                            "start": 59,
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Node {
                          "end": 58,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 5,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 5,
                            },
                          },
                          "name": "a",
                          "start": 57,
                          "type": "Identifier",
                        },
                        "end": 69,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 5,
                          },
                        },
                        "start": 57,
                        "type": "CallExpression",
                      },
                      "consequent": Node {
                        "end": 50,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "raw": "0",
                        "start": 49,
                        "type": "Literal",
                        "value": 0,
                      },
                      "end": 69,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "start": 33,
                      "test": Node {
                        "end": 42,
                        "left": Node {
                          "end": 38,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "name": "ctrlf",
                          "start": 33,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "<",
                        "right": Node {
                          "end": 42,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 41,
                          "type": "Literal",
                          "value": 0,
                        },
                        "start": 33,
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "start": 26,
                    "type": "ReturnStatement",
                  },
                ],
                "end": 74,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "start": 20,
                "type": "BlockStatement",
              },
              "end": 74,
              "expression": false,
              "generator": false,
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 12,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 6,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "params": Array [
                Node {
                  "end": 19,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "ctrlf",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "start": 3,
              "type": "FunctionDeclaration",
            },
            Node {
              "end": 82,
              "expression": Node {
                "arguments": Array [
                  Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 7,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 7,
                      },
                    },
                    "raw": "1",
                    "start": 79,
                    "type": "Literal",
                    "value": 1,
                  },
                ],
                "callee": Node {
                  "end": 78,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 7,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 7,
                    },
                  },
                  "name": "a",
                  "start": 77,
                  "type": "Identifier",
                },
                "end": 81,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 7,
                  },
                },
                "start": 77,
                "type": "CallExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "start": 77,
              "type": "ExpressionStatement",
            },
          ],
          "end": 85,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine granularity 3 4`] = `""`;

exports[`setBreakpointAtLine granularity 3 5`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 14,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": [Function],
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": 0,
}
`;

exports[`setBreakpointAtLine granularity 3 6`] = `""`;

exports[`setBreakpointAtLine while loops 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 16,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {},
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": 9,
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": 9,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 45,
          "expression": Node {
            "end": 44,
            "left": Node {
              "end": 36,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "name": "a",
              "start": 35,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 44,
              "left": Node {
                "end": 40,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "name": "a",
                "start": 39,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 4,
                  },
                },
                "raw": "3",
                "start": 43,
                "type": "Literal",
                "value": 3,
              },
              "start": 39,
              "type": "BinaryExpression",
            },
            "start": 35,
            "type": "AssignmentExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "start": 35,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "end": 45,
              "expression": Node {
                "end": 44,
                "left": Node {
                  "end": 36,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 5,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 4,
                    },
                  },
                  "name": "a",
                  "start": 35,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 4,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 44,
                  "left": Node {
                    "end": 40,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "name": "a",
                    "start": 39,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 4,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 44,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 4,
                      },
                    },
                    "raw": "3",
                    "start": 43,
                    "type": "Literal",
                    "value": 3,
                  },
                  "start": 39,
                  "type": "BinaryExpression",
                },
                "start": 35,
                "type": "AssignmentExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "start": 35,
              "type": "ExpressionStatement",
            },
          ],
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 5,
            },
            "start": Position {
              "column": 15,
              "line": 3,
            },
          },
          "start": 29,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "end": 45,
                "expression": Node {
                  "end": 44,
                  "left": Node {
                    "end": 36,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "name": "a",
                    "start": 35,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 4,
                    },
                  },
                  "operator": "=",
                  "right": Node {
                    "end": 44,
                    "left": Node {
                      "end": 40,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "name": "a",
                      "start": 39,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 4,
                        },
                      },
                      "raw": "3",
                      "start": 43,
                      "type": "Literal",
                      "value": 3,
                    },
                    "start": 39,
                    "type": "BinaryExpression",
                  },
                  "start": 35,
                  "type": "AssignmentExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 4,
                  },
                },
                "start": 35,
                "type": "ExpressionStatement",
              },
            ],
            "end": 49,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 5,
              },
              "start": Position {
                "column": 15,
                "line": 3,
              },
            },
            "start": 29,
            "type": "BlockStatement",
          },
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 5,
            },
            "start": Position {
              "column": 2,
              "line": 3,
            },
          },
          "start": 16,
          "test": Node {
            "end": 28,
            "left": Node {
              "end": 24,
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 3,
                },
                "start": Position {
                  "column": 9,
                  "line": 3,
                },
              },
              "name": "a",
              "start": 23,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 3,
              },
              "start": Position {
                "column": 9,
                "line": 3,
              },
            },
            "operator": ">",
            "right": Node {
              "end": 28,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 3,
                },
                "start": Position {
                  "column": 13,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 27,
              "type": "Literal",
              "value": 3,
            },
            "start": 23,
            "type": "BinaryExpression",
          },
          "type": "WhileStatement",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 12,
                  "id": Node {
                    "end": 8,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 7,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 2,
                      },
                    },
                    "name": "a",
                    "start": 7,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 12,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "raw": "9",
                    "start": 11,
                    "type": "Literal",
                    "value": 9,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 2,
                    },
                  },
                  "start": 7,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 13,
              "kind": "let",
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "type": "VariableDeclaration",
            },
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "end": 45,
                    "expression": Node {
                      "end": 44,
                      "left": Node {
                        "end": 36,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "name": "a",
                        "start": 35,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 4,
                          "line": 4,
                        },
                      },
                      "operator": "=",
                      "right": Node {
                        "end": 44,
                        "left": Node {
                          "end": 40,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "name": "a",
                          "start": 39,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 13,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 13,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 4,
                            },
                          },
                          "raw": "3",
                          "start": 43,
                          "type": "Literal",
                          "value": 3,
                        },
                        "start": 39,
                        "type": "BinaryExpression",
                      },
                      "start": 35,
                      "type": "AssignmentExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 14,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "start": 35,
                    "type": "ExpressionStatement",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 3,
                  },
                },
                "start": 29,
                "type": "BlockStatement",
              },
              "end": 49,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 3,
                },
              },
              "start": 16,
              "test": Node {
                "end": 28,
                "left": Node {
                  "end": 24,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 10,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 9,
                      "line": 3,
                    },
                  },
                  "name": "a",
                  "start": 23,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 3,
                  },
                },
                "operator": ">",
                "right": Node {
                  "end": 28,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 3,
                    },
                  },
                  "raw": "3",
                  "start": 27,
                  "type": "Literal",
                  "value": 3,
                },
                "start": 23,
                "type": "BinaryExpression",
              },
              "type": "WhileStatement",
            },
          ],
          "end": 52,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 6,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine while loops 2`] = `""`;

exports[`setBreakpointAtLine while loops 3`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 16,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {},
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": 9,
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": 9,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 44,
          "left": Node {
            "end": 40,
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 8,
                "line": 4,
              },
            },
            "name": "a",
            "start": 39,
            "type": "Identifier",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 13,
              "line": 4,
            },
            "start": Position {
              "column": 8,
              "line": 4,
            },
          },
          "operator": "-",
          "right": Node {
            "end": 44,
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 4,
              },
              "start": Position {
                "column": 12,
                "line": 4,
              },
            },
            "raw": "3",
            "start": 43,
            "type": "Literal",
            "value": 3,
          },
          "start": 39,
          "type": "BinaryExpression",
        },
        Node {
          "end": 44,
          "left": Node {
            "end": 36,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "name": "a",
            "start": 35,
            "type": "Identifier",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 13,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "operator": "=",
          "right": Node {
            "end": 44,
            "left": Node {
              "end": 40,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "name": "a",
              "start": 39,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 4,
              },
              "start": Position {
                "column": 8,
                "line": 4,
              },
            },
            "operator": "-",
            "right": Node {
              "end": 44,
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 12,
                  "line": 4,
                },
              },
              "raw": "3",
              "start": 43,
              "type": "Literal",
              "value": 3,
            },
            "start": 39,
            "type": "BinaryExpression",
          },
          "start": 35,
          "type": "AssignmentExpression",
        },
        Node {
          "end": 45,
          "expression": Node {
            "end": 44,
            "left": Node {
              "end": 36,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "name": "a",
              "start": 35,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 44,
              "left": Node {
                "end": 40,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "name": "a",
                "start": 39,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 4,
                  },
                },
                "raw": "3",
                "start": 43,
                "type": "Literal",
                "value": 3,
              },
              "start": 39,
              "type": "BinaryExpression",
            },
            "start": 35,
            "type": "AssignmentExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "start": 35,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "end": 45,
              "expression": Node {
                "end": 44,
                "left": Node {
                  "end": 36,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 5,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 4,
                    },
                  },
                  "name": "a",
                  "start": 35,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 4,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 44,
                  "left": Node {
                    "end": 40,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "name": "a",
                    "start": 39,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 4,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 44,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 4,
                      },
                    },
                    "raw": "3",
                    "start": 43,
                    "type": "Literal",
                    "value": 3,
                  },
                  "start": 39,
                  "type": "BinaryExpression",
                },
                "start": 35,
                "type": "AssignmentExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "start": 35,
              "type": "ExpressionStatement",
            },
          ],
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 5,
            },
            "start": Position {
              "column": 15,
              "line": 3,
            },
          },
          "start": 29,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "end": 45,
                "expression": Node {
                  "end": 44,
                  "left": Node {
                    "end": 36,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "name": "a",
                    "start": 35,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 4,
                    },
                  },
                  "operator": "=",
                  "right": Node {
                    "end": 44,
                    "left": Node {
                      "end": 40,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "name": "a",
                      "start": 39,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 4,
                        },
                      },
                      "raw": "3",
                      "start": 43,
                      "type": "Literal",
                      "value": 3,
                    },
                    "start": 39,
                    "type": "BinaryExpression",
                  },
                  "start": 35,
                  "type": "AssignmentExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 4,
                  },
                },
                "start": 35,
                "type": "ExpressionStatement",
              },
            ],
            "end": 49,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 5,
              },
              "start": Position {
                "column": 15,
                "line": 3,
              },
            },
            "start": 29,
            "type": "BlockStatement",
          },
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 5,
            },
            "start": Position {
              "column": 2,
              "line": 3,
            },
          },
          "start": 16,
          "test": Node {
            "end": 28,
            "left": Node {
              "end": 24,
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 3,
                },
                "start": Position {
                  "column": 9,
                  "line": 3,
                },
              },
              "name": "a",
              "start": 23,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 3,
              },
              "start": Position {
                "column": 9,
                "line": 3,
              },
            },
            "operator": ">",
            "right": Node {
              "end": 28,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 3,
                },
                "start": Position {
                  "column": 13,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 27,
              "type": "Literal",
              "value": 3,
            },
            "start": 23,
            "type": "BinaryExpression",
          },
          "type": "WhileStatement",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 12,
                  "id": Node {
                    "end": 8,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 7,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 2,
                      },
                    },
                    "name": "a",
                    "start": 7,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 12,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "raw": "9",
                    "start": 11,
                    "type": "Literal",
                    "value": 9,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 2,
                    },
                  },
                  "start": 7,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 13,
              "kind": "let",
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "type": "VariableDeclaration",
            },
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "end": 45,
                    "expression": Node {
                      "end": 44,
                      "left": Node {
                        "end": 36,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "name": "a",
                        "start": 35,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 4,
                          "line": 4,
                        },
                      },
                      "operator": "=",
                      "right": Node {
                        "end": 44,
                        "left": Node {
                          "end": 40,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "name": "a",
                          "start": 39,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 13,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 13,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 4,
                            },
                          },
                          "raw": "3",
                          "start": 43,
                          "type": "Literal",
                          "value": 3,
                        },
                        "start": 39,
                        "type": "BinaryExpression",
                      },
                      "start": 35,
                      "type": "AssignmentExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 14,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "start": 35,
                    "type": "ExpressionStatement",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 3,
                  },
                },
                "start": 29,
                "type": "BlockStatement",
              },
              "end": 49,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 3,
                },
              },
              "start": 16,
              "test": Node {
                "end": 28,
                "left": Node {
                  "end": 24,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 10,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 9,
                      "line": 3,
                    },
                  },
                  "name": "a",
                  "start": 23,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 3,
                  },
                },
                "operator": ">",
                "right": Node {
                  "end": 28,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 3,
                    },
                  },
                  "raw": "3",
                  "start": 27,
                  "type": "Literal",
                  "value": 3,
                },
                "start": 23,
                "type": "BinaryExpression",
              },
              "type": "WhileStatement",
            },
          ],
          "end": 52,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 6,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine while loops 4`] = `""`;

exports[`setBreakpointAtLine while loops 5`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 16,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {},
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": 6,
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": 6,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 45,
          "expression": Node {
            "end": 44,
            "left": Node {
              "end": 36,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "name": "a",
              "start": 35,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 44,
              "left": Node {
                "end": 40,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "name": "a",
                "start": 39,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 4,
                  },
                },
                "raw": "3",
                "start": 43,
                "type": "Literal",
                "value": 3,
              },
              "start": 39,
              "type": "BinaryExpression",
            },
            "start": 35,
            "type": "AssignmentExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "start": 35,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "end": 45,
              "expression": Node {
                "end": 44,
                "left": Node {
                  "end": 36,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 5,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 4,
                    },
                  },
                  "name": "a",
                  "start": 35,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 4,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 44,
                  "left": Node {
                    "end": 40,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "name": "a",
                    "start": 39,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 4,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 44,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 4,
                      },
                    },
                    "raw": "3",
                    "start": 43,
                    "type": "Literal",
                    "value": 3,
                  },
                  "start": 39,
                  "type": "BinaryExpression",
                },
                "start": 35,
                "type": "AssignmentExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "start": 35,
              "type": "ExpressionStatement",
            },
          ],
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 5,
            },
            "start": Position {
              "column": 15,
              "line": 3,
            },
          },
          "start": 29,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "end": 45,
                "expression": Node {
                  "end": 44,
                  "left": Node {
                    "end": 36,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "name": "a",
                    "start": 35,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 4,
                    },
                  },
                  "operator": "=",
                  "right": Node {
                    "end": 44,
                    "left": Node {
                      "end": 40,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "name": "a",
                      "start": 39,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 4,
                        },
                      },
                      "raw": "3",
                      "start": 43,
                      "type": "Literal",
                      "value": 3,
                    },
                    "start": 39,
                    "type": "BinaryExpression",
                  },
                  "start": 35,
                  "type": "AssignmentExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 4,
                  },
                },
                "start": 35,
                "type": "ExpressionStatement",
              },
            ],
            "end": 49,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 5,
              },
              "start": Position {
                "column": 15,
                "line": 3,
              },
            },
            "start": 29,
            "type": "BlockStatement",
          },
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 5,
            },
            "start": Position {
              "column": 2,
              "line": 3,
            },
          },
          "start": 16,
          "test": Node {
            "end": 28,
            "left": Node {
              "end": 24,
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 3,
                },
                "start": Position {
                  "column": 9,
                  "line": 3,
                },
              },
              "name": "a",
              "start": 23,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 3,
              },
              "start": Position {
                "column": 9,
                "line": 3,
              },
            },
            "operator": ">",
            "right": Node {
              "end": 28,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 3,
                },
                "start": Position {
                  "column": 13,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 27,
              "type": "Literal",
              "value": 3,
            },
            "start": 23,
            "type": "BinaryExpression",
          },
          "type": "WhileStatement",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 12,
                  "id": Node {
                    "end": 8,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 7,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 2,
                      },
                    },
                    "name": "a",
                    "start": 7,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 12,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "raw": "9",
                    "start": 11,
                    "type": "Literal",
                    "value": 9,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 2,
                    },
                  },
                  "start": 7,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 13,
              "kind": "let",
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "type": "VariableDeclaration",
            },
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "end": 45,
                    "expression": Node {
                      "end": 44,
                      "left": Node {
                        "end": 36,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "name": "a",
                        "start": 35,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 4,
                          "line": 4,
                        },
                      },
                      "operator": "=",
                      "right": Node {
                        "end": 44,
                        "left": Node {
                          "end": 40,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "name": "a",
                          "start": 39,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 13,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 13,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 4,
                            },
                          },
                          "raw": "3",
                          "start": 43,
                          "type": "Literal",
                          "value": 3,
                        },
                        "start": 39,
                        "type": "BinaryExpression",
                      },
                      "start": 35,
                      "type": "AssignmentExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 14,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "start": 35,
                    "type": "ExpressionStatement",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 3,
                  },
                },
                "start": 29,
                "type": "BlockStatement",
              },
              "end": 49,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 3,
                },
              },
              "start": 16,
              "test": Node {
                "end": 28,
                "left": Node {
                  "end": 24,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 10,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 9,
                      "line": 3,
                    },
                  },
                  "name": "a",
                  "start": 23,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 3,
                  },
                },
                "operator": ">",
                "right": Node {
                  "end": 28,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 3,
                    },
                  },
                  "raw": "3",
                  "start": 27,
                  "type": "Literal",
                  "value": 3,
                },
                "start": 23,
                "type": "BinaryExpression",
              },
              "type": "WhileStatement",
            },
          ],
          "end": 52,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 6,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine while loops 6`] = `""`;

exports[`setBreakpointAtLine while loops 7`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 16,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": true,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {},
          "name": "blockEnvironment",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "a": 6,
              "accumulate": [Function],
              "append": [Function],
              "array_length": [Function],
              "build_list": [Function],
              "display": [Function],
              "draw_data": [Function],
              "enum_list": [Function],
              "equal": [Function],
              "error": [Function],
              "filter": [Function],
              "for_each": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "length": [Function],
              "list": [Function],
              "list_ref": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "member": [Function],
              "pair": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "runtime": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stringify": [Function],
              "tail": [Function],
              "undefined": undefined,
            },
            "name": "global",
            "tail": null,
          },
          "thisContext": [Circular],
        },
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": 6,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [
        Node {
          "end": 44,
          "left": Node {
            "end": 40,
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 8,
                "line": 4,
              },
            },
            "name": "a",
            "start": 39,
            "type": "Identifier",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 13,
              "line": 4,
            },
            "start": Position {
              "column": 8,
              "line": 4,
            },
          },
          "operator": "-",
          "right": Node {
            "end": 44,
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 4,
              },
              "start": Position {
                "column": 12,
                "line": 4,
              },
            },
            "raw": "3",
            "start": 43,
            "type": "Literal",
            "value": 3,
          },
          "start": 39,
          "type": "BinaryExpression",
        },
        Node {
          "end": 44,
          "left": Node {
            "end": 36,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "name": "a",
            "start": 35,
            "type": "Identifier",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 13,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "operator": "=",
          "right": Node {
            "end": 44,
            "left": Node {
              "end": 40,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "name": "a",
              "start": 39,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 4,
              },
              "start": Position {
                "column": 8,
                "line": 4,
              },
            },
            "operator": "-",
            "right": Node {
              "end": 44,
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 12,
                  "line": 4,
                },
              },
              "raw": "3",
              "start": 43,
              "type": "Literal",
              "value": 3,
            },
            "start": 39,
            "type": "BinaryExpression",
          },
          "start": 35,
          "type": "AssignmentExpression",
        },
        Node {
          "end": 45,
          "expression": Node {
            "end": 44,
            "left": Node {
              "end": 36,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "name": "a",
              "start": 35,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "=",
            "right": Node {
              "end": 44,
              "left": Node {
                "end": 40,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "name": "a",
                "start": 39,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 4,
                  },
                },
                "raw": "3",
                "start": 43,
                "type": "Literal",
                "value": 3,
              },
              "start": 39,
              "type": "BinaryExpression",
            },
            "start": 35,
            "type": "AssignmentExpression",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "start": 35,
          "type": "ExpressionStatement",
        },
        Node {
          "body": Array [
            Node {
              "end": 45,
              "expression": Node {
                "end": 44,
                "left": Node {
                  "end": 36,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 5,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 4,
                    },
                  },
                  "name": "a",
                  "start": 35,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 4,
                  },
                },
                "operator": "=",
                "right": Node {
                  "end": 44,
                  "left": Node {
                    "end": 40,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "name": "a",
                    "start": 39,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 4,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 44,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 4,
                      },
                    },
                    "raw": "3",
                    "start": 43,
                    "type": "Literal",
                    "value": 3,
                  },
                  "start": 39,
                  "type": "BinaryExpression",
                },
                "start": 35,
                "type": "AssignmentExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "start": 35,
              "type": "ExpressionStatement",
            },
          ],
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 5,
            },
            "start": Position {
              "column": 15,
              "line": 3,
            },
          },
          "start": 29,
          "type": "BlockStatement",
        },
        Node {
          "body": Node {
            "body": Array [
              Node {
                "end": 45,
                "expression": Node {
                  "end": 44,
                  "left": Node {
                    "end": 36,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "name": "a",
                    "start": 35,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 4,
                    },
                  },
                  "operator": "=",
                  "right": Node {
                    "end": 44,
                    "left": Node {
                      "end": 40,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "name": "a",
                      "start": 39,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 4,
                        },
                      },
                      "raw": "3",
                      "start": 43,
                      "type": "Literal",
                      "value": 3,
                    },
                    "start": 39,
                    "type": "BinaryExpression",
                  },
                  "start": 35,
                  "type": "AssignmentExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 4,
                  },
                },
                "start": 35,
                "type": "ExpressionStatement",
              },
            ],
            "end": 49,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 5,
              },
              "start": Position {
                "column": 15,
                "line": 3,
              },
            },
            "start": 29,
            "type": "BlockStatement",
          },
          "end": 49,
          "loc": SourceLocation {
            "end": Position {
              "column": 3,
              "line": 5,
            },
            "start": Position {
              "column": 2,
              "line": 3,
            },
          },
          "start": 16,
          "test": Node {
            "end": 28,
            "left": Node {
              "end": 24,
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 3,
                },
                "start": Position {
                  "column": 9,
                  "line": 3,
                },
              },
              "name": "a",
              "start": 23,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 3,
              },
              "start": Position {
                "column": 9,
                "line": 3,
              },
            },
            "operator": ">",
            "right": Node {
              "end": 28,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 3,
                },
                "start": Position {
                  "column": 13,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 27,
              "type": "Literal",
              "value": 3,
            },
            "start": 23,
            "type": "BinaryExpression",
          },
          "type": "WhileStatement",
        },
        Node {
          "body": Array [
            Node {
              "declarations": Array [
                Node {
                  "end": 12,
                  "id": Node {
                    "end": 8,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 7,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 2,
                      },
                    },
                    "name": "a",
                    "start": 7,
                    "type": "Identifier",
                  },
                  "init": Node {
                    "end": 12,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 11,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 10,
                        "line": 2,
                      },
                    },
                    "raw": "9",
                    "start": 11,
                    "type": "Literal",
                    "value": 9,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 11,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 2,
                    },
                  },
                  "start": 7,
                  "type": "VariableDeclarator",
                },
              ],
              "end": 13,
              "kind": "let",
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "start": 3,
              "type": "VariableDeclaration",
            },
            Node {
              "body": Node {
                "body": Array [
                  Node {
                    "end": 45,
                    "expression": Node {
                      "end": 44,
                      "left": Node {
                        "end": 36,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 5,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 4,
                          },
                        },
                        "name": "a",
                        "start": 35,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 13,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 4,
                          "line": 4,
                        },
                      },
                      "operator": "=",
                      "right": Node {
                        "end": 44,
                        "left": Node {
                          "end": 40,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "name": "a",
                          "start": 39,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 13,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 13,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 4,
                            },
                          },
                          "raw": "3",
                          "start": 43,
                          "type": "Literal",
                          "value": 3,
                        },
                        "start": 39,
                        "type": "BinaryExpression",
                      },
                      "start": 35,
                      "type": "AssignmentExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 14,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 4,
                      },
                    },
                    "start": 35,
                    "type": "ExpressionStatement",
                  },
                ],
                "end": 49,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 3,
                  },
                },
                "start": 29,
                "type": "BlockStatement",
              },
              "end": 49,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 3,
                },
              },
              "start": 16,
              "test": Node {
                "end": 28,
                "left": Node {
                  "end": 24,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 10,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 9,
                      "line": 3,
                    },
                  },
                  "name": "a",
                  "start": 23,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 3,
                  },
                },
                "operator": ">",
                "right": Node {
                  "end": 28,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 3,
                    },
                  },
                  "raw": "3",
                  "start": 27,
                  "type": "Literal",
                  "value": 3,
                },
                "start": 23,
                "type": "BinaryExpression",
              },
              "type": "WhileStatement",
            },
          ],
          "end": 52,
          "loc": SourceLocation {
            "end": Position {
              "column": 2,
              "line": 6,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "sourceType": "module",
          "start": 0,
          "type": "Program",
        },
      ],
      "value": undefined,
    },
  },
  "it": Object {},
  "scheduler": PreemptiveScheduler {
    "steps": 1000,
  },
  "status": "suspended",
}
`;

exports[`setBreakpointAtLine while loops 8`] = `""`;

exports[`setBreakpointAtLine while loops 9`] = `
Object {
  "context": Object {
    "chapter": 3,
    "contextId": 16,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "executionMethod": "interpreter",
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "environments": Array [
        Object {
          "head": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "a": 3,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_data": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "tail": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": 3,
}
`;

exports[`setBreakpointAtLine while loops 10`] = `""`;
