// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`debugger; pauses for 1`] = `
Array [
  Object {
    "head": Object {},
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 0,
    },
    "name": "forBlockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 0,
    },
    "name": "forLoopEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 10,
        },
      ],
      "callee": Node {
        "end": 78,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "undefined",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 3,
            "line": 7,
          },
          "start": Position {
            "column": 2,
            "line": 7,
          },
        },
        "name": "a",
        "start": 77,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 82,
      "inferredType": Object {
        "kind": "primitive",
        "name": "undefined",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 7,
        },
        "start": Position {
          "column": 2,
          "line": 7,
        },
      },
      "start": 77,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "x": 10,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`debugger; pauses for 2`] = `""`;

exports[`debugger; pauses while 1`] = `
Array [
  Object {
    "head": Object {},
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 10,
        },
      ],
      "callee": Node {
        "end": 78,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "undefined",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 3,
            "line": 8,
          },
          "start": Position {
            "column": 2,
            "line": 8,
          },
        },
        "name": "a",
        "start": 77,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 82,
      "inferredType": Object {
        "kind": "primitive",
        "name": "undefined",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 8,
        },
        "start": Position {
          "column": 2,
          "line": 8,
        },
      },
      "start": 77,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "x": 10,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`debugger; pauses while 2`] = `""`;

exports[`debugger; statement basic test 1`] = `
Array [
  Object {
    "head": Object {
      "a": 2,
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`debugger; statement basic test 2`] = `""`;

exports[`debugger; statement execution sequence 1`] = `
Array [
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`debugger; statement execution sequence 2`] = `""`;

exports[`debugger; statement hoisting 1`] = `
Array [
  Object {
    "head": Object {
      "b": Symbol(Used to implement hoisting),
      "c": Symbol(Used to implement hoisting),
      "z": Symbol(Used to implement hoisting),
    },
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 10,
        },
      ],
      "callee": Node {
        "end": 108,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 3,
            "line": 9,
          },
          "start": Position {
            "column": 2,
            "line": 9,
          },
        },
        "name": "a",
        "start": 107,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 112,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 9,
        },
        "start": Position {
          "column": 2,
          "line": 9,
        },
      },
      "start": 107,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "x": 10,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`debugger; statement hoisting 2`] = `""`;

exports[`debugger; statement in function 1`] = `
Array [
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 10,
        },
      ],
      "callee": Node {
        "end": 53,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 3,
            "line": 6,
          },
          "start": Position {
            "column": 2,
            "line": 6,
          },
        },
        "name": "a",
        "start": 52,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 57,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 6,
        },
        "start": Position {
          "column": 2,
          "line": 6,
        },
      },
      "start": 52,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "x": 10,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`debugger; statement in function 2`] = `""`;

exports[`debugger; statement test function scope 1`] = `
Array [
  Object {
    "head": Object {
      "b": 100,
      "c": 200,
      "d": 300,
      "e": 30000,
      "f": 60000,
      "g": 2000,
      "h": 2300,
      "i": 666.6666666666666,
      "j": 600,
      "k": 0.0033333333333333335,
      "l": 0.5,
    },
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 10,
        },
      ],
      "callee": Node {
        "end": 266,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 3,
            "line": 17,
          },
          "start": Position {
            "column": 2,
            "line": 17,
          },
        },
        "name": "a",
        "start": 265,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 270,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 17,
        },
        "start": Position {
          "column": 2,
          "line": 17,
        },
      },
      "start": 265,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "x": 10,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`debugger; statement test function scope 2`] = `""`;

exports[`setBreakpointAtLine basic 1`] = `
Array [
  Object {
    "head": Object {
      "a": Symbol(Used to implement hoisting),
      "b": Symbol(Used to implement hoisting),
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": Symbol(Used to implement hoisting),
      "$append": Symbol(Used to implement hoisting),
      "$build_list": Symbol(Used to implement hoisting),
      "$enum_list": Symbol(Used to implement hoisting),
      "$filter": Symbol(Used to implement hoisting),
      "$length": Symbol(Used to implement hoisting),
      "$list_to_string": Symbol(Used to implement hoisting),
      "$map": Symbol(Used to implement hoisting),
      "$remove": Symbol(Used to implement hoisting),
      "$remove_all": Symbol(Used to implement hoisting),
      "$reverse": Symbol(Used to implement hoisting),
      "accumulate": Symbol(Used to implement hoisting),
      "append": Symbol(Used to implement hoisting),
      "build_list": Symbol(Used to implement hoisting),
      "build_stream": Symbol(Used to implement hoisting),
      "enum_list": Symbol(Used to implement hoisting),
      "enum_stream": Symbol(Used to implement hoisting),
      "equal": Symbol(Used to implement hoisting),
      "eval_stream": Symbol(Used to implement hoisting),
      "filter": Symbol(Used to implement hoisting),
      "for_each": Symbol(Used to implement hoisting),
      "integers_from": Symbol(Used to implement hoisting),
      "is_list": Symbol(Used to implement hoisting),
      "is_stream": Symbol(Used to implement hoisting),
      "length": Symbol(Used to implement hoisting),
      "list_ref": Symbol(Used to implement hoisting),
      "list_to_stream": Symbol(Used to implement hoisting),
      "list_to_string": Symbol(Used to implement hoisting),
      "map": Symbol(Used to implement hoisting),
      "member": Symbol(Used to implement hoisting),
      "remove": Symbol(Used to implement hoisting),
      "remove_all": Symbol(Used to implement hoisting),
      "reverse": Symbol(Used to implement hoisting),
      "stream_append": Symbol(Used to implement hoisting),
      "stream_filter": Symbol(Used to implement hoisting),
      "stream_for_each": Symbol(Used to implement hoisting),
      "stream_length": Symbol(Used to implement hoisting),
      "stream_map": Symbol(Used to implement hoisting),
      "stream_member": Symbol(Used to implement hoisting),
      "stream_ref": Symbol(Used to implement hoisting),
      "stream_remove": Symbol(Used to implement hoisting),
      "stream_remove_all": Symbol(Used to implement hoisting),
      "stream_reverse": Symbol(Used to implement hoisting),
      "stream_to_list": Symbol(Used to implement hoisting),
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine basic 2`] = `""`;

exports[`setBreakpointAtLine for loops 1`] = `
Array [
  Object {
    "head": Object {
      "b": Symbol(Used to implement hoisting),
    },
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 1,
    },
    "name": "forBlockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 1,
    },
    "name": "forLoopEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {},
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine for loops 2`] = `""`;

exports[`setBreakpointAtLine for loops 3`] = `
Array [
  Object {
    "head": Object {
      "b": Symbol(Used to implement hoisting),
    },
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 2,
    },
    "name": "forBlockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 2,
    },
    "name": "forLoopEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {},
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine for loops 4`] = `""`;

exports[`setBreakpointAtLine for loops 5`] = `
Array [
  Object {
    "head": Object {
      "b": Symbol(Used to implement hoisting),
    },
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 4,
    },
    "name": "forBlockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 4,
    },
    "name": "forLoopEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {},
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine for loops 6`] = `""`;

exports[`setBreakpointAtLine for loops 7`] = `
Array [
  Object {
    "head": Object {
      "b": Symbol(Used to implement hoisting),
    },
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 8,
    },
    "name": "forBlockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "i": 8,
    },
    "name": "forLoopEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {},
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine for loops 8`] = `""`;

exports[`setBreakpointAtLine for loops 9`] = `
Array [
  Object {
    "head": Object {},
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine for loops 10`] = `""`;

exports[`setBreakpointAtLine function 1 1`] = `
Array [
  Object {
    "head": Object {
      "a": Symbol(Used to implement hoisting),
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine function 1 2`] = `""`;

exports[`setBreakpointAtLine function 2 1`] = `
Array [
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": "bob",
        },
      ],
      "callee": Node {
        "end": 43,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "string",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "string",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 3,
            "line": 5,
          },
          "start": Position {
            "column": 2,
            "line": 5,
          },
        },
        "name": "a",
        "start": 42,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 50,
      "inferredType": Object {
        "kind": "primitive",
        "name": "string",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 10,
          "line": 5,
        },
        "start": Position {
          "column": 2,
          "line": 5,
        },
      },
      "start": 42,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "x": "bob",
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine function 2 2`] = `""`;

exports[`setBreakpointAtLine function 3 1`] = `
Array [
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine function 3 2`] = `""`;

exports[`setBreakpointAtLine function 4 1`] = `
Array [
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine function 4 2`] = `""`;

exports[`setBreakpointAtLine granularity 1 1`] = `
Array [
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 1,
        },
      ],
      "callee": Node {
        "end": 78,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 3,
            "line": 7,
          },
          "start": Position {
            "column": 2,
            "line": 7,
          },
        },
        "name": "a",
        "start": 77,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 81,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 6,
          "line": 7,
        },
        "start": Position {
          "column": 2,
          "line": 7,
        },
      },
      "start": 77,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "ctrlf": 1,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine granularity 1 2`] = `""`;

exports[`setBreakpointAtLine granularity 1 3`] = `
Array [
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 0,
        },
      ],
      "callee": Node {
        "end": 58,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 5,
            "line": 5,
          },
          "start": Position {
            "column": 4,
            "line": 5,
          },
        },
        "name": "a",
        "start": 57,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 69,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 16,
          "line": 5,
        },
        "start": Position {
          "column": 4,
          "line": 5,
        },
      },
      "start": 57,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "ctrlf": 0,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine granularity 1 4`] = `""`;

exports[`setBreakpointAtLine granularity 1 5`] = `
Array [
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": -1,
        },
      ],
      "callee": Node {
        "end": 58,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 5,
            "line": 5,
          },
          "start": Position {
            "column": 4,
            "line": 5,
          },
        },
        "name": "a",
        "start": 57,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 69,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 16,
          "line": 5,
        },
        "start": Position {
          "column": 4,
          "line": 5,
        },
      },
      "start": 57,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "ctrlf": -1,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine granularity 1 6`] = `""`;

exports[`setBreakpointAtLine granularity 2 1`] = `
Array [
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": -1,
        },
      ],
      "callee": Node {
        "end": 58,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 5,
            "line": 5,
          },
          "start": Position {
            "column": 4,
            "line": 5,
          },
        },
        "name": "a",
        "start": 57,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 69,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 16,
          "line": 5,
        },
        "start": Position {
          "column": 4,
          "line": 5,
        },
      },
      "start": 57,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "ctrlf": -1,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine granularity 2 2`] = `""`;

exports[`setBreakpointAtLine granularity 2 3`] = `
Array [
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine granularity 2 4`] = `""`;

exports[`setBreakpointAtLine granularity 3 1`] = `
Array [
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 1,
        },
      ],
      "callee": Node {
        "end": 78,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 3,
            "line": 7,
          },
          "start": Position {
            "column": 2,
            "line": 7,
          },
        },
        "name": "a",
        "start": 77,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 81,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 6,
          "line": 7,
        },
        "start": Position {
          "column": 2,
          "line": 7,
        },
      },
      "start": 77,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "ctrlf": 1,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine granularity 3 2`] = `""`;

exports[`setBreakpointAtLine granularity 3 3`] = `
Array [
  Object {
    "head": Object {},
    "name": "functionBodyEnvironment",
    "tail": null,
    "thisContext": undefined,
  },
  Object {
    "callExpression": Object {
      "arguments": Array [
        Object {
          "loc": undefined,
          "type": "Literal",
          "value": 0,
        },
      ],
      "callee": Node {
        "end": 58,
        "inferredType": Object {
          "kind": "function",
          "parameterTypes": Array [
            Object {
              "kind": "primitive",
              "name": "number",
            },
          ],
          "returnType": Object {
            "kind": "primitive",
            "name": "number",
          },
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 5,
            "line": 5,
          },
          "start": Position {
            "column": 4,
            "line": 5,
          },
        },
        "name": "a",
        "start": 57,
        "typability": "Typed",
        "type": "Identifier",
      },
      "end": 69,
      "inferredType": Object {
        "kind": "primitive",
        "name": "number",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 16,
          "line": 5,
        },
        "start": Position {
          "column": 4,
          "line": 5,
        },
      },
      "start": 57,
      "typability": "Typed",
      "type": "CallExpression",
    },
    "head": Object {
      "ctrlf": 0,
    },
    "name": "a",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine granularity 3 4`] = `""`;

exports[`setBreakpointAtLine granularity 3 5`] = `
Array [
  Object {
    "head": Object {
      "a": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine granularity 3 6`] = `""`;

exports[`setBreakpointAtLine while loops 1`] = `
Array [
  Object {
    "head": Object {},
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": 9,
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine while loops 2`] = `""`;

exports[`setBreakpointAtLine while loops 3`] = `
Array [
  Object {
    "head": Object {},
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": 9,
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine while loops 4`] = `""`;

exports[`setBreakpointAtLine while loops 5`] = `
Array [
  Object {
    "head": Object {},
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": 6,
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine while loops 6`] = `""`;

exports[`setBreakpointAtLine while loops 7`] = `
Array [
  Object {
    "head": Object {},
    "name": "blockEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "a": 6,
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine while loops 8`] = `""`;

exports[`setBreakpointAtLine while loops 9`] = `
Array [
  Object {
    "head": Object {
      "a": 3,
    },
    "name": "programEnvironment",
    "tail": null,
  },
  Object {
    "head": Object {
      "$accumulate": [Function],
      "$append": [Function],
      "$build_list": [Function],
      "$enum_list": [Function],
      "$filter": [Function],
      "$length": [Function],
      "$list_to_string": [Function],
      "$map": [Function],
      "$remove": [Function],
      "$remove_all": [Function],
      "$reverse": [Function],
      "accumulate": [Function],
      "append": [Function],
      "build_list": [Function],
      "build_stream": [Function],
      "enum_list": [Function],
      "enum_stream": [Function],
      "equal": [Function],
      "eval_stream": [Function],
      "filter": [Function],
      "for_each": [Function],
      "integers_from": [Function],
      "is_list": [Function],
      "is_stream": [Function],
      "length": [Function],
      "list_ref": [Function],
      "list_to_stream": [Function],
      "list_to_string": [Function],
      "map": [Function],
      "member": [Function],
      "remove": [Function],
      "remove_all": [Function],
      "reverse": [Function],
      "stream_append": [Function],
      "stream_filter": [Function],
      "stream_for_each": [Function],
      "stream_length": [Function],
      "stream_map": [Function],
      "stream_member": [Function],
      "stream_ref": [Function],
      "stream_remove": [Function],
      "stream_remove_all": [Function],
      "stream_reverse": [Function],
      "stream_to_list": [Function],
    },
    "name": "programEnvironment",
    "tail": null,
  },
]
`;

exports[`setBreakpointAtLine while loops 10`] = `""`;
