// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cannot overwrite loop variables within a block 1`] = `"Line 5: Cannot assign new value to constant x"`;

exports[`Error when accessing temporal dead zone 1`] = `
Object {
  "status": "error",
}
`;

exports[`In a block, every going-to-be-defined variable in the block cannot be accessed until it has been defined in the block. 1`] = `"Line 4: Name a not yet assigned"`;

exports[`No hoisting of functions. Only the name is hoisted like let and const 1`] = `
Object {
  "status": "error",
}
`;

exports[`Shadowed variables may not be assigned to until declared in the current scope 1`] = `"Line 4: Name variable not declared"`;

exports[`const uses block scoping instead of function scoping 1`] = `
Object {
  "status": "finished",
  "value": true,
}
`;

exports[`for loop \`let\` variables are copied into the block scope 1`] = `
Object {
  "status": "finished",
  "value": 1,
}
`;

exports[`for loops use block scoping instead of function scoping 1`] = `
Object {
  "status": "finished",
  "value": true,
}
`;

exports[`let uses block scoping instead of function scoping 1`] = `
Object {
  "status": "finished",
  "value": true,
}
`;

exports[`standalone block statements 1`] = `
Object {
  "status": "finished",
  "value": true,
}
`;

exports[`while loops use block scoping instead of function scoping 1`] = `
Object {
  "status": "finished",
  "value": true,
}
`;
