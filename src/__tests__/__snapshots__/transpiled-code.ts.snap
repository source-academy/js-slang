// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ensure no name clashes 1`] = `
"const native0 = $$NATIVE_STORAGE;
const boolOrErr0 = native0[1].operators.get(\\"itselfIfBooleanElseError\\");
const callIfFuncAndRightArgs0 = native0[1].operators.get(\\"callIfFunctionAndRightArgumentsElseError\\");
const wrap90 = native0[1].properTailCalls.wrap;
((Object, Function, Array, Number, parseFloat, parseInt, Infinity, NaN, undefined, Boolean, String, Symbol, Date, Promise, RegExp, Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError, JSON, Math, console, Intl, ArrayBuffer, Uint8Array, Int8Array, Uint16Array, Int16Array, Uint32Array, Int32Array, Float32Array, Float64Array, Uint8ClampedArray, DataView, Map, Set, WeakMap, WeakSet, Proxy, Reflect, decodeURI, decodeURIComponent, encodeURI, encodeURIComponent, escape, unescape, isFinite, isNaN, SharedArrayBuffer, Atomics, WebAssembly, process, Buffer, setImmediate, clearImmediate, addEventListener, removeEventListener, mockRunTicksRepeatedly, mockRunTimersOnce, mockAdvanceTimersByTime, mockRunTimersRepeatedly, mockClearTimers, mockGetTimersCount, regeneratorRuntime, describe, xdescribe, fdescribe, it, xit, fit, beforeEach, afterEach, beforeAll, afterAll, pending, fail, spyOn, jsApiReporter, jasmine, test, xtest, expect, $$NATIVE_STORAGE, onafterprint, onbeforeprint, onbeforeunload, onhashchange, onlanguagechange, onmessage, onmessageerror, onoffline, ononline, onpagehide, onpageshow, onpopstate, onrejectionhandled, onstorage, onunhandledrejection, onunload, onblur, onerror, onfocus, onload, onresize, onscroll, onabort, onautocomplete, onautocompleteerror, oncancel, oncanplay, oncanplaythrough, onchange, onclick, onclose, oncontextmenu, oncuechange, ondblclick, ondrag, ondragend, ondragenter, ondragexit, ondragleave, ondragover, ondragstart, ondrop, ondurationchange, onemptied, onended, oninput, oninvalid, onkeydown, onkeypress, onkeyup, onloadeddata, onloadedmetadata, onloadstart, onmousedown, onmouseenter, onmouseleave, onmousemove, onmouseout, onmouseover, onmouseup, onwheel, onpause, onplay, onplaying, onprogress, onratechange, onreset, onsecuritypolicyviolation, onseeked, onseeking, onselect, onsort, onstalled, onsubmit, onsuspend, ontimeupdate, ontoggle, onvolumechange, onwaiting, _registeredHandlers, _eventHandlers, _globalProxy, _document, _sessionHistory, _virtualConsole, _runScripts, dispatchEvent, _top, _parent, _frameElement, _length, _pretendToBeVisual, length, window, frameElement, frames, self, parent, top, document, external, location, history, navigator, locationbar, menubar, personalbar, scrollbars, statusbar, toolbar, performance, screen, setTimeout, setInterval, clearInterval, clearTimeout, requestAnimationFrame, cancelAnimationFrame, __stopAllTimers, postMessage, atob, btoa, FileReader, WebSocket, AbortSignal, AbortController, XMLHttpRequest, stop, close, getComputedStyle, captureEvents, releaseEvents, name, devicePixelRatio, innerWidth, innerHeight, outerWidth, outerHeight, pageXOffset, pageYOffset, screenX, screenY, scrollX, scrollY, screenLeft, screenTop, alert, blur, confirm, focus, moveBy, moveTo, open, print, prompt, resizeBy, resizeTo, scroll, scrollBy, scrollTo) => {
  return (() => {
    const runtime = native0[1].builtins.get(\\"runtime\\");
    const display = native0[1].builtins.get(\\"display\\");
    const raw_display = native0[1].builtins.get(\\"raw_display\\");
    const stringify = native0[1].builtins.get(\\"stringify\\");
    const error = native0[1].builtins.get(\\"error\\");
    const prompt = native0[1].builtins.get(\\"prompt\\");
    const is_number = native0[1].builtins.get(\\"is_number\\");
    const is_string = native0[1].builtins.get(\\"is_string\\");
    const is_function = native0[1].builtins.get(\\"is_function\\");
    const is_boolean = native0[1].builtins.get(\\"is_boolean\\");
    const is_undefined = native0[1].builtins.get(\\"is_undefined\\");
    const parse_int = native0[1].builtins.get(\\"parse_int\\");
    const undefined = native0[1].builtins.get(\\"undefined\\");
    const NaN = native0[1].builtins.get(\\"NaN\\");
    const Infinity = native0[1].builtins.get(\\"Infinity\\");
    const math_abs = native0[1].builtins.get(\\"math_abs\\");
    const math_acos = native0[1].builtins.get(\\"math_acos\\");
    const math_acosh = native0[1].builtins.get(\\"math_acosh\\");
    const math_asin = native0[1].builtins.get(\\"math_asin\\");
    const math_asinh = native0[1].builtins.get(\\"math_asinh\\");
    const math_atan = native0[1].builtins.get(\\"math_atan\\");
    const math_atanh = native0[1].builtins.get(\\"math_atanh\\");
    const math_atan2 = native0[1].builtins.get(\\"math_atan2\\");
    const math_ceil = native0[1].builtins.get(\\"math_ceil\\");
    const math_cbrt = native0[1].builtins.get(\\"math_cbrt\\");
    const math_expm1 = native0[1].builtins.get(\\"math_expm1\\");
    const math_clz32 = native0[1].builtins.get(\\"math_clz32\\");
    const math_cos = native0[1].builtins.get(\\"math_cos\\");
    const math_cosh = native0[1].builtins.get(\\"math_cosh\\");
    const math_exp = native0[1].builtins.get(\\"math_exp\\");
    const math_floor = native0[1].builtins.get(\\"math_floor\\");
    const math_fround = native0[1].builtins.get(\\"math_fround\\");
    const math_hypot = native0[1].builtins.get(\\"math_hypot\\");
    const math_imul = native0[1].builtins.get(\\"math_imul\\");
    const math_log = native0[1].builtins.get(\\"math_log\\");
    const math_log1p = native0[1].builtins.get(\\"math_log1p\\");
    const math_log2 = native0[1].builtins.get(\\"math_log2\\");
    const math_log10 = native0[1].builtins.get(\\"math_log10\\");
    const math_max = native0[1].builtins.get(\\"math_max\\");
    const math_min = native0[1].builtins.get(\\"math_min\\");
    const math_pow = native0[1].builtins.get(\\"math_pow\\");
    const math_random = native0[1].builtins.get(\\"math_random\\");
    const math_round = native0[1].builtins.get(\\"math_round\\");
    const math_sign = native0[1].builtins.get(\\"math_sign\\");
    const math_sin = native0[1].builtins.get(\\"math_sin\\");
    const math_sinh = native0[1].builtins.get(\\"math_sinh\\");
    const math_sqrt = native0[1].builtins.get(\\"math_sqrt\\");
    const math_tan = native0[1].builtins.get(\\"math_tan\\");
    const math_tanh = native0[1].builtins.get(\\"math_tanh\\");
    const math_trunc = native0[1].builtins.get(\\"math_trunc\\");
    const math_E = native0[1].builtins.get(\\"math_E\\");
    const math_LN10 = native0[1].builtins.get(\\"math_LN10\\");
    const math_LN2 = native0[1].builtins.get(\\"math_LN2\\");
    const math_LOG10E = native0[1].builtins.get(\\"math_LOG10E\\");
    const math_LOG2E = native0[1].builtins.get(\\"math_LOG2E\\");
    const math_PI = native0[1].builtins.get(\\"math_PI\\");
    const math_SQRT1_2 = native0[1].builtins.get(\\"math_SQRT1_2\\");
    const math_SQRT2 = native0[1].builtins.get(\\"math_SQRT2\\");
    const pair = native0[1].builtins.get(\\"pair\\");
    const is_pair = native0[1].builtins.get(\\"is_pair\\");
    const head = native0[1].builtins.get(\\"head\\");
    const tail = native0[1].builtins.get(\\"tail\\");
    const is_null = native0[1].builtins.get(\\"is_null\\");
    const is_list = native0[1].builtins.get(\\"is_list\\");
    const list = native0[1].builtins.get(\\"list\\");
    const length = native0[1].builtins.get(\\"length\\");
    const map = native0[1].builtins.get(\\"map\\");
    const build_list = native0[1].builtins.get(\\"build_list\\");
    const for_each = native0[1].builtins.get(\\"for_each\\");
    const list_to_string = native0[1].builtins.get(\\"list_to_string\\");
    const reverse = native0[1].builtins.get(\\"reverse\\");
    const append = native0[1].builtins.get(\\"append\\");
    const member = native0[1].builtins.get(\\"member\\");
    const remove = native0[1].builtins.get(\\"remove\\");
    const remove_all = native0[1].builtins.get(\\"remove_all\\");
    const filter = native0[1].builtins.get(\\"filter\\");
    const enum_list = native0[1].builtins.get(\\"enum_list\\");
    const list_ref = native0[1].builtins.get(\\"list_ref\\");
    const accumulate = native0[1].builtins.get(\\"accumulate\\");
    const equal = native0[1].builtins.get(\\"equal\\");
    const draw_data = native0[1].builtins.get(\\"draw_data\\");
    const set_head = native0[1].builtins.get(\\"set_head\\");
    const set_tail = native0[1].builtins.get(\\"set_tail\\");
    const array_length = native0[1].builtins.get(\\"array_length\\");
    const is_array = native0[1].builtins.get(\\"is_array\\");
    const parse = native0[1].builtins.get(\\"parse\\");
    const apply_in_underlying_javascript = native0[1].builtins.get(\\"apply_in_underlying_javascript\\");
    boolOrErr[123] = 1;
    const f = wrap90(callIfFuncAndRightArgs => {
      let wrap = 2;
      wrap0;
      wrap1;
      wrap2;
      wrap3;
      wrap4;
      wrap5;
      wrap6;
      wrap7;
      wrap8;
      wrap9;
    });
    const lastStatementResult = eval(\\"native;\\");
    native0[1].globals.set(\\"f\\", {
      kind: \\"const\\",
      value: f
    });
    return lastStatementResult;
  })();
})();
"
`;

exports[`builtins do get prepended 1`] = `
Object {
  "code": "ensure_builtins;",
  "transpiled": "const native = $$NATIVE_STORAGE;
const boolOrErr = native.operators.get(\\"itselfIfBooleanElseError\\");
const callIfFuncAndRightArgs = native.operators.get(\\"callIfFunctionAndRightArgumentsElseError\\");
const wrap = native.properTailCalls.wrap;
(( <globals redacted> ) => {
  return (() => {
    const runtime = native.builtins.get(\\"runtime\\");
    const display = native.builtins.get(\\"display\\");
    const raw_display = native.builtins.get(\\"raw_display\\");
    const stringify = native.builtins.get(\\"stringify\\");
    const error = native.builtins.get(\\"error\\");
    const prompt = native.builtins.get(\\"prompt\\");
    const is_number = native.builtins.get(\\"is_number\\");
    const is_string = native.builtins.get(\\"is_string\\");
    const is_function = native.builtins.get(\\"is_function\\");
    const is_boolean = native.builtins.get(\\"is_boolean\\");
    const is_undefined = native.builtins.get(\\"is_undefined\\");
    const parse_int = native.builtins.get(\\"parse_int\\");
    const undefined = native.builtins.get(\\"undefined\\");
    const NaN = native.builtins.get(\\"NaN\\");
    const Infinity = native.builtins.get(\\"Infinity\\");
    const math_abs = native.builtins.get(\\"math_abs\\");
    const math_acos = native.builtins.get(\\"math_acos\\");
    const math_acosh = native.builtins.get(\\"math_acosh\\");
    const math_asin = native.builtins.get(\\"math_asin\\");
    const math_asinh = native.builtins.get(\\"math_asinh\\");
    const math_atan = native.builtins.get(\\"math_atan\\");
    const math_atanh = native.builtins.get(\\"math_atanh\\");
    const math_atan2 = native.builtins.get(\\"math_atan2\\");
    const math_ceil = native.builtins.get(\\"math_ceil\\");
    const math_cbrt = native.builtins.get(\\"math_cbrt\\");
    const math_expm1 = native.builtins.get(\\"math_expm1\\");
    const math_clz32 = native.builtins.get(\\"math_clz32\\");
    const math_cos = native.builtins.get(\\"math_cos\\");
    const math_cosh = native.builtins.get(\\"math_cosh\\");
    const math_exp = native.builtins.get(\\"math_exp\\");
    const math_floor = native.builtins.get(\\"math_floor\\");
    const math_fround = native.builtins.get(\\"math_fround\\");
    const math_hypot = native.builtins.get(\\"math_hypot\\");
    const math_imul = native.builtins.get(\\"math_imul\\");
    const math_log = native.builtins.get(\\"math_log\\");
    const math_log1p = native.builtins.get(\\"math_log1p\\");
    const math_log2 = native.builtins.get(\\"math_log2\\");
    const math_log10 = native.builtins.get(\\"math_log10\\");
    const math_max = native.builtins.get(\\"math_max\\");
    const math_min = native.builtins.get(\\"math_min\\");
    const math_pow = native.builtins.get(\\"math_pow\\");
    const math_random = native.builtins.get(\\"math_random\\");
    const math_round = native.builtins.get(\\"math_round\\");
    const math_sign = native.builtins.get(\\"math_sign\\");
    const math_sin = native.builtins.get(\\"math_sin\\");
    const math_sinh = native.builtins.get(\\"math_sinh\\");
    const math_sqrt = native.builtins.get(\\"math_sqrt\\");
    const math_tan = native.builtins.get(\\"math_tan\\");
    const math_tanh = native.builtins.get(\\"math_tanh\\");
    const math_trunc = native.builtins.get(\\"math_trunc\\");
    const math_E = native.builtins.get(\\"math_E\\");
    const math_LN10 = native.builtins.get(\\"math_LN10\\");
    const math_LN2 = native.builtins.get(\\"math_LN2\\");
    const math_LOG10E = native.builtins.get(\\"math_LOG10E\\");
    const math_LOG2E = native.builtins.get(\\"math_LOG2E\\");
    const math_PI = native.builtins.get(\\"math_PI\\");
    const math_SQRT1_2 = native.builtins.get(\\"math_SQRT1_2\\");
    const math_SQRT2 = native.builtins.get(\\"math_SQRT2\\");
    const pair = native.builtins.get(\\"pair\\");
    const is_pair = native.builtins.get(\\"is_pair\\");
    const head = native.builtins.get(\\"head\\");
    const tail = native.builtins.get(\\"tail\\");
    const is_null = native.builtins.get(\\"is_null\\");
    const is_list = native.builtins.get(\\"is_list\\");
    const list = native.builtins.get(\\"list\\");
    const length = native.builtins.get(\\"length\\");
    const map = native.builtins.get(\\"map\\");
    const build_list = native.builtins.get(\\"build_list\\");
    const for_each = native.builtins.get(\\"for_each\\");
    const list_to_string = native.builtins.get(\\"list_to_string\\");
    const reverse = native.builtins.get(\\"reverse\\");
    const append = native.builtins.get(\\"append\\");
    const member = native.builtins.get(\\"member\\");
    const remove = native.builtins.get(\\"remove\\");
    const remove_all = native.builtins.get(\\"remove_all\\");
    const filter = native.builtins.get(\\"filter\\");
    const enum_list = native.builtins.get(\\"enum_list\\");
    const list_ref = native.builtins.get(\\"list_ref\\");
    const accumulate = native.builtins.get(\\"accumulate\\");
    const equal = native.builtins.get(\\"equal\\");
    const draw_data = native.builtins.get(\\"draw_data\\");
    const set_head = native.builtins.get(\\"set_head\\");
    const set_tail = native.builtins.get(\\"set_tail\\");
    const array_length = native.builtins.get(\\"array_length\\");
    const is_array = native.builtins.get(\\"is_array\\");
    const parse = native.builtins.get(\\"parse\\");
    const apply_in_underlying_javascript = native.builtins.get(\\"apply_in_underlying_javascript\\");
    const lastStatementResult = eval(\\"ensure_builtins;\\");
    return lastStatementResult;
  })();
})();
",
}
`;
