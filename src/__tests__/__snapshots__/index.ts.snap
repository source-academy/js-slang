// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cannot overwrite consts even when assignment is allowed: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "function test(){
  const constant = 3;
  constant = 4;
  return constant;
}
test();",
  "displayResult": Array [],
  "errors": Array [
    ConstAssignment {
      "location": SourceLocation {
        "end": Position {
          "column": 14,
          "line": 3,
        },
        "start": Position {
          "column": 2,
          "line": 3,
        },
      },
      "name": "constant",
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 3: Cannot assign new value to constant constant.",
  "result": undefined,
  "resultStatus": "error",
  "transpiled": "const native = $$NATIVE_STORAGE;
const boolOrErr = native.operators.get(\\"itselfIfBooleanElseError\\");
const callIfFuncAndRightArgs = native.operators.get(\\"callIfFunctionAndRightArgumentsElseError\\");
const wrap = native.properTailCalls.wrap;
(( <globals redacted> ) => {
  return (() => {
    const test = wrap(() => {
      const constant = 3;
      constant = 4;
      return {
        isTail: false,
        value: constant
      };
    }, \\"function test() {\\\\n  const constant = 3;\\\\n  constant = 4;\\\\n  return constant;\\\\n}\\");
    const lastStatementResult = eval(\\"callIfFuncAndRightArgs(test, 6, 0);\\");
    native.globals.set(\\"test\\", {
      kind: \\"const\\",
      value: test
    });
    return lastStatementResult;
  })();
})();
",
  "visualiseListResult": Array [],
}
`;
