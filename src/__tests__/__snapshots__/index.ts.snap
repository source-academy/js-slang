// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Arrow function definition returns itself 1`] = `
Object {
  "status": "finished",
  "value": ArrowClosure {
    "frame": Object {
      "environment": Object {
        "Infinity": Infinity,
        "NaN": NaN,
        "display": [Function],
        "error": [Function],
        "math_E": 2.718281828459045,
        "math_LN10": 2.302585092994046,
        "math_LN2": 0.6931471805599453,
        "math_LOG10E": 0.4342944819032518,
        "math_LOG2E": 1.4426950408889634,
        "math_PI": 3.141592653589793,
        "math_SQRT1_2": 0.7071067811865476,
        "math_SQRT2": 1.4142135623730951,
        "math_abs": [Function],
        "math_acos": [Function],
        "math_acosh": [Function],
        "math_asin": [Function],
        "math_asinh": [Function],
        "math_atan": [Function],
        "math_atan2": [Function],
        "math_atanh": [Function],
        "math_cbrt": [Function],
        "math_ceil": [Function],
        "math_clz32": [Function],
        "math_cos": [Function],
        "math_cosh": [Function],
        "math_exp": [Function],
        "math_expm1": [Function],
        "math_floor": [Function],
        "math_fround": [Function],
        "math_hypot": [Function],
        "math_imul": [Function],
        "math_log": [Function],
        "math_log10": [Function],
        "math_log1p": [Function],
        "math_log2": [Function],
        "math_max": [Function],
        "math_min": [Function],
        "math_pow": [Function],
        "math_random": [Function],
        "math_round": [Function],
        "math_sign": [Function],
        "math_sin": [Function],
        "math_sinh": [Function],
        "math_sqrt": [Function],
        "math_tan": [Function],
        "math_tanh": [Function],
        "math_trunc": [Function],
        "parse_int": [Function],
        "prompt": [Function],
        "runtime": [Function],
        "undefined": undefined,
      },
      "name": "global",
      "parent": null,
    },
    "fun": [Function],
    "name": "Anonymous1",
    "node": Node {
      "__id": "node_12",
      "body": Node {
        "__id": "node_11",
        "end": 8,
        "loc": SourceLocation {
          "end": Position {
            "column": 8,
            "line": 1,
          },
          "start": Position {
            "column": 6,
            "line": 1,
          },
        },
        "raw": "42",
        "start": 6,
        "type": "Literal",
        "value": 42,
      },
      "end": 8,
      "expression": true,
      "generator": false,
      "id": null,
      "loc": SourceLocation {
        "end": Position {
          "column": 8,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "params": Array [],
      "start": 0,
      "type": "ArrowFunctionExpression",
    },
  },
}
`;

exports[`Arrow function definition returns itself 2`] = `
ArrowClosure {
  "frame": Object {
    "environment": Object {
      "Infinity": Infinity,
      "NaN": NaN,
      "display": [Function],
      "error": [Function],
      "math_E": 2.718281828459045,
      "math_LN10": 2.302585092994046,
      "math_LN2": 0.6931471805599453,
      "math_LOG10E": 0.4342944819032518,
      "math_LOG2E": 1.4426950408889634,
      "math_PI": 3.141592653589793,
      "math_SQRT1_2": 0.7071067811865476,
      "math_SQRT2": 1.4142135623730951,
      "math_abs": [Function],
      "math_acos": [Function],
      "math_acosh": [Function],
      "math_asin": [Function],
      "math_asinh": [Function],
      "math_atan": [Function],
      "math_atan2": [Function],
      "math_atanh": [Function],
      "math_cbrt": [Function],
      "math_ceil": [Function],
      "math_clz32": [Function],
      "math_cos": [Function],
      "math_cosh": [Function],
      "math_exp": [Function],
      "math_expm1": [Function],
      "math_floor": [Function],
      "math_fround": [Function],
      "math_hypot": [Function],
      "math_imul": [Function],
      "math_log": [Function],
      "math_log10": [Function],
      "math_log1p": [Function],
      "math_log2": [Function],
      "math_max": [Function],
      "math_min": [Function],
      "math_pow": [Function],
      "math_random": [Function],
      "math_round": [Function],
      "math_sign": [Function],
      "math_sin": [Function],
      "math_sinh": [Function],
      "math_sqrt": [Function],
      "math_tan": [Function],
      "math_tanh": [Function],
      "math_trunc": [Function],
      "parse_int": [Function],
      "prompt": [Function],
      "runtime": [Function],
      "undefined": undefined,
    },
    "name": "global",
    "parent": null,
  },
  "fun": [Function],
  "name": "Anonymous1",
  "node": Node {
    "__id": "node_12",
    "body": Node {
      "__id": "node_11",
      "end": 8,
      "loc": SourceLocation {
        "end": Position {
          "column": 8,
          "line": 1,
        },
        "start": Position {
          "column": 6,
          "line": 1,
        },
      },
      "raw": "42",
      "start": 6,
      "type": "Literal",
      "value": 42,
    },
    "end": 8,
    "expression": true,
    "generator": false,
    "id": null,
    "loc": SourceLocation {
      "end": Position {
        "column": 8,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "params": Array [],
    "start": 0,
    "type": "ArrowFunctionExpression",
  },
}
`;

exports[`Empty code returns undefined 1`] = `
Object {
  "status": "finished",
  "value": undefined,
}
`;

exports[`Factorial arrow function 1`] = `
Object {
  "status": "finished",
  "value": 120,
}
`;

exports[`Inifinite recursion with list args represents CallExpression well 1`] = `
"Line 2: Infinite recursion
  f([1, [2, []]])..  f([1, [2, []]])..  f([1, [2, []]]).."
`;

exports[`Simple inifinite recursion represents CallExpression well 1`] = `
"Line 1: Infinite recursion
  x(x => x(x))..  x(x => x(x))..  x(x => x(x)).."
`;

exports[`Single boolean self-evaluates to itself 1`] = `
Object {
  "status": "finished",
  "value": true,
}
`;

exports[`Single number self-evaluates to itself 1`] = `
Object {
  "status": "finished",
  "value": 42,
}
`;

exports[`Single string self-evaluates to itself 1`] = `
Object {
  "status": "finished",
  "value": "42",
}
`;

exports[`parseError for missing semicolon 1`] = `"Line 1: Missing semicolon at the end of statement"`;
