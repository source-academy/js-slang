// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`1 + math_sin 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 4,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "raw": "1",
              "start": 3,
              "type": "Literal",
              "value": 1,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "operator": "+",
            "right": Node {
              "end": 15,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 6,
                  "line": 2,
                },
              },
              "name": "math_sin",
              "start": 7,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 4,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "raw": "1",
              "start": 3,
              "type": "Literal",
              "value": 1,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "operator": "+",
            "right": Node {
              "end": 15,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 6,
                  "line": 2,
                },
              },
              "name": "math_sin",
              "start": 7,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "",
  ],
]
`;

exports[`Infinite recursion 1`] = `
"function f() {
  return f();
}
f();

function f() {
  return f();
}
f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

f();

"
`;

exports[`Test "recursive" function calls 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "alternate": Object {
                    "left": Node {
                      "end": 65,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "name": "n",
                      "start": 64,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Object {
                          "left": Node {
                            "end": 79,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 23,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 22,
                                "line": 5,
                              },
                            },
                            "name": "n",
                            "start": 78,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 22,
                              "line": 5,
                            },
                          },
                          "operator": "-",
                          "right": Node {
                            "end": 81,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 24,
                                "line": 5,
                              },
                            },
                            "raw": "1",
                            "start": 80,
                            "type": "Literal",
                            "value": 1,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "callee": Node {
                        "end": 77,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 21,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 12,
                            "line": 5,
                          },
                        },
                        "name": "factorial",
                        "start": 68,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "consequent": Node {
                    "end": 55,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "raw": "1",
                    "start": 54,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "test": Object {
                    "left": Node {
                      "end": 39,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 38,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 45,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 18,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 17,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 44,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 27,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 21,
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 2,
              },
              "start": Position {
                "column": 11,
                "line": 2,
              },
            },
            "name": "factorial",
            "start": 12,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 23,
              "loc": SourceLocation {
                "end": Position {
                  "column": 22,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "name": "n",
              "start": 22,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 101,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 7,
                  },
                },
                "raw": "5",
                "start": 100,
                "type": "Literal",
                "value": 5,
              },
            ],
            "callee": Node {
              "end": 99,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "factorial",
              "start": 90,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "alternate": Object {
                    "left": Node {
                      "end": 65,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "name": "n",
                      "start": 64,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Object {
                          "left": Node {
                            "end": 79,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 23,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 22,
                                "line": 5,
                              },
                            },
                            "name": "n",
                            "start": 78,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 22,
                              "line": 5,
                            },
                          },
                          "operator": "-",
                          "right": Node {
                            "end": 81,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 24,
                                "line": 5,
                              },
                            },
                            "raw": "1",
                            "start": 80,
                            "type": "Literal",
                            "value": 1,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "callee": Node {
                        "end": 77,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 21,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 12,
                            "line": 5,
                          },
                        },
                        "name": "factorial",
                        "start": 68,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "consequent": Node {
                    "end": 55,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "raw": "1",
                    "start": 54,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "test": Object {
                    "left": Node {
                      "end": 39,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 38,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 45,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 18,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 17,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 44,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 27,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 21,
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 2,
              },
              "start": Position {
                "column": 11,
                "line": 2,
              },
            },
            "name": "factorial",
            "start": 12,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 23,
              "loc": SourceLocation {
                "end": Position {
                  "column": 22,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "name": "n",
              "start": 22,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 101,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 7,
                  },
                },
                "raw": "5",
                "start": 100,
                "type": "Literal",
                "value": 5,
              },
            ],
            "callee": Node {
              "end": 99,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 7,
                },
                "start": Position {
                  "column": 2,
                  "line": 7,
                },
              },
              "name": "factorial",
              "start": 90,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Function factorial declared, parameter(s) n required",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 101,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 7,
                  },
                },
                "raw": "5",
                "start": 100,
                "type": "Literal",
                "value": 5,
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "alternate": Object {
                        "left": Node {
                          "end": 65,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 5,
                            },
                          },
                          "name": "n",
                          "start": 64,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 5,
                          },
                        },
                        "operator": "*",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 79,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 23,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 22,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 78,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 22,
                                  "line": 5,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 81,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 24,
                                    "line": 5,
                                  },
                                },
                                "raw": "1",
                                "start": 80,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": [Circular],
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 5,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "BinaryExpression",
                      },
                      "consequent": Node {
                        "end": 55,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 9,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "raw": "1",
                        "start": 54,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "test": Object {
                        "left": Node {
                          "end": 39,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 12,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 38,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 45,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 17,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 44,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "factorial",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 23,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 22,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 21,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 22,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "callee",
      ],
    ],
    "Function factorial declared, parameter(s) n required",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 101,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 7,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 7,
                  },
                },
                "raw": "5",
                "start": 100,
                "type": "Literal",
                "value": 5,
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "alternate": Object {
                        "left": Node {
                          "end": 65,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 5,
                            },
                          },
                          "name": "n",
                          "start": 64,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 5,
                          },
                        },
                        "operator": "*",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 79,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 23,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 22,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 78,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 22,
                                  "line": 5,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 81,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 24,
                                    "line": 5,
                                  },
                                },
                                "raw": "1",
                                "start": 80,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": [Circular],
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 5,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "BinaryExpression",
                      },
                      "consequent": Node {
                        "end": 55,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 9,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "raw": "1",
                        "start": 54,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "test": Object {
                        "left": Node {
                          "end": 39,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 12,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 38,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 45,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 17,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 44,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "factorial",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 23,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 22,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 21,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 22,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Function factorial takes in 5 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 5,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "arguments": Array [
                  Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 5,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 25,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 22,
                        "line": 5,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 81,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 24,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 80,
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "BinaryExpression",
                  },
                ],
                "callee": Object {
                  "body": Object {
                    "body": Array [
                      Object {
                        "argument": Object {
                          "alternate": Object {
                            "left": Node {
                              "end": 65,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "name": "n",
                              "start": 64,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "operator": "*",
                            "right": Object {
                              "arguments": Array [
                                Object {
                                  "left": Node {
                                    "end": 79,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 23,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 78,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "-",
                                  "right": Node {
                                    "end": 81,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 24,
                                        "line": 5,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 80,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "callee": Object {
                                "body": [Circular],
                                "id": Node {
                                  "end": 21,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 20,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 2,
                                    },
                                  },
                                  "name": "factorial",
                                  "start": 12,
                                  "type": "Identifier",
                                },
                                "loc": undefined,
                                "params": Array [
                                  Node {
                                    "end": 23,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 22,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 21,
                                        "line": 2,
                                      },
                                    },
                                    "name": "n",
                                    "start": 22,
                                    "type": "Identifier",
                                  },
                                ],
                                "type": "FunctionExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 12,
                                  "line": 5,
                                },
                              },
                              "type": "CallExpression",
                            },
                            "type": "BinaryExpression",
                          },
                          "consequent": Node {
                            "end": 55,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 4,
                              },
                            },
                            "raw": "1",
                            "start": 54,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "test": Object {
                            "left": Node {
                              "end": 39,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 12,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 38,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "operator": "===",
                            "right": Node {
                              "end": 45,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 17,
                                  "line": 3,
                                },
                              },
                              "raw": "0",
                              "start": 44,
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ConditionalExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 3,
                          },
                        },
                        "type": "ReturnStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "id": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 2,
                      },
                    },
                    "name": "factorial",
                    "start": 12,
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "params": Array [
                    Node {
                      "end": 23,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 22,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 21,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 22,
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "type": "CallExpression",
              },
              "type": "BinaryExpression",
            },
            "consequent": Node {
              "end": 55,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "raw": "1",
              "start": 54,
              "type": "Literal",
              "value": 1,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "test": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 5,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 18,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 45,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 17,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 44,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Function factorial takes in 5 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 5,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "arguments": Array [
                  Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 5,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 25,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 22,
                        "line": 5,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 81,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 24,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 80,
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "BinaryExpression",
                  },
                ],
                "callee": Object {
                  "body": Object {
                    "body": Array [
                      Object {
                        "argument": Object {
                          "alternate": Object {
                            "left": Node {
                              "end": 65,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "name": "n",
                              "start": 64,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "operator": "*",
                            "right": Object {
                              "arguments": Array [
                                Object {
                                  "left": Node {
                                    "end": 79,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 23,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 78,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "-",
                                  "right": Node {
                                    "end": 81,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 24,
                                        "line": 5,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 80,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "callee": Object {
                                "body": [Circular],
                                "id": Node {
                                  "end": 21,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 20,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 2,
                                    },
                                  },
                                  "name": "factorial",
                                  "start": 12,
                                  "type": "Identifier",
                                },
                                "loc": undefined,
                                "params": Array [
                                  Node {
                                    "end": 23,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 22,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 21,
                                        "line": 2,
                                      },
                                    },
                                    "name": "n",
                                    "start": 22,
                                    "type": "Identifier",
                                  },
                                ],
                                "type": "FunctionExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 12,
                                  "line": 5,
                                },
                              },
                              "type": "CallExpression",
                            },
                            "type": "BinaryExpression",
                          },
                          "consequent": Node {
                            "end": 55,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 4,
                              },
                            },
                            "raw": "1",
                            "start": 54,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "test": Object {
                            "left": Node {
                              "end": 39,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 12,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 38,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "operator": "===",
                            "right": Node {
                              "end": 45,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 17,
                                  "line": 3,
                                },
                              },
                              "raw": "0",
                              "start": 44,
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ConditionalExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 3,
                          },
                        },
                        "type": "ReturnStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "id": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 2,
                      },
                    },
                    "name": "factorial",
                    "start": 12,
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "params": Array [
                    Node {
                      "end": 23,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 22,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 21,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 22,
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "type": "CallExpression",
              },
              "type": "BinaryExpression",
            },
            "consequent": Node {
              "end": 55,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "raw": "1",
              "start": 54,
              "type": "Literal",
              "value": 1,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "test": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 5,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 18,
                  "line": 3,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 45,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 17,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 44,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "test",
      ],
    ],
    "Binary expression 5 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 5,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "arguments": Array [
                  Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 5,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 25,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 22,
                        "line": 5,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 81,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 24,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 80,
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "BinaryExpression",
                  },
                ],
                "callee": Object {
                  "body": Object {
                    "body": Array [
                      Object {
                        "argument": Object {
                          "alternate": Object {
                            "left": Node {
                              "end": 65,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "name": "n",
                              "start": 64,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "operator": "*",
                            "right": Object {
                              "arguments": Array [
                                Object {
                                  "left": Node {
                                    "end": 79,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 23,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 78,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "-",
                                  "right": Node {
                                    "end": 81,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 24,
                                        "line": 5,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 80,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "callee": Object {
                                "body": [Circular],
                                "id": Node {
                                  "end": 21,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 20,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 2,
                                    },
                                  },
                                  "name": "factorial",
                                  "start": 12,
                                  "type": "Identifier",
                                },
                                "loc": undefined,
                                "params": Array [
                                  Node {
                                    "end": 23,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 22,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 21,
                                        "line": 2,
                                      },
                                    },
                                    "name": "n",
                                    "start": 22,
                                    "type": "Identifier",
                                  },
                                ],
                                "type": "FunctionExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 12,
                                  "line": 5,
                                },
                              },
                              "type": "CallExpression",
                            },
                            "type": "BinaryExpression",
                          },
                          "consequent": Node {
                            "end": 55,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 4,
                              },
                            },
                            "raw": "1",
                            "start": 54,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "test": Object {
                            "left": Node {
                              "end": 39,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 12,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 38,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "operator": "===",
                            "right": Node {
                              "end": 45,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 17,
                                  "line": 3,
                                },
                              },
                              "raw": "0",
                              "start": 44,
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ConditionalExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 3,
                          },
                        },
                        "type": "ReturnStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "id": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 2,
                      },
                    },
                    "name": "factorial",
                    "start": 12,
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "params": Array [
                    Node {
                      "end": 23,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 22,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 21,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 22,
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "type": "CallExpression",
              },
              "type": "BinaryExpression",
            },
            "consequent": Node {
              "end": 55,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "raw": "1",
              "start": 54,
              "type": "Literal",
              "value": 1,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "test": Node {
              "end": 5,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "false",
              "start": 0,
              "type": "Literal",
              "value": false,
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "test",
      ],
    ],
    "Binary expression 5 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 5,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "arguments": Array [
                  Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 5,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 25,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 22,
                        "line": 5,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 81,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 24,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 80,
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "BinaryExpression",
                  },
                ],
                "callee": Object {
                  "body": Object {
                    "body": Array [
                      Object {
                        "argument": Object {
                          "alternate": Object {
                            "left": Node {
                              "end": 65,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "name": "n",
                              "start": 64,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "operator": "*",
                            "right": Object {
                              "arguments": Array [
                                Object {
                                  "left": Node {
                                    "end": 79,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 23,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 78,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "-",
                                  "right": Node {
                                    "end": 81,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 24,
                                        "line": 5,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 80,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "callee": Object {
                                "body": [Circular],
                                "id": Node {
                                  "end": 21,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 20,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 2,
                                    },
                                  },
                                  "name": "factorial",
                                  "start": 12,
                                  "type": "Identifier",
                                },
                                "loc": undefined,
                                "params": Array [
                                  Node {
                                    "end": 23,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 22,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 21,
                                        "line": 2,
                                      },
                                    },
                                    "name": "n",
                                    "start": 22,
                                    "type": "Identifier",
                                  },
                                ],
                                "type": "FunctionExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 12,
                                  "line": 5,
                                },
                              },
                              "type": "CallExpression",
                            },
                            "type": "BinaryExpression",
                          },
                          "consequent": Node {
                            "end": 55,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 4,
                              },
                            },
                            "raw": "1",
                            "start": 54,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "test": Object {
                            "left": Node {
                              "end": 39,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 12,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 38,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "operator": "===",
                            "right": Node {
                              "end": 45,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 17,
                                  "line": 3,
                                },
                              },
                              "raw": "0",
                              "start": 44,
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ConditionalExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 3,
                          },
                        },
                        "type": "ReturnStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "id": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 2,
                      },
                    },
                    "name": "factorial",
                    "start": 12,
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "params": Array [
                    Node {
                      "end": 23,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 22,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 21,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 22,
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "type": "CallExpression",
              },
              "type": "BinaryExpression",
            },
            "consequent": Node {
              "end": 55,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 8,
                  "line": 4,
                },
              },
              "raw": "1",
              "start": 54,
              "type": "Literal",
              "value": 1,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "test": Node {
              "end": 5,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "false",
              "start": 0,
              "type": "Literal",
              "value": false,
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 25,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 22,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 81,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 25,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 24,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 80,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "body": Array [
                    Object {
                      "argument": Object {
                        "alternate": Object {
                          "left": Node {
                            "end": 65,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "name": "n",
                            "start": 64,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 5,
                            },
                          },
                          "operator": "*",
                          "right": Object {
                            "arguments": Array [
                              Object {
                                "left": Node {
                                  "end": 79,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 23,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 78,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 22,
                                    "line": 5,
                                  },
                                },
                                "operator": "-",
                                "right": Node {
                                  "end": 81,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 24,
                                      "line": 5,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 80,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "type": "BinaryExpression",
                              },
                            ],
                            "callee": Object {
                              "body": [Circular],
                              "id": Node {
                                "end": 21,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 20,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 2,
                                  },
                                },
                                "name": "factorial",
                                "start": 12,
                                "type": "Identifier",
                              },
                              "loc": undefined,
                              "params": Array [
                                Node {
                                  "end": 23,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 22,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 21,
                                      "line": 2,
                                    },
                                  },
                                  "name": "n",
                                  "start": 22,
                                  "type": "Identifier",
                                },
                              ],
                              "type": "FunctionExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 5,
                              },
                            },
                            "type": "CallExpression",
                          },
                          "type": "BinaryExpression",
                        },
                        "consequent": Node {
                          "end": 55,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "raw": "1",
                          "start": 54,
                          "type": "Literal",
                          "value": 1,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 39,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 12,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "name": "n",
                            "start": 38,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 45,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 17,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 44,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 4,
                          "line": 3,
                        },
                      },
                      "type": "ReturnStatement",
                    },
                  ],
                  "type": "BlockStatement",
                },
                "id": Node {
                  "end": 21,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 20,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "name": "factorial",
                  "start": 12,
                  "type": "Identifier",
                },
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 23,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 22,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 22,
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "type": "CallExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 25,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 22,
                      "line": 5,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 81,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 25,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 24,
                        "line": 5,
                      },
                    },
                    "raw": "1",
                    "start": 80,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "body": Array [
                    Object {
                      "argument": Object {
                        "alternate": Object {
                          "left": Node {
                            "end": 65,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "name": "n",
                            "start": 64,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 5,
                            },
                          },
                          "operator": "*",
                          "right": Object {
                            "arguments": Array [
                              Object {
                                "left": Node {
                                  "end": 79,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 23,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 78,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 22,
                                    "line": 5,
                                  },
                                },
                                "operator": "-",
                                "right": Node {
                                  "end": 81,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 24,
                                      "line": 5,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 80,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "type": "BinaryExpression",
                              },
                            ],
                            "callee": Object {
                              "body": [Circular],
                              "id": Node {
                                "end": 21,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 20,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 2,
                                  },
                                },
                                "name": "factorial",
                                "start": 12,
                                "type": "Identifier",
                              },
                              "loc": undefined,
                              "params": Array [
                                Node {
                                  "end": 23,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 22,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 21,
                                      "line": 2,
                                    },
                                  },
                                  "name": "n",
                                  "start": 22,
                                  "type": "Identifier",
                                },
                              ],
                              "type": "FunctionExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 5,
                              },
                            },
                            "type": "CallExpression",
                          },
                          "type": "BinaryExpression",
                        },
                        "consequent": Node {
                          "end": 55,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "raw": "1",
                          "start": 54,
                          "type": "Literal",
                          "value": 1,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 39,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 12,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "name": "n",
                            "start": 38,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 45,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 17,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 44,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 4,
                          "line": 3,
                        },
                      },
                      "type": "ReturnStatement",
                    },
                  ],
                  "type": "BlockStatement",
                },
                "id": Node {
                  "end": 21,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 20,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "name": "factorial",
                  "start": 12,
                  "type": "Identifier",
                },
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 23,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 22,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 22,
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "type": "CallExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 5 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "arguments": Array [
                Node {
                  "end": 1,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 1,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "4",
                  "start": 0,
                  "type": "Literal",
                  "value": 4,
                },
              ],
              "callee": Object {
                "body": Object {
                  "body": Array [
                    Object {
                      "argument": Object {
                        "alternate": Object {
                          "left": Node {
                            "end": 65,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "name": "n",
                            "start": 64,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 5,
                            },
                          },
                          "operator": "*",
                          "right": Object {
                            "arguments": Array [
                              Object {
                                "left": Node {
                                  "end": 79,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 23,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 78,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 22,
                                    "line": 5,
                                  },
                                },
                                "operator": "-",
                                "right": Node {
                                  "end": 81,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 24,
                                      "line": 5,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 80,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "type": "BinaryExpression",
                              },
                            ],
                            "callee": Object {
                              "body": [Circular],
                              "id": Node {
                                "end": 21,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 20,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 2,
                                  },
                                },
                                "name": "factorial",
                                "start": 12,
                                "type": "Identifier",
                              },
                              "loc": undefined,
                              "params": Array [
                                Node {
                                  "end": 23,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 22,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 21,
                                      "line": 2,
                                    },
                                  },
                                  "name": "n",
                                  "start": 22,
                                  "type": "Identifier",
                                },
                              ],
                              "type": "FunctionExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 5,
                              },
                            },
                            "type": "CallExpression",
                          },
                          "type": "BinaryExpression",
                        },
                        "consequent": Node {
                          "end": 55,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "raw": "1",
                          "start": 54,
                          "type": "Literal",
                          "value": 1,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 39,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 12,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "name": "n",
                            "start": 38,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 45,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 17,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 44,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 4,
                          "line": 3,
                        },
                      },
                      "type": "ReturnStatement",
                    },
                  ],
                  "type": "BlockStatement",
                },
                "id": Node {
                  "end": 21,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 20,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "name": "factorial",
                  "start": 12,
                  "type": "Identifier",
                },
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 23,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 22,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 22,
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "type": "CallExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 5 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "arguments": Array [
                Node {
                  "end": 1,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 1,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "4",
                  "start": 0,
                  "type": "Literal",
                  "value": 4,
                },
              ],
              "callee": Object {
                "body": Object {
                  "body": Array [
                    Object {
                      "argument": Object {
                        "alternate": Object {
                          "left": Node {
                            "end": 65,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "name": "n",
                            "start": 64,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 5,
                            },
                          },
                          "operator": "*",
                          "right": Object {
                            "arguments": Array [
                              Object {
                                "left": Node {
                                  "end": 79,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 23,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 78,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 22,
                                    "line": 5,
                                  },
                                },
                                "operator": "-",
                                "right": Node {
                                  "end": 81,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 24,
                                      "line": 5,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 80,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "type": "BinaryExpression",
                              },
                            ],
                            "callee": Object {
                              "body": [Circular],
                              "id": Node {
                                "end": 21,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 20,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 2,
                                  },
                                },
                                "name": "factorial",
                                "start": 12,
                                "type": "Identifier",
                              },
                              "loc": undefined,
                              "params": Array [
                                Node {
                                  "end": 23,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 22,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 21,
                                      "line": 2,
                                    },
                                  },
                                  "name": "n",
                                  "start": 22,
                                  "type": "Identifier",
                                },
                              ],
                              "type": "FunctionExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 12,
                                "line": 5,
                              },
                            },
                            "type": "CallExpression",
                          },
                          "type": "BinaryExpression",
                        },
                        "consequent": Node {
                          "end": 55,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 9,
                              "line": 4,
                            },
                            "start": Position {
                              "column": 8,
                              "line": 4,
                            },
                          },
                          "raw": "1",
                          "start": 54,
                          "type": "Literal",
                          "value": 1,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 39,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 12,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "name": "n",
                            "start": 38,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 45,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 17,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 44,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 4,
                          "line": 3,
                        },
                      },
                      "type": "ReturnStatement",
                    },
                  ],
                  "type": "BlockStatement",
                },
                "id": Node {
                  "end": 21,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 20,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "name": "factorial",
                  "start": 12,
                  "type": "Identifier",
                },
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 23,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 22,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 21,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 22,
                    "type": "Identifier",
                  },
                ],
                "type": "FunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "type": "CallExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Function factorial takes in 4 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "alternate": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 4,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "arguments": Array [
                    Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 4,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 22,
                          "line": 5,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 81,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 24,
                            "line": 5,
                          },
                        },
                        "raw": "1",
                        "start": 80,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "alternate": Object {
                              "left": Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "*",
                              "right": Object {
                                "arguments": Array [
                                  Object {
                                    "left": Node {
                                      "end": 79,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 23,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 78,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "-",
                                    "right": Node {
                                      "end": 81,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 24,
                                          "line": 5,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 80,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "callee": Object {
                                  "body": [Circular],
                                  "id": Node {
                                    "end": 21,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 20,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 2,
                                      },
                                    },
                                    "name": "factorial",
                                    "start": 12,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [
                                    Node {
                                      "end": 23,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 22,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 21,
                                          "line": 2,
                                        },
                                      },
                                      "name": "n",
                                      "start": 22,
                                      "type": "Identifier",
                                    },
                                  ],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 12,
                                    "line": 5,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "type": "BinaryExpression",
                            },
                            "consequent": Node {
                              "end": 55,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 4,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 4,
                                },
                              },
                              "raw": "1",
                              "start": 54,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "test": Object {
                              "left": Node {
                                "end": 39,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 12,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 38,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "operator": "===",
                              "right": Node {
                                "end": 45,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 17,
                                    "line": 3,
                                  },
                                },
                                "raw": "0",
                                "start": 44,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "BinaryExpression",
                            },
                            "type": "ConditionalExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 3,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 2,
                        },
                      },
                      "name": "factorial",
                      "start": 12,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 23,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 22,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 21,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 22,
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 5,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "BinaryExpression",
              },
              "consequent": Node {
                "end": 55,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 54,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "test": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 4,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "operator": "===",
                "right": Node {
                  "end": 45,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 17,
                      "line": 3,
                    },
                  },
                  "raw": "0",
                  "start": 44,
                  "type": "Literal",
                  "value": 0,
                },
                "type": "BinaryExpression",
              },
              "type": "ConditionalExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Function factorial takes in 4 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "alternate": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 4,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "arguments": Array [
                    Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 4,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 22,
                          "line": 5,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 81,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 24,
                            "line": 5,
                          },
                        },
                        "raw": "1",
                        "start": 80,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "alternate": Object {
                              "left": Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "*",
                              "right": Object {
                                "arguments": Array [
                                  Object {
                                    "left": Node {
                                      "end": 79,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 23,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 78,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "-",
                                    "right": Node {
                                      "end": 81,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 24,
                                          "line": 5,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 80,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "callee": Object {
                                  "body": [Circular],
                                  "id": Node {
                                    "end": 21,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 20,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 2,
                                      },
                                    },
                                    "name": "factorial",
                                    "start": 12,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [
                                    Node {
                                      "end": 23,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 22,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 21,
                                          "line": 2,
                                        },
                                      },
                                      "name": "n",
                                      "start": 22,
                                      "type": "Identifier",
                                    },
                                  ],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 12,
                                    "line": 5,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "type": "BinaryExpression",
                            },
                            "consequent": Node {
                              "end": 55,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 4,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 4,
                                },
                              },
                              "raw": "1",
                              "start": 54,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "test": Object {
                              "left": Node {
                                "end": 39,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 12,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 38,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "operator": "===",
                              "right": Node {
                                "end": 45,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 17,
                                    "line": 3,
                                  },
                                },
                                "raw": "0",
                                "start": 44,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "BinaryExpression",
                            },
                            "type": "ConditionalExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 3,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 2,
                        },
                      },
                      "name": "factorial",
                      "start": 12,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 23,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 22,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 21,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 22,
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 5,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "BinaryExpression",
              },
              "consequent": Node {
                "end": 55,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 54,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "test": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 4,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "operator": "===",
                "right": Node {
                  "end": 45,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 17,
                      "line": 3,
                    },
                  },
                  "raw": "0",
                  "start": 44,
                  "type": "Literal",
                  "value": 0,
                },
                "type": "BinaryExpression",
              },
              "type": "ConditionalExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "test",
      ],
    ],
    "Binary expression 4 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "alternate": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 4,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "arguments": Array [
                    Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 4,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 22,
                          "line": 5,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 81,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 24,
                            "line": 5,
                          },
                        },
                        "raw": "1",
                        "start": 80,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "alternate": Object {
                              "left": Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "*",
                              "right": Object {
                                "arguments": Array [
                                  Object {
                                    "left": Node {
                                      "end": 79,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 23,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 78,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "-",
                                    "right": Node {
                                      "end": 81,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 24,
                                          "line": 5,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 80,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "callee": Object {
                                  "body": [Circular],
                                  "id": Node {
                                    "end": 21,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 20,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 2,
                                      },
                                    },
                                    "name": "factorial",
                                    "start": 12,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [
                                    Node {
                                      "end": 23,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 22,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 21,
                                          "line": 2,
                                        },
                                      },
                                      "name": "n",
                                      "start": 22,
                                      "type": "Identifier",
                                    },
                                  ],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 12,
                                    "line": 5,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "type": "BinaryExpression",
                            },
                            "consequent": Node {
                              "end": 55,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 4,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 4,
                                },
                              },
                              "raw": "1",
                              "start": 54,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "test": Object {
                              "left": Node {
                                "end": 39,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 12,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 38,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "operator": "===",
                              "right": Node {
                                "end": 45,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 17,
                                    "line": 3,
                                  },
                                },
                                "raw": "0",
                                "start": 44,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "BinaryExpression",
                            },
                            "type": "ConditionalExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 3,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 2,
                        },
                      },
                      "name": "factorial",
                      "start": 12,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 23,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 22,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 21,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 22,
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 5,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "BinaryExpression",
              },
              "consequent": Node {
                "end": 55,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 54,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "test": Node {
                "end": 5,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "false",
                "start": 0,
                "type": "Literal",
                "value": false,
              },
              "type": "ConditionalExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "test",
      ],
    ],
    "Binary expression 4 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "alternate": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 4,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "arguments": Array [
                    Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 4,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 22,
                          "line": 5,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 81,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 24,
                            "line": 5,
                          },
                        },
                        "raw": "1",
                        "start": 80,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "alternate": Object {
                              "left": Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "*",
                              "right": Object {
                                "arguments": Array [
                                  Object {
                                    "left": Node {
                                      "end": 79,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 23,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 78,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "-",
                                    "right": Node {
                                      "end": 81,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 24,
                                          "line": 5,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 80,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "callee": Object {
                                  "body": [Circular],
                                  "id": Node {
                                    "end": 21,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 20,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 2,
                                      },
                                    },
                                    "name": "factorial",
                                    "start": 12,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [
                                    Node {
                                      "end": 23,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 22,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 21,
                                          "line": 2,
                                        },
                                      },
                                      "name": "n",
                                      "start": 22,
                                      "type": "Identifier",
                                    },
                                  ],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 12,
                                    "line": 5,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "type": "BinaryExpression",
                            },
                            "consequent": Node {
                              "end": 55,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 4,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 4,
                                },
                              },
                              "raw": "1",
                              "start": 54,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "test": Object {
                              "left": Node {
                                "end": 39,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 12,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 38,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "operator": "===",
                              "right": Node {
                                "end": 45,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 17,
                                    "line": 3,
                                  },
                                },
                                "raw": "0",
                                "start": 44,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "BinaryExpression",
                            },
                            "type": "ConditionalExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 3,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 2,
                        },
                      },
                      "name": "factorial",
                      "start": 12,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 23,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 22,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 21,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 22,
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 5,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "BinaryExpression",
              },
              "consequent": Node {
                "end": 55,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 54,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 11,
                  "line": 3,
                },
              },
              "test": Node {
                "end": 5,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 5,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "false",
                "start": 0,
                "type": "Literal",
                "value": false,
              },
              "type": "ConditionalExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "arguments": Array [
                  Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 4,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 25,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 22,
                        "line": 5,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 81,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 24,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 80,
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "BinaryExpression",
                  },
                ],
                "callee": Object {
                  "body": Object {
                    "body": Array [
                      Object {
                        "argument": Object {
                          "alternate": Object {
                            "left": Node {
                              "end": 65,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "name": "n",
                              "start": 64,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "operator": "*",
                            "right": Object {
                              "arguments": Array [
                                Object {
                                  "left": Node {
                                    "end": 79,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 23,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 78,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "-",
                                  "right": Node {
                                    "end": 81,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 24,
                                        "line": 5,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 80,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "callee": Object {
                                "body": [Circular],
                                "id": Node {
                                  "end": 21,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 20,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 2,
                                    },
                                  },
                                  "name": "factorial",
                                  "start": 12,
                                  "type": "Identifier",
                                },
                                "loc": undefined,
                                "params": Array [
                                  Node {
                                    "end": 23,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 22,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 21,
                                        "line": 2,
                                      },
                                    },
                                    "name": "n",
                                    "start": 22,
                                    "type": "Identifier",
                                  },
                                ],
                                "type": "FunctionExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 12,
                                  "line": 5,
                                },
                              },
                              "type": "CallExpression",
                            },
                            "type": "BinaryExpression",
                          },
                          "consequent": Node {
                            "end": 55,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 4,
                              },
                            },
                            "raw": "1",
                            "start": 54,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "test": Object {
                            "left": Node {
                              "end": 39,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 12,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 38,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "operator": "===",
                            "right": Node {
                              "end": 45,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 17,
                                  "line": 3,
                                },
                              },
                              "raw": "0",
                              "start": 44,
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ConditionalExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 3,
                          },
                        },
                        "type": "ReturnStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "id": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 2,
                      },
                    },
                    "name": "factorial",
                    "start": 12,
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "params": Array [
                    Node {
                      "end": 23,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 22,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 21,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 22,
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "type": "CallExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "arguments": Array [
                  Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 4,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 25,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 22,
                        "line": 5,
                      },
                    },
                    "operator": "-",
                    "right": Node {
                      "end": 81,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 24,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 80,
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "BinaryExpression",
                  },
                ],
                "callee": Object {
                  "body": Object {
                    "body": Array [
                      Object {
                        "argument": Object {
                          "alternate": Object {
                            "left": Node {
                              "end": 65,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "name": "n",
                              "start": 64,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "operator": "*",
                            "right": Object {
                              "arguments": Array [
                                Object {
                                  "left": Node {
                                    "end": 79,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 23,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 78,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "-",
                                  "right": Node {
                                    "end": 81,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 24,
                                        "line": 5,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 80,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "callee": Object {
                                "body": [Circular],
                                "id": Node {
                                  "end": 21,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 20,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 2,
                                    },
                                  },
                                  "name": "factorial",
                                  "start": 12,
                                  "type": "Identifier",
                                },
                                "loc": undefined,
                                "params": Array [
                                  Node {
                                    "end": 23,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 22,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 21,
                                        "line": 2,
                                      },
                                    },
                                    "name": "n",
                                    "start": 22,
                                    "type": "Identifier",
                                  },
                                ],
                                "type": "FunctionExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 12,
                                  "line": 5,
                                },
                              },
                              "type": "CallExpression",
                            },
                            "type": "BinaryExpression",
                          },
                          "consequent": Node {
                            "end": 55,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 4,
                              },
                            },
                            "raw": "1",
                            "start": 54,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "test": Object {
                            "left": Node {
                              "end": 39,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 12,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 38,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "operator": "===",
                            "right": Node {
                              "end": 45,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 17,
                                  "line": 3,
                                },
                              },
                              "raw": "0",
                              "start": 44,
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ConditionalExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 3,
                          },
                        },
                        "type": "ReturnStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "id": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 2,
                      },
                    },
                    "name": "factorial",
                    "start": 12,
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "params": Array [
                    Node {
                      "end": 23,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 22,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 21,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 22,
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "type": "CallExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 4 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "arguments": Array [
                  Node {
                    "end": 1,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 1,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "3",
                    "start": 0,
                    "type": "Literal",
                    "value": 3,
                  },
                ],
                "callee": Object {
                  "body": Object {
                    "body": Array [
                      Object {
                        "argument": Object {
                          "alternate": Object {
                            "left": Node {
                              "end": 65,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "name": "n",
                              "start": 64,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "operator": "*",
                            "right": Object {
                              "arguments": Array [
                                Object {
                                  "left": Node {
                                    "end": 79,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 23,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 78,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "-",
                                  "right": Node {
                                    "end": 81,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 24,
                                        "line": 5,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 80,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "callee": Object {
                                "body": [Circular],
                                "id": Node {
                                  "end": 21,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 20,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 2,
                                    },
                                  },
                                  "name": "factorial",
                                  "start": 12,
                                  "type": "Identifier",
                                },
                                "loc": undefined,
                                "params": Array [
                                  Node {
                                    "end": 23,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 22,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 21,
                                        "line": 2,
                                      },
                                    },
                                    "name": "n",
                                    "start": 22,
                                    "type": "Identifier",
                                  },
                                ],
                                "type": "FunctionExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 12,
                                  "line": 5,
                                },
                              },
                              "type": "CallExpression",
                            },
                            "type": "BinaryExpression",
                          },
                          "consequent": Node {
                            "end": 55,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 4,
                              },
                            },
                            "raw": "1",
                            "start": 54,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "test": Object {
                            "left": Node {
                              "end": 39,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 12,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 38,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "operator": "===",
                            "right": Node {
                              "end": 45,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 17,
                                  "line": 3,
                                },
                              },
                              "raw": "0",
                              "start": 44,
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ConditionalExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 3,
                          },
                        },
                        "type": "ReturnStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "id": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 2,
                      },
                    },
                    "name": "factorial",
                    "start": 12,
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "params": Array [
                    Node {
                      "end": 23,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 22,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 21,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 22,
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "type": "CallExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 4 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "arguments": Array [
                  Node {
                    "end": 1,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 1,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "3",
                    "start": 0,
                    "type": "Literal",
                    "value": 3,
                  },
                ],
                "callee": Object {
                  "body": Object {
                    "body": Array [
                      Object {
                        "argument": Object {
                          "alternate": Object {
                            "left": Node {
                              "end": 65,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "name": "n",
                              "start": 64,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 5,
                              },
                            },
                            "operator": "*",
                            "right": Object {
                              "arguments": Array [
                                Object {
                                  "left": Node {
                                    "end": 79,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 23,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 78,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 25,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 22,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "-",
                                  "right": Node {
                                    "end": 81,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 24,
                                        "line": 5,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 80,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "type": "BinaryExpression",
                                },
                              ],
                              "callee": Object {
                                "body": [Circular],
                                "id": Node {
                                  "end": 21,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 20,
                                      "line": 2,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 2,
                                    },
                                  },
                                  "name": "factorial",
                                  "start": 12,
                                  "type": "Identifier",
                                },
                                "loc": undefined,
                                "params": Array [
                                  Node {
                                    "end": 23,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 22,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 21,
                                        "line": 2,
                                      },
                                    },
                                    "name": "n",
                                    "start": 22,
                                    "type": "Identifier",
                                  },
                                ],
                                "type": "FunctionExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 12,
                                  "line": 5,
                                },
                              },
                              "type": "CallExpression",
                            },
                            "type": "BinaryExpression",
                          },
                          "consequent": Node {
                            "end": 55,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 9,
                                "line": 4,
                              },
                              "start": Position {
                                "column": 8,
                                "line": 4,
                              },
                            },
                            "raw": "1",
                            "start": 54,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 3,
                            },
                          },
                          "test": Object {
                            "left": Node {
                              "end": 39,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 12,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 38,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 18,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "operator": "===",
                            "right": Node {
                              "end": 45,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 17,
                                  "line": 3,
                                },
                              },
                              "raw": "0",
                              "start": 44,
                              "type": "Literal",
                              "value": 0,
                            },
                            "type": "BinaryExpression",
                          },
                          "type": "ConditionalExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 4,
                            "line": 3,
                          },
                        },
                        "type": "ReturnStatement",
                      },
                    ],
                    "type": "BlockStatement",
                  },
                  "id": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 2,
                      },
                    },
                    "name": "factorial",
                    "start": 12,
                    "type": "Identifier",
                  },
                  "loc": undefined,
                  "params": Array [
                    Node {
                      "end": 23,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 22,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 21,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 22,
                      "type": "Identifier",
                    },
                  ],
                  "type": "FunctionExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "type": "CallExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
      ],
    ],
    "Function factorial takes in 3 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "alternate": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 3,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 3,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 22,
                            "line": 5,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 81,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 24,
                              "line": 5,
                            },
                          },
                          "raw": "1",
                          "start": 80,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "body": Array [
                          Object {
                            "argument": Object {
                              "alternate": Object {
                                "left": Node {
                                  "end": 65,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 64,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "operator": "*",
                                "right": Object {
                                  "arguments": Array [
                                    Object {
                                      "left": Node {
                                        "end": 79,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 23,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 78,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "-",
                                      "right": Node {
                                        "end": 81,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 24,
                                            "line": 5,
                                          },
                                        },
                                        "raw": "1",
                                        "start": 80,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                  ],
                                  "callee": Object {
                                    "body": [Circular],
                                    "id": Node {
                                      "end": 21,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 20,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 2,
                                        },
                                      },
                                      "name": "factorial",
                                      "start": 12,
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "params": Array [
                                      Node {
                                        "end": 23,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 22,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 21,
                                            "line": 2,
                                          },
                                        },
                                        "name": "n",
                                        "start": 22,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "type": "FunctionExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 12,
                                      "line": 5,
                                    },
                                  },
                                  "type": "CallExpression",
                                },
                                "type": "BinaryExpression",
                              },
                              "consequent": Node {
                                "end": 55,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 4,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 4,
                                  },
                                },
                                "raw": "1",
                                "start": 54,
                                "type": "Literal",
                                "value": 1,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "test": Object {
                                "left": Node {
                                  "end": 39,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 12,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "name": "n",
                                  "start": 38,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "operator": "===",
                                "right": Node {
                                  "end": 45,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 17,
                                      "line": 3,
                                    },
                                  },
                                  "raw": "0",
                                  "start": 44,
                                  "type": "Literal",
                                  "value": 0,
                                },
                                "type": "BinaryExpression",
                              },
                              "type": "ConditionalExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 4,
                                "line": 3,
                              },
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "type": "BlockStatement",
                      },
                      "id": Node {
                        "end": 21,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 2,
                          },
                        },
                        "name": "factorial",
                        "start": 12,
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 23,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 22,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 21,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 22,
                          "type": "Identifier",
                        },
                      ],
                      "type": "FunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 5,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "BinaryExpression",
                },
                "consequent": Node {
                  "end": 55,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 4,
                    },
                  },
                  "raw": "1",
                  "start": 54,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "test": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 3,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "operator": "===",
                  "right": Node {
                    "end": 45,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 17,
                        "line": 3,
                      },
                    },
                    "raw": "0",
                    "start": 44,
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "BinaryExpression",
                },
                "type": "ConditionalExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
      ],
    ],
    "Function factorial takes in 3 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "alternate": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 3,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 3,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 22,
                            "line": 5,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 81,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 24,
                              "line": 5,
                            },
                          },
                          "raw": "1",
                          "start": 80,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "body": Array [
                          Object {
                            "argument": Object {
                              "alternate": Object {
                                "left": Node {
                                  "end": 65,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 64,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "operator": "*",
                                "right": Object {
                                  "arguments": Array [
                                    Object {
                                      "left": Node {
                                        "end": 79,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 23,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 78,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "-",
                                      "right": Node {
                                        "end": 81,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 24,
                                            "line": 5,
                                          },
                                        },
                                        "raw": "1",
                                        "start": 80,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                  ],
                                  "callee": Object {
                                    "body": [Circular],
                                    "id": Node {
                                      "end": 21,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 20,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 2,
                                        },
                                      },
                                      "name": "factorial",
                                      "start": 12,
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "params": Array [
                                      Node {
                                        "end": 23,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 22,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 21,
                                            "line": 2,
                                          },
                                        },
                                        "name": "n",
                                        "start": 22,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "type": "FunctionExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 12,
                                      "line": 5,
                                    },
                                  },
                                  "type": "CallExpression",
                                },
                                "type": "BinaryExpression",
                              },
                              "consequent": Node {
                                "end": 55,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 4,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 4,
                                  },
                                },
                                "raw": "1",
                                "start": 54,
                                "type": "Literal",
                                "value": 1,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "test": Object {
                                "left": Node {
                                  "end": 39,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 12,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "name": "n",
                                  "start": 38,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "operator": "===",
                                "right": Node {
                                  "end": 45,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 17,
                                      "line": 3,
                                    },
                                  },
                                  "raw": "0",
                                  "start": 44,
                                  "type": "Literal",
                                  "value": 0,
                                },
                                "type": "BinaryExpression",
                              },
                              "type": "ConditionalExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 4,
                                "line": 3,
                              },
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "type": "BlockStatement",
                      },
                      "id": Node {
                        "end": 21,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 2,
                          },
                        },
                        "name": "factorial",
                        "start": 12,
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 23,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 22,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 21,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 22,
                          "type": "Identifier",
                        },
                      ],
                      "type": "FunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 5,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "BinaryExpression",
                },
                "consequent": Node {
                  "end": 55,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 4,
                    },
                  },
                  "raw": "1",
                  "start": 54,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "test": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 3,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 18,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "operator": "===",
                  "right": Node {
                    "end": 45,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 17,
                        "line": 3,
                      },
                    },
                    "raw": "0",
                    "start": 44,
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "BinaryExpression",
                },
                "type": "ConditionalExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "test",
      ],
    ],
    "Binary expression 3 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "alternate": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 3,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 3,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 22,
                            "line": 5,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 81,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 24,
                              "line": 5,
                            },
                          },
                          "raw": "1",
                          "start": 80,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "body": Array [
                          Object {
                            "argument": Object {
                              "alternate": Object {
                                "left": Node {
                                  "end": 65,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 64,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "operator": "*",
                                "right": Object {
                                  "arguments": Array [
                                    Object {
                                      "left": Node {
                                        "end": 79,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 23,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 78,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "-",
                                      "right": Node {
                                        "end": 81,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 24,
                                            "line": 5,
                                          },
                                        },
                                        "raw": "1",
                                        "start": 80,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                  ],
                                  "callee": Object {
                                    "body": [Circular],
                                    "id": Node {
                                      "end": 21,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 20,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 2,
                                        },
                                      },
                                      "name": "factorial",
                                      "start": 12,
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "params": Array [
                                      Node {
                                        "end": 23,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 22,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 21,
                                            "line": 2,
                                          },
                                        },
                                        "name": "n",
                                        "start": 22,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "type": "FunctionExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 12,
                                      "line": 5,
                                    },
                                  },
                                  "type": "CallExpression",
                                },
                                "type": "BinaryExpression",
                              },
                              "consequent": Node {
                                "end": 55,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 4,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 4,
                                  },
                                },
                                "raw": "1",
                                "start": 54,
                                "type": "Literal",
                                "value": 1,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "test": Object {
                                "left": Node {
                                  "end": 39,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 12,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "name": "n",
                                  "start": 38,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "operator": "===",
                                "right": Node {
                                  "end": 45,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 17,
                                      "line": 3,
                                    },
                                  },
                                  "raw": "0",
                                  "start": 44,
                                  "type": "Literal",
                                  "value": 0,
                                },
                                "type": "BinaryExpression",
                              },
                              "type": "ConditionalExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 4,
                                "line": 3,
                              },
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "type": "BlockStatement",
                      },
                      "id": Node {
                        "end": 21,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 2,
                          },
                        },
                        "name": "factorial",
                        "start": 12,
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 23,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 22,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 21,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 22,
                          "type": "Identifier",
                        },
                      ],
                      "type": "FunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 5,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "BinaryExpression",
                },
                "consequent": Node {
                  "end": 55,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 4,
                    },
                  },
                  "raw": "1",
                  "start": 54,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "test": Node {
                  "end": 5,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 5,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "false",
                  "start": 0,
                  "type": "Literal",
                  "value": false,
                },
                "type": "ConditionalExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "test",
      ],
    ],
    "Binary expression 3 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "alternate": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 3,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 3,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 22,
                            "line": 5,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 81,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 24,
                              "line": 5,
                            },
                          },
                          "raw": "1",
                          "start": 80,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "body": Array [
                          Object {
                            "argument": Object {
                              "alternate": Object {
                                "left": Node {
                                  "end": 65,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 64,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "operator": "*",
                                "right": Object {
                                  "arguments": Array [
                                    Object {
                                      "left": Node {
                                        "end": 79,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 23,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 78,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "-",
                                      "right": Node {
                                        "end": 81,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 24,
                                            "line": 5,
                                          },
                                        },
                                        "raw": "1",
                                        "start": 80,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                  ],
                                  "callee": Object {
                                    "body": [Circular],
                                    "id": Node {
                                      "end": 21,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 20,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 2,
                                        },
                                      },
                                      "name": "factorial",
                                      "start": 12,
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "params": Array [
                                      Node {
                                        "end": 23,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 22,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 21,
                                            "line": 2,
                                          },
                                        },
                                        "name": "n",
                                        "start": 22,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "type": "FunctionExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 12,
                                      "line": 5,
                                    },
                                  },
                                  "type": "CallExpression",
                                },
                                "type": "BinaryExpression",
                              },
                              "consequent": Node {
                                "end": 55,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 4,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 4,
                                  },
                                },
                                "raw": "1",
                                "start": 54,
                                "type": "Literal",
                                "value": 1,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "test": Object {
                                "left": Node {
                                  "end": 39,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 12,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "name": "n",
                                  "start": 38,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "operator": "===",
                                "right": Node {
                                  "end": 45,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 17,
                                      "line": 3,
                                    },
                                  },
                                  "raw": "0",
                                  "start": 44,
                                  "type": "Literal",
                                  "value": 0,
                                },
                                "type": "BinaryExpression",
                              },
                              "type": "ConditionalExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 4,
                                "line": 3,
                              },
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "type": "BlockStatement",
                      },
                      "id": Node {
                        "end": 21,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 2,
                          },
                        },
                        "name": "factorial",
                        "start": 12,
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 23,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 22,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 21,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 22,
                          "type": "Identifier",
                        },
                      ],
                      "type": "FunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 5,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "BinaryExpression",
                },
                "consequent": Node {
                  "end": 55,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 4,
                    },
                  },
                  "raw": "1",
                  "start": 54,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 3,
                  },
                },
                "test": Node {
                  "end": 5,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 5,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "false",
                  "start": 0,
                  "type": "Literal",
                  "value": false,
                },
                "type": "ConditionalExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "arguments": Array [
                    Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 3,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 22,
                          "line": 5,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 81,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 24,
                            "line": 5,
                          },
                        },
                        "raw": "1",
                        "start": 80,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "alternate": Object {
                              "left": Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "*",
                              "right": Object {
                                "arguments": Array [
                                  Object {
                                    "left": Node {
                                      "end": 79,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 23,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 78,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "-",
                                    "right": Node {
                                      "end": 81,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 24,
                                          "line": 5,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 80,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "callee": Object {
                                  "body": [Circular],
                                  "id": Node {
                                    "end": 21,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 20,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 2,
                                      },
                                    },
                                    "name": "factorial",
                                    "start": 12,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [
                                    Node {
                                      "end": 23,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 22,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 21,
                                          "line": 2,
                                        },
                                      },
                                      "name": "n",
                                      "start": 22,
                                      "type": "Identifier",
                                    },
                                  ],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 12,
                                    "line": 5,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "type": "BinaryExpression",
                            },
                            "consequent": Node {
                              "end": 55,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 4,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 4,
                                },
                              },
                              "raw": "1",
                              "start": 54,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "test": Object {
                              "left": Node {
                                "end": 39,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 12,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 38,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "operator": "===",
                              "right": Node {
                                "end": 45,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 17,
                                    "line": 3,
                                  },
                                },
                                "raw": "0",
                                "start": 44,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "BinaryExpression",
                            },
                            "type": "ConditionalExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 3,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 2,
                        },
                      },
                      "name": "factorial",
                      "start": 12,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 23,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 22,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 21,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 22,
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 5,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "arguments": Array [
                    Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 3,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 22,
                          "line": 5,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 81,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 24,
                            "line": 5,
                          },
                        },
                        "raw": "1",
                        "start": 80,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "alternate": Object {
                              "left": Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "*",
                              "right": Object {
                                "arguments": Array [
                                  Object {
                                    "left": Node {
                                      "end": 79,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 23,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 78,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "-",
                                    "right": Node {
                                      "end": 81,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 24,
                                          "line": 5,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 80,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "callee": Object {
                                  "body": [Circular],
                                  "id": Node {
                                    "end": 21,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 20,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 2,
                                      },
                                    },
                                    "name": "factorial",
                                    "start": 12,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [
                                    Node {
                                      "end": 23,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 22,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 21,
                                          "line": 2,
                                        },
                                      },
                                      "name": "n",
                                      "start": 22,
                                      "type": "Identifier",
                                    },
                                  ],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 12,
                                    "line": 5,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "type": "BinaryExpression",
                            },
                            "consequent": Node {
                              "end": 55,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 4,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 4,
                                },
                              },
                              "raw": "1",
                              "start": 54,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "test": Object {
                              "left": Node {
                                "end": 39,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 12,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 38,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "operator": "===",
                              "right": Node {
                                "end": 45,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 17,
                                    "line": 3,
                                  },
                                },
                                "raw": "0",
                                "start": 44,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "BinaryExpression",
                            },
                            "type": "ConditionalExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 3,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 2,
                        },
                      },
                      "name": "factorial",
                      "start": 12,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 23,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 22,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 21,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 22,
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 5,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 3 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "arguments": Array [
                    Node {
                      "end": 1,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 1,
                          "line": 1,
                        },
                        "start": Position {
                          "column": 0,
                          "line": 1,
                        },
                      },
                      "raw": "2",
                      "start": 0,
                      "type": "Literal",
                      "value": 2,
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "alternate": Object {
                              "left": Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "*",
                              "right": Object {
                                "arguments": Array [
                                  Object {
                                    "left": Node {
                                      "end": 79,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 23,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 78,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "-",
                                    "right": Node {
                                      "end": 81,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 24,
                                          "line": 5,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 80,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "callee": Object {
                                  "body": [Circular],
                                  "id": Node {
                                    "end": 21,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 20,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 2,
                                      },
                                    },
                                    "name": "factorial",
                                    "start": 12,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [
                                    Node {
                                      "end": 23,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 22,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 21,
                                          "line": 2,
                                        },
                                      },
                                      "name": "n",
                                      "start": 22,
                                      "type": "Identifier",
                                    },
                                  ],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 12,
                                    "line": 5,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "type": "BinaryExpression",
                            },
                            "consequent": Node {
                              "end": 55,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 4,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 4,
                                },
                              },
                              "raw": "1",
                              "start": 54,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "test": Object {
                              "left": Node {
                                "end": 39,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 12,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 38,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "operator": "===",
                              "right": Node {
                                "end": 45,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 17,
                                    "line": 3,
                                  },
                                },
                                "raw": "0",
                                "start": 44,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "BinaryExpression",
                            },
                            "type": "ConditionalExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 3,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 2,
                        },
                      },
                      "name": "factorial",
                      "start": 12,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 23,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 22,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 21,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 22,
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 5,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 3 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "arguments": Array [
                    Node {
                      "end": 1,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 1,
                          "line": 1,
                        },
                        "start": Position {
                          "column": 0,
                          "line": 1,
                        },
                      },
                      "raw": "2",
                      "start": 0,
                      "type": "Literal",
                      "value": 2,
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "alternate": Object {
                              "left": Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 5,
                                },
                              },
                              "operator": "*",
                              "right": Object {
                                "arguments": Array [
                                  Object {
                                    "left": Node {
                                      "end": 79,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 23,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 78,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 25,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 22,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "-",
                                    "right": Node {
                                      "end": 81,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 24,
                                          "line": 5,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 80,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                ],
                                "callee": Object {
                                  "body": [Circular],
                                  "id": Node {
                                    "end": 21,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 20,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 2,
                                      },
                                    },
                                    "name": "factorial",
                                    "start": 12,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [
                                    Node {
                                      "end": 23,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 22,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 21,
                                          "line": 2,
                                        },
                                      },
                                      "name": "n",
                                      "start": 22,
                                      "type": "Identifier",
                                    },
                                  ],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 12,
                                    "line": 5,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "type": "BinaryExpression",
                            },
                            "consequent": Node {
                              "end": 55,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 9,
                                  "line": 4,
                                },
                                "start": Position {
                                  "column": 8,
                                  "line": 4,
                                },
                              },
                              "raw": "1",
                              "start": 54,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 3,
                              },
                            },
                            "test": Object {
                              "left": Node {
                                "end": 39,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 12,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 38,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 18,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "operator": "===",
                              "right": Node {
                                "end": 45,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 17,
                                    "line": 3,
                                  },
                                },
                                "raw": "0",
                                "start": 44,
                                "type": "Literal",
                                "value": 0,
                              },
                              "type": "BinaryExpression",
                            },
                            "type": "ConditionalExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 4,
                              "line": 3,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 2,
                        },
                      },
                      "name": "factorial",
                      "start": 12,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 23,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 22,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 21,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 22,
                        "type": "Identifier",
                      },
                    ],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 5,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
      ],
    ],
    "Function factorial takes in 2 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "alternate": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 2,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Object {
                          "left": Object {
                            "loc": undefined,
                            "type": "Literal",
                            "value": 2,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 22,
                              "line": 5,
                            },
                          },
                          "operator": "-",
                          "right": Node {
                            "end": 81,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 24,
                                "line": 5,
                              },
                            },
                            "raw": "1",
                            "start": 80,
                            "type": "Literal",
                            "value": 1,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "alternate": Object {
                                  "left": Node {
                                    "end": 65,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 64,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "*",
                                  "right": Object {
                                    "arguments": Array [
                                      Object {
                                        "left": Node {
                                          "end": 79,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 23,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "name": "n",
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "operator": "-",
                                        "right": Node {
                                          "end": 81,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 24,
                                              "line": 5,
                                            },
                                          },
                                          "raw": "1",
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 1,
                                        },
                                        "type": "BinaryExpression",
                                      },
                                    ],
                                    "callee": Object {
                                      "body": [Circular],
                                      "id": Node {
                                        "end": 21,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 20,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 2,
                                          },
                                        },
                                        "name": "factorial",
                                        "start": 12,
                                        "type": "Identifier",
                                      },
                                      "loc": undefined,
                                      "params": Array [
                                        Node {
                                          "end": 23,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 22,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 21,
                                              "line": 2,
                                            },
                                          },
                                          "name": "n",
                                          "start": 22,
                                          "type": "Identifier",
                                        },
                                      ],
                                      "type": "FunctionExpression",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 12,
                                        "line": 5,
                                      },
                                    },
                                    "type": "CallExpression",
                                  },
                                  "type": "BinaryExpression",
                                },
                                "consequent": Node {
                                  "end": 55,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 4,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 4,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 54,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "test": Object {
                                  "left": Node {
                                    "end": 39,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 12,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "name": "n",
                                    "start": 38,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "operator": "===",
                                  "right": Node {
                                    "end": 45,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 17,
                                        "line": 3,
                                      },
                                    },
                                    "raw": "0",
                                    "start": 44,
                                    "type": "Literal",
                                    "value": 0,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "type": "ConditionalExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 4,
                                  "line": 3,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 2,
                            },
                          },
                          "name": "factorial",
                          "start": 12,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [
                          Node {
                            "end": 23,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 22,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 21,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 22,
                            "type": "Identifier",
                          },
                        ],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "consequent": Node {
                    "end": 55,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "raw": "1",
                    "start": 54,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "test": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 2,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 45,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 18,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 17,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 44,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
      ],
    ],
    "Function factorial takes in 2 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "alternate": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 2,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Object {
                          "left": Object {
                            "loc": undefined,
                            "type": "Literal",
                            "value": 2,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 22,
                              "line": 5,
                            },
                          },
                          "operator": "-",
                          "right": Node {
                            "end": 81,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 24,
                                "line": 5,
                              },
                            },
                            "raw": "1",
                            "start": 80,
                            "type": "Literal",
                            "value": 1,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "alternate": Object {
                                  "left": Node {
                                    "end": 65,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 64,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "*",
                                  "right": Object {
                                    "arguments": Array [
                                      Object {
                                        "left": Node {
                                          "end": 79,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 23,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "name": "n",
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "operator": "-",
                                        "right": Node {
                                          "end": 81,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 24,
                                              "line": 5,
                                            },
                                          },
                                          "raw": "1",
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 1,
                                        },
                                        "type": "BinaryExpression",
                                      },
                                    ],
                                    "callee": Object {
                                      "body": [Circular],
                                      "id": Node {
                                        "end": 21,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 20,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 2,
                                          },
                                        },
                                        "name": "factorial",
                                        "start": 12,
                                        "type": "Identifier",
                                      },
                                      "loc": undefined,
                                      "params": Array [
                                        Node {
                                          "end": 23,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 22,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 21,
                                              "line": 2,
                                            },
                                          },
                                          "name": "n",
                                          "start": 22,
                                          "type": "Identifier",
                                        },
                                      ],
                                      "type": "FunctionExpression",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 12,
                                        "line": 5,
                                      },
                                    },
                                    "type": "CallExpression",
                                  },
                                  "type": "BinaryExpression",
                                },
                                "consequent": Node {
                                  "end": 55,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 4,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 4,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 54,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "test": Object {
                                  "left": Node {
                                    "end": 39,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 12,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "name": "n",
                                    "start": 38,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "operator": "===",
                                  "right": Node {
                                    "end": 45,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 17,
                                        "line": 3,
                                      },
                                    },
                                    "raw": "0",
                                    "start": 44,
                                    "type": "Literal",
                                    "value": 0,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "type": "ConditionalExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 4,
                                  "line": 3,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 2,
                            },
                          },
                          "name": "factorial",
                          "start": 12,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [
                          Node {
                            "end": 23,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 22,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 21,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 22,
                            "type": "Identifier",
                          },
                        ],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "consequent": Node {
                    "end": 55,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "raw": "1",
                    "start": 54,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "test": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 2,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 18,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 45,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 18,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 17,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 44,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "test",
      ],
    ],
    "Binary expression 2 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "alternate": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 2,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Object {
                          "left": Object {
                            "loc": undefined,
                            "type": "Literal",
                            "value": 2,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 22,
                              "line": 5,
                            },
                          },
                          "operator": "-",
                          "right": Node {
                            "end": 81,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 24,
                                "line": 5,
                              },
                            },
                            "raw": "1",
                            "start": 80,
                            "type": "Literal",
                            "value": 1,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "alternate": Object {
                                  "left": Node {
                                    "end": 65,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 64,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "*",
                                  "right": Object {
                                    "arguments": Array [
                                      Object {
                                        "left": Node {
                                          "end": 79,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 23,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "name": "n",
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "operator": "-",
                                        "right": Node {
                                          "end": 81,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 24,
                                              "line": 5,
                                            },
                                          },
                                          "raw": "1",
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 1,
                                        },
                                        "type": "BinaryExpression",
                                      },
                                    ],
                                    "callee": Object {
                                      "body": [Circular],
                                      "id": Node {
                                        "end": 21,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 20,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 2,
                                          },
                                        },
                                        "name": "factorial",
                                        "start": 12,
                                        "type": "Identifier",
                                      },
                                      "loc": undefined,
                                      "params": Array [
                                        Node {
                                          "end": 23,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 22,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 21,
                                              "line": 2,
                                            },
                                          },
                                          "name": "n",
                                          "start": 22,
                                          "type": "Identifier",
                                        },
                                      ],
                                      "type": "FunctionExpression",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 12,
                                        "line": 5,
                                      },
                                    },
                                    "type": "CallExpression",
                                  },
                                  "type": "BinaryExpression",
                                },
                                "consequent": Node {
                                  "end": 55,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 4,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 4,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 54,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "test": Object {
                                  "left": Node {
                                    "end": 39,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 12,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "name": "n",
                                    "start": 38,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "operator": "===",
                                  "right": Node {
                                    "end": 45,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 17,
                                        "line": 3,
                                      },
                                    },
                                    "raw": "0",
                                    "start": 44,
                                    "type": "Literal",
                                    "value": 0,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "type": "ConditionalExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 4,
                                  "line": 3,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 2,
                            },
                          },
                          "name": "factorial",
                          "start": 12,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [
                          Node {
                            "end": 23,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 22,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 21,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 22,
                            "type": "Identifier",
                          },
                        ],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "consequent": Node {
                    "end": 55,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "raw": "1",
                    "start": 54,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "test": Node {
                    "end": 5,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "false",
                    "start": 0,
                    "type": "Literal",
                    "value": false,
                  },
                  "type": "ConditionalExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "test",
      ],
    ],
    "Binary expression 2 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "alternate": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 2,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Object {
                          "left": Object {
                            "loc": undefined,
                            "type": "Literal",
                            "value": 2,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 22,
                              "line": 5,
                            },
                          },
                          "operator": "-",
                          "right": Node {
                            "end": 81,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 24,
                                "line": 5,
                              },
                            },
                            "raw": "1",
                            "start": 80,
                            "type": "Literal",
                            "value": 1,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "alternate": Object {
                                  "left": Node {
                                    "end": 65,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 64,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "*",
                                  "right": Object {
                                    "arguments": Array [
                                      Object {
                                        "left": Node {
                                          "end": 79,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 23,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "name": "n",
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "operator": "-",
                                        "right": Node {
                                          "end": 81,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 24,
                                              "line": 5,
                                            },
                                          },
                                          "raw": "1",
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 1,
                                        },
                                        "type": "BinaryExpression",
                                      },
                                    ],
                                    "callee": Object {
                                      "body": [Circular],
                                      "id": Node {
                                        "end": 21,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 20,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 2,
                                          },
                                        },
                                        "name": "factorial",
                                        "start": 12,
                                        "type": "Identifier",
                                      },
                                      "loc": undefined,
                                      "params": Array [
                                        Node {
                                          "end": 23,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 22,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 21,
                                              "line": 2,
                                            },
                                          },
                                          "name": "n",
                                          "start": 22,
                                          "type": "Identifier",
                                        },
                                      ],
                                      "type": "FunctionExpression",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 12,
                                        "line": 5,
                                      },
                                    },
                                    "type": "CallExpression",
                                  },
                                  "type": "BinaryExpression",
                                },
                                "consequent": Node {
                                  "end": 55,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 4,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 4,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 54,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "test": Object {
                                  "left": Node {
                                    "end": 39,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 12,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "name": "n",
                                    "start": 38,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "operator": "===",
                                  "right": Node {
                                    "end": 45,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 17,
                                        "line": 3,
                                      },
                                    },
                                    "raw": "0",
                                    "start": 44,
                                    "type": "Literal",
                                    "value": 0,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "type": "ConditionalExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 4,
                                  "line": 3,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 2,
                            },
                          },
                          "name": "factorial",
                          "start": 12,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [
                          Node {
                            "end": 23,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 22,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 21,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 22,
                            "type": "Identifier",
                          },
                        ],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "consequent": Node {
                    "end": 55,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 4,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 4,
                      },
                    },
                    "raw": "1",
                    "start": 54,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "test": Node {
                    "end": 5,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "false",
                    "start": 0,
                    "type": "Literal",
                    "value": false,
                  },
                  "type": "ConditionalExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 2,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 22,
                            "line": 5,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 81,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 24,
                              "line": 5,
                            },
                          },
                          "raw": "1",
                          "start": 80,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "body": Array [
                          Object {
                            "argument": Object {
                              "alternate": Object {
                                "left": Node {
                                  "end": 65,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 64,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "operator": "*",
                                "right": Object {
                                  "arguments": Array [
                                    Object {
                                      "left": Node {
                                        "end": 79,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 23,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 78,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "-",
                                      "right": Node {
                                        "end": 81,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 24,
                                            "line": 5,
                                          },
                                        },
                                        "raw": "1",
                                        "start": 80,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                  ],
                                  "callee": Object {
                                    "body": [Circular],
                                    "id": Node {
                                      "end": 21,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 20,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 2,
                                        },
                                      },
                                      "name": "factorial",
                                      "start": 12,
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "params": Array [
                                      Node {
                                        "end": 23,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 22,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 21,
                                            "line": 2,
                                          },
                                        },
                                        "name": "n",
                                        "start": 22,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "type": "FunctionExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 12,
                                      "line": 5,
                                    },
                                  },
                                  "type": "CallExpression",
                                },
                                "type": "BinaryExpression",
                              },
                              "consequent": Node {
                                "end": 55,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 4,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 4,
                                  },
                                },
                                "raw": "1",
                                "start": 54,
                                "type": "Literal",
                                "value": 1,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "test": Object {
                                "left": Node {
                                  "end": 39,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 12,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "name": "n",
                                  "start": 38,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "operator": "===",
                                "right": Node {
                                  "end": 45,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 17,
                                      "line": 3,
                                    },
                                  },
                                  "raw": "0",
                                  "start": 44,
                                  "type": "Literal",
                                  "value": 0,
                                },
                                "type": "BinaryExpression",
                              },
                              "type": "ConditionalExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 4,
                                "line": 3,
                              },
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "type": "BlockStatement",
                      },
                      "id": Node {
                        "end": 21,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 2,
                          },
                        },
                        "name": "factorial",
                        "start": 12,
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 23,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 22,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 21,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 22,
                          "type": "Identifier",
                        },
                      ],
                      "type": "FunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 5,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 2,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 25,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 22,
                            "line": 5,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 81,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 24,
                              "line": 5,
                            },
                          },
                          "raw": "1",
                          "start": 80,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "body": Array [
                          Object {
                            "argument": Object {
                              "alternate": Object {
                                "left": Node {
                                  "end": 65,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 64,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "operator": "*",
                                "right": Object {
                                  "arguments": Array [
                                    Object {
                                      "left": Node {
                                        "end": 79,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 23,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 78,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "-",
                                      "right": Node {
                                        "end": 81,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 24,
                                            "line": 5,
                                          },
                                        },
                                        "raw": "1",
                                        "start": 80,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                  ],
                                  "callee": Object {
                                    "body": [Circular],
                                    "id": Node {
                                      "end": 21,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 20,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 2,
                                        },
                                      },
                                      "name": "factorial",
                                      "start": 12,
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "params": Array [
                                      Node {
                                        "end": 23,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 22,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 21,
                                            "line": 2,
                                          },
                                        },
                                        "name": "n",
                                        "start": 22,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "type": "FunctionExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 12,
                                      "line": 5,
                                    },
                                  },
                                  "type": "CallExpression",
                                },
                                "type": "BinaryExpression",
                              },
                              "consequent": Node {
                                "end": 55,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 4,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 4,
                                  },
                                },
                                "raw": "1",
                                "start": 54,
                                "type": "Literal",
                                "value": 1,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "test": Object {
                                "left": Node {
                                  "end": 39,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 12,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "name": "n",
                                  "start": 38,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "operator": "===",
                                "right": Node {
                                  "end": 45,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 17,
                                      "line": 3,
                                    },
                                  },
                                  "raw": "0",
                                  "start": 44,
                                  "type": "Literal",
                                  "value": 0,
                                },
                                "type": "BinaryExpression",
                              },
                              "type": "ConditionalExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 4,
                                "line": 3,
                              },
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "type": "BlockStatement",
                      },
                      "id": Node {
                        "end": 21,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 2,
                          },
                        },
                        "name": "factorial",
                        "start": 12,
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 23,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 22,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 21,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 22,
                          "type": "Identifier",
                        },
                      ],
                      "type": "FunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 5,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 2 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "arguments": Array [
                      Node {
                        "end": 1,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 1,
                            "line": 1,
                          },
                          "start": Position {
                            "column": 0,
                            "line": 1,
                          },
                        },
                        "raw": "1",
                        "start": 0,
                        "type": "Literal",
                        "value": 1,
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "body": Array [
                          Object {
                            "argument": Object {
                              "alternate": Object {
                                "left": Node {
                                  "end": 65,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 64,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "operator": "*",
                                "right": Object {
                                  "arguments": Array [
                                    Object {
                                      "left": Node {
                                        "end": 79,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 23,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 78,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "-",
                                      "right": Node {
                                        "end": 81,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 24,
                                            "line": 5,
                                          },
                                        },
                                        "raw": "1",
                                        "start": 80,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                  ],
                                  "callee": Object {
                                    "body": [Circular],
                                    "id": Node {
                                      "end": 21,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 20,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 2,
                                        },
                                      },
                                      "name": "factorial",
                                      "start": 12,
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "params": Array [
                                      Node {
                                        "end": 23,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 22,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 21,
                                            "line": 2,
                                          },
                                        },
                                        "name": "n",
                                        "start": 22,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "type": "FunctionExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 12,
                                      "line": 5,
                                    },
                                  },
                                  "type": "CallExpression",
                                },
                                "type": "BinaryExpression",
                              },
                              "consequent": Node {
                                "end": 55,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 4,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 4,
                                  },
                                },
                                "raw": "1",
                                "start": 54,
                                "type": "Literal",
                                "value": 1,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "test": Object {
                                "left": Node {
                                  "end": 39,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 12,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "name": "n",
                                  "start": 38,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "operator": "===",
                                "right": Node {
                                  "end": 45,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 17,
                                      "line": 3,
                                    },
                                  },
                                  "raw": "0",
                                  "start": 44,
                                  "type": "Literal",
                                  "value": 0,
                                },
                                "type": "BinaryExpression",
                              },
                              "type": "ConditionalExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 4,
                                "line": 3,
                              },
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "type": "BlockStatement",
                      },
                      "id": Node {
                        "end": 21,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 2,
                          },
                        },
                        "name": "factorial",
                        "start": 12,
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 23,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 22,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 21,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 22,
                          "type": "Identifier",
                        },
                      ],
                      "type": "FunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 5,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 2 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "arguments": Array [
                      Node {
                        "end": 1,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 1,
                            "line": 1,
                          },
                          "start": Position {
                            "column": 0,
                            "line": 1,
                          },
                        },
                        "raw": "1",
                        "start": 0,
                        "type": "Literal",
                        "value": 1,
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "body": Array [
                          Object {
                            "argument": Object {
                              "alternate": Object {
                                "left": Node {
                                  "end": 65,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "name": "n",
                                  "start": 64,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 5,
                                  },
                                },
                                "operator": "*",
                                "right": Object {
                                  "arguments": Array [
                                    Object {
                                      "left": Node {
                                        "end": 79,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 23,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 78,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 25,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 22,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "-",
                                      "right": Node {
                                        "end": 81,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 24,
                                            "line": 5,
                                          },
                                        },
                                        "raw": "1",
                                        "start": 80,
                                        "type": "Literal",
                                        "value": 1,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                  ],
                                  "callee": Object {
                                    "body": [Circular],
                                    "id": Node {
                                      "end": 21,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 20,
                                          "line": 2,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 2,
                                        },
                                      },
                                      "name": "factorial",
                                      "start": 12,
                                      "type": "Identifier",
                                    },
                                    "loc": undefined,
                                    "params": Array [
                                      Node {
                                        "end": 23,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 22,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 21,
                                            "line": 2,
                                          },
                                        },
                                        "name": "n",
                                        "start": 22,
                                        "type": "Identifier",
                                      },
                                    ],
                                    "type": "FunctionExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 12,
                                      "line": 5,
                                    },
                                  },
                                  "type": "CallExpression",
                                },
                                "type": "BinaryExpression",
                              },
                              "consequent": Node {
                                "end": 55,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 9,
                                    "line": 4,
                                  },
                                  "start": Position {
                                    "column": 8,
                                    "line": 4,
                                  },
                                },
                                "raw": "1",
                                "start": 54,
                                "type": "Literal",
                                "value": 1,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 26,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 3,
                                },
                              },
                              "test": Object {
                                "left": Node {
                                  "end": 39,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 12,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "name": "n",
                                  "start": 38,
                                  "type": "Identifier",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 18,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "operator": "===",
                                "right": Node {
                                  "end": 45,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 17,
                                      "line": 3,
                                    },
                                  },
                                  "raw": "0",
                                  "start": 44,
                                  "type": "Literal",
                                  "value": 0,
                                },
                                "type": "BinaryExpression",
                              },
                              "type": "ConditionalExpression",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 4,
                                "line": 3,
                              },
                            },
                            "type": "ReturnStatement",
                          },
                        ],
                        "type": "BlockStatement",
                      },
                      "id": Node {
                        "end": 21,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 20,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 2,
                          },
                        },
                        "name": "factorial",
                        "start": 12,
                        "type": "Identifier",
                      },
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 23,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 22,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 21,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 22,
                          "type": "Identifier",
                        },
                      ],
                      "type": "FunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 12,
                        "line": 5,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Function factorial takes in 1 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "alternate": Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "operator": "*",
                      "right": Object {
                        "arguments": Array [
                          Object {
                            "left": Object {
                              "loc": undefined,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 22,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 81,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 24,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 80,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Object {
                          "body": Object {
                            "body": Array [
                              Object {
                                "argument": Object {
                                  "alternate": Object {
                                    "left": Node {
                                      "end": 65,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 9,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 64,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "*",
                                    "right": Object {
                                      "arguments": Array [
                                        Object {
                                          "left": Node {
                                            "end": 79,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 23,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 22,
                                                "line": 5,
                                              },
                                            },
                                            "name": "n",
                                            "start": 78,
                                            "type": "Identifier",
                                          },
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "operator": "-",
                                          "right": Node {
                                            "end": 81,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 25,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 24,
                                                "line": 5,
                                              },
                                            },
                                            "raw": "1",
                                            "start": 80,
                                            "type": "Literal",
                                            "value": 1,
                                          },
                                          "type": "BinaryExpression",
                                        },
                                      ],
                                      "callee": Object {
                                        "body": [Circular],
                                        "id": Node {
                                          "end": 21,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 20,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 11,
                                              "line": 2,
                                            },
                                          },
                                          "name": "factorial",
                                          "start": 12,
                                          "type": "Identifier",
                                        },
                                        "loc": undefined,
                                        "params": Array [
                                          Node {
                                            "end": 23,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 22,
                                                "line": 2,
                                              },
                                              "start": Position {
                                                "column": 21,
                                                "line": 2,
                                              },
                                            },
                                            "name": "n",
                                            "start": 22,
                                            "type": "Identifier",
                                          },
                                        ],
                                        "type": "FunctionExpression",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 26,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 12,
                                          "line": 5,
                                        },
                                      },
                                      "type": "CallExpression",
                                    },
                                    "type": "BinaryExpression",
                                  },
                                  "consequent": Node {
                                    "end": 55,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 4,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 4,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 54,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "test": Object {
                                    "left": Node {
                                      "end": 39,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 12,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 3,
                                        },
                                      },
                                      "name": "n",
                                      "start": 38,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "operator": "===",
                                    "right": Node {
                                      "end": 45,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 18,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 17,
                                          "line": 3,
                                        },
                                      },
                                      "raw": "0",
                                      "start": 44,
                                      "type": "Literal",
                                      "value": 0,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                  "type": "ConditionalExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 27,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 4,
                                    "line": 3,
                                  },
                                },
                                "type": "ReturnStatement",
                              },
                            ],
                            "type": "BlockStatement",
                          },
                          "id": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 2,
                              },
                            },
                            "name": "factorial",
                            "start": 12,
                            "type": "Identifier",
                          },
                          "loc": undefined,
                          "params": Array [
                            Node {
                              "end": 23,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 22,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 21,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 22,
                              "type": "Identifier",
                            },
                          ],
                          "type": "FunctionExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 12,
                            "line": 5,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "type": "BinaryExpression",
                    },
                    "consequent": Node {
                      "end": 55,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "raw": "1",
                      "start": 54,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "test": Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 18,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "===",
                      "right": Node {
                        "end": 45,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 17,
                            "line": 3,
                          },
                        },
                        "raw": "0",
                        "start": 44,
                        "type": "Literal",
                        "value": 0,
                      },
                      "type": "BinaryExpression",
                    },
                    "type": "ConditionalExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Function factorial takes in 1 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "alternate": Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "operator": "*",
                      "right": Object {
                        "arguments": Array [
                          Object {
                            "left": Object {
                              "loc": undefined,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 22,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 81,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 24,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 80,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Object {
                          "body": Object {
                            "body": Array [
                              Object {
                                "argument": Object {
                                  "alternate": Object {
                                    "left": Node {
                                      "end": 65,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 9,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 64,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "*",
                                    "right": Object {
                                      "arguments": Array [
                                        Object {
                                          "left": Node {
                                            "end": 79,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 23,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 22,
                                                "line": 5,
                                              },
                                            },
                                            "name": "n",
                                            "start": 78,
                                            "type": "Identifier",
                                          },
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "operator": "-",
                                          "right": Node {
                                            "end": 81,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 25,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 24,
                                                "line": 5,
                                              },
                                            },
                                            "raw": "1",
                                            "start": 80,
                                            "type": "Literal",
                                            "value": 1,
                                          },
                                          "type": "BinaryExpression",
                                        },
                                      ],
                                      "callee": Object {
                                        "body": [Circular],
                                        "id": Node {
                                          "end": 21,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 20,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 11,
                                              "line": 2,
                                            },
                                          },
                                          "name": "factorial",
                                          "start": 12,
                                          "type": "Identifier",
                                        },
                                        "loc": undefined,
                                        "params": Array [
                                          Node {
                                            "end": 23,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 22,
                                                "line": 2,
                                              },
                                              "start": Position {
                                                "column": 21,
                                                "line": 2,
                                              },
                                            },
                                            "name": "n",
                                            "start": 22,
                                            "type": "Identifier",
                                          },
                                        ],
                                        "type": "FunctionExpression",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 26,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 12,
                                          "line": 5,
                                        },
                                      },
                                      "type": "CallExpression",
                                    },
                                    "type": "BinaryExpression",
                                  },
                                  "consequent": Node {
                                    "end": 55,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 4,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 4,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 54,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "test": Object {
                                    "left": Node {
                                      "end": 39,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 12,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 3,
                                        },
                                      },
                                      "name": "n",
                                      "start": 38,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "operator": "===",
                                    "right": Node {
                                      "end": 45,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 18,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 17,
                                          "line": 3,
                                        },
                                      },
                                      "raw": "0",
                                      "start": 44,
                                      "type": "Literal",
                                      "value": 0,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                  "type": "ConditionalExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 27,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 4,
                                    "line": 3,
                                  },
                                },
                                "type": "ReturnStatement",
                              },
                            ],
                            "type": "BlockStatement",
                          },
                          "id": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 2,
                              },
                            },
                            "name": "factorial",
                            "start": 12,
                            "type": "Identifier",
                          },
                          "loc": undefined,
                          "params": Array [
                            Node {
                              "end": 23,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 22,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 21,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 22,
                              "type": "Identifier",
                            },
                          ],
                          "type": "FunctionExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 12,
                            "line": 5,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "type": "BinaryExpression",
                    },
                    "consequent": Node {
                      "end": 55,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "raw": "1",
                      "start": 54,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "test": Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 18,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "===",
                      "right": Node {
                        "end": 45,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 17,
                            "line": 3,
                          },
                        },
                        "raw": "0",
                        "start": 44,
                        "type": "Literal",
                        "value": 0,
                      },
                      "type": "BinaryExpression",
                    },
                    "type": "ConditionalExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "test",
      ],
    ],
    "Binary expression 1 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "alternate": Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "operator": "*",
                      "right": Object {
                        "arguments": Array [
                          Object {
                            "left": Object {
                              "loc": undefined,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 22,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 81,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 24,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 80,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Object {
                          "body": Object {
                            "body": Array [
                              Object {
                                "argument": Object {
                                  "alternate": Object {
                                    "left": Node {
                                      "end": 65,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 9,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 64,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "*",
                                    "right": Object {
                                      "arguments": Array [
                                        Object {
                                          "left": Node {
                                            "end": 79,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 23,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 22,
                                                "line": 5,
                                              },
                                            },
                                            "name": "n",
                                            "start": 78,
                                            "type": "Identifier",
                                          },
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "operator": "-",
                                          "right": Node {
                                            "end": 81,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 25,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 24,
                                                "line": 5,
                                              },
                                            },
                                            "raw": "1",
                                            "start": 80,
                                            "type": "Literal",
                                            "value": 1,
                                          },
                                          "type": "BinaryExpression",
                                        },
                                      ],
                                      "callee": Object {
                                        "body": [Circular],
                                        "id": Node {
                                          "end": 21,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 20,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 11,
                                              "line": 2,
                                            },
                                          },
                                          "name": "factorial",
                                          "start": 12,
                                          "type": "Identifier",
                                        },
                                        "loc": undefined,
                                        "params": Array [
                                          Node {
                                            "end": 23,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 22,
                                                "line": 2,
                                              },
                                              "start": Position {
                                                "column": 21,
                                                "line": 2,
                                              },
                                            },
                                            "name": "n",
                                            "start": 22,
                                            "type": "Identifier",
                                          },
                                        ],
                                        "type": "FunctionExpression",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 26,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 12,
                                          "line": 5,
                                        },
                                      },
                                      "type": "CallExpression",
                                    },
                                    "type": "BinaryExpression",
                                  },
                                  "consequent": Node {
                                    "end": 55,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 4,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 4,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 54,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "test": Object {
                                    "left": Node {
                                      "end": 39,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 12,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 3,
                                        },
                                      },
                                      "name": "n",
                                      "start": 38,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "operator": "===",
                                    "right": Node {
                                      "end": 45,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 18,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 17,
                                          "line": 3,
                                        },
                                      },
                                      "raw": "0",
                                      "start": 44,
                                      "type": "Literal",
                                      "value": 0,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                  "type": "ConditionalExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 27,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 4,
                                    "line": 3,
                                  },
                                },
                                "type": "ReturnStatement",
                              },
                            ],
                            "type": "BlockStatement",
                          },
                          "id": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 2,
                              },
                            },
                            "name": "factorial",
                            "start": 12,
                            "type": "Identifier",
                          },
                          "loc": undefined,
                          "params": Array [
                            Node {
                              "end": 23,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 22,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 21,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 22,
                              "type": "Identifier",
                            },
                          ],
                          "type": "FunctionExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 12,
                            "line": 5,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "type": "BinaryExpression",
                    },
                    "consequent": Node {
                      "end": 55,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "raw": "1",
                      "start": 54,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "test": Node {
                      "end": 5,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 5,
                          "line": 1,
                        },
                        "start": Position {
                          "column": 0,
                          "line": 1,
                        },
                      },
                      "raw": "false",
                      "start": 0,
                      "type": "Literal",
                      "value": false,
                    },
                    "type": "ConditionalExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "test",
      ],
    ],
    "Binary expression 1 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "alternate": Object {
                      "left": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "operator": "*",
                      "right": Object {
                        "arguments": Array [
                          Object {
                            "left": Object {
                              "loc": undefined,
                              "type": "Literal",
                              "value": 1,
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 22,
                                "line": 5,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 81,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 24,
                                  "line": 5,
                                },
                              },
                              "raw": "1",
                              "start": 80,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Object {
                          "body": Object {
                            "body": Array [
                              Object {
                                "argument": Object {
                                  "alternate": Object {
                                    "left": Node {
                                      "end": 65,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 9,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 5,
                                        },
                                      },
                                      "name": "n",
                                      "start": 64,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "operator": "*",
                                    "right": Object {
                                      "arguments": Array [
                                        Object {
                                          "left": Node {
                                            "end": 79,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 23,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 22,
                                                "line": 5,
                                              },
                                            },
                                            "name": "n",
                                            "start": 78,
                                            "type": "Identifier",
                                          },
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "operator": "-",
                                          "right": Node {
                                            "end": 81,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 25,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 24,
                                                "line": 5,
                                              },
                                            },
                                            "raw": "1",
                                            "start": 80,
                                            "type": "Literal",
                                            "value": 1,
                                          },
                                          "type": "BinaryExpression",
                                        },
                                      ],
                                      "callee": Object {
                                        "body": [Circular],
                                        "id": Node {
                                          "end": 21,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 20,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 11,
                                              "line": 2,
                                            },
                                          },
                                          "name": "factorial",
                                          "start": 12,
                                          "type": "Identifier",
                                        },
                                        "loc": undefined,
                                        "params": Array [
                                          Node {
                                            "end": 23,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 22,
                                                "line": 2,
                                              },
                                              "start": Position {
                                                "column": 21,
                                                "line": 2,
                                              },
                                            },
                                            "name": "n",
                                            "start": 22,
                                            "type": "Identifier",
                                          },
                                        ],
                                        "type": "FunctionExpression",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 26,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 12,
                                          "line": 5,
                                        },
                                      },
                                      "type": "CallExpression",
                                    },
                                    "type": "BinaryExpression",
                                  },
                                  "consequent": Node {
                                    "end": 55,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 4,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 4,
                                      },
                                    },
                                    "raw": "1",
                                    "start": 54,
                                    "type": "Literal",
                                    "value": 1,
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "test": Object {
                                    "left": Node {
                                      "end": 39,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 12,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 3,
                                        },
                                      },
                                      "name": "n",
                                      "start": 38,
                                      "type": "Identifier",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "operator": "===",
                                    "right": Node {
                                      "end": 45,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 18,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 17,
                                          "line": 3,
                                        },
                                      },
                                      "raw": "0",
                                      "start": 44,
                                      "type": "Literal",
                                      "value": 0,
                                    },
                                    "type": "BinaryExpression",
                                  },
                                  "type": "ConditionalExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 27,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 4,
                                    "line": 3,
                                  },
                                },
                                "type": "ReturnStatement",
                              },
                            ],
                            "type": "BlockStatement",
                          },
                          "id": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 11,
                                "line": 2,
                              },
                            },
                            "name": "factorial",
                            "start": 12,
                            "type": "Identifier",
                          },
                          "loc": undefined,
                          "params": Array [
                            Node {
                              "end": 23,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 22,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 21,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 22,
                              "type": "Identifier",
                            },
                          ],
                          "type": "FunctionExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 12,
                            "line": 5,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "type": "BinaryExpression",
                    },
                    "consequent": Node {
                      "end": 55,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "raw": "1",
                      "start": 54,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "test": Node {
                      "end": 5,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 5,
                          "line": 1,
                        },
                        "start": Position {
                          "column": 0,
                          "line": 1,
                        },
                      },
                      "raw": "false",
                      "start": 0,
                      "type": "Literal",
                      "value": false,
                    },
                    "type": "ConditionalExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Object {
                          "left": Object {
                            "loc": undefined,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 22,
                              "line": 5,
                            },
                          },
                          "operator": "-",
                          "right": Node {
                            "end": 81,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 24,
                                "line": 5,
                              },
                            },
                            "raw": "1",
                            "start": 80,
                            "type": "Literal",
                            "value": 1,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "alternate": Object {
                                  "left": Node {
                                    "end": 65,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 64,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "*",
                                  "right": Object {
                                    "arguments": Array [
                                      Object {
                                        "left": Node {
                                          "end": 79,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 23,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "name": "n",
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "operator": "-",
                                        "right": Node {
                                          "end": 81,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 24,
                                              "line": 5,
                                            },
                                          },
                                          "raw": "1",
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 1,
                                        },
                                        "type": "BinaryExpression",
                                      },
                                    ],
                                    "callee": Object {
                                      "body": [Circular],
                                      "id": Node {
                                        "end": 21,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 20,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 2,
                                          },
                                        },
                                        "name": "factorial",
                                        "start": 12,
                                        "type": "Identifier",
                                      },
                                      "loc": undefined,
                                      "params": Array [
                                        Node {
                                          "end": 23,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 22,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 21,
                                              "line": 2,
                                            },
                                          },
                                          "name": "n",
                                          "start": 22,
                                          "type": "Identifier",
                                        },
                                      ],
                                      "type": "FunctionExpression",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 12,
                                        "line": 5,
                                      },
                                    },
                                    "type": "CallExpression",
                                  },
                                  "type": "BinaryExpression",
                                },
                                "consequent": Node {
                                  "end": 55,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 4,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 4,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 54,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "test": Object {
                                  "left": Node {
                                    "end": 39,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 12,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "name": "n",
                                    "start": 38,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "operator": "===",
                                  "right": Node {
                                    "end": 45,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 17,
                                        "line": 3,
                                      },
                                    },
                                    "raw": "0",
                                    "start": 44,
                                    "type": "Literal",
                                    "value": 0,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "type": "ConditionalExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 4,
                                  "line": 3,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 2,
                            },
                          },
                          "name": "factorial",
                          "start": 12,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [
                          Node {
                            "end": 23,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 22,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 21,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 22,
                            "type": "Identifier",
                          },
                        ],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Object {
                          "left": Object {
                            "loc": undefined,
                            "type": "Literal",
                            "value": 1,
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 25,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 22,
                              "line": 5,
                            },
                          },
                          "operator": "-",
                          "right": Node {
                            "end": 81,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 25,
                                "line": 5,
                              },
                              "start": Position {
                                "column": 24,
                                "line": 5,
                              },
                            },
                            "raw": "1",
                            "start": 80,
                            "type": "Literal",
                            "value": 1,
                          },
                          "type": "BinaryExpression",
                        },
                      ],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "alternate": Object {
                                  "left": Node {
                                    "end": 65,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 64,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "*",
                                  "right": Object {
                                    "arguments": Array [
                                      Object {
                                        "left": Node {
                                          "end": 79,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 23,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "name": "n",
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "operator": "-",
                                        "right": Node {
                                          "end": 81,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 24,
                                              "line": 5,
                                            },
                                          },
                                          "raw": "1",
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 1,
                                        },
                                        "type": "BinaryExpression",
                                      },
                                    ],
                                    "callee": Object {
                                      "body": [Circular],
                                      "id": Node {
                                        "end": 21,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 20,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 2,
                                          },
                                        },
                                        "name": "factorial",
                                        "start": 12,
                                        "type": "Identifier",
                                      },
                                      "loc": undefined,
                                      "params": Array [
                                        Node {
                                          "end": 23,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 22,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 21,
                                              "line": 2,
                                            },
                                          },
                                          "name": "n",
                                          "start": 22,
                                          "type": "Identifier",
                                        },
                                      ],
                                      "type": "FunctionExpression",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 12,
                                        "line": 5,
                                      },
                                    },
                                    "type": "CallExpression",
                                  },
                                  "type": "BinaryExpression",
                                },
                                "consequent": Node {
                                  "end": 55,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 4,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 4,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 54,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "test": Object {
                                  "left": Node {
                                    "end": 39,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 12,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "name": "n",
                                    "start": 38,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "operator": "===",
                                  "right": Node {
                                    "end": 45,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 17,
                                        "line": 3,
                                      },
                                    },
                                    "raw": "0",
                                    "start": 44,
                                    "type": "Literal",
                                    "value": 0,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "type": "ConditionalExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 4,
                                  "line": 3,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 2,
                            },
                          },
                          "name": "factorial",
                          "start": 12,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [
                          Node {
                            "end": 23,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 22,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 21,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 22,
                            "type": "Identifier",
                          },
                        ],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 1 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Node {
                          "end": 1,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 1,
                              "line": 1,
                            },
                            "start": Position {
                              "column": 0,
                              "line": 1,
                            },
                          },
                          "raw": "0",
                          "start": 0,
                          "type": "Literal",
                          "value": 0,
                        },
                      ],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "alternate": Object {
                                  "left": Node {
                                    "end": 65,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 64,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "*",
                                  "right": Object {
                                    "arguments": Array [
                                      Object {
                                        "left": Node {
                                          "end": 79,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 23,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "name": "n",
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "operator": "-",
                                        "right": Node {
                                          "end": 81,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 24,
                                              "line": 5,
                                            },
                                          },
                                          "raw": "1",
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 1,
                                        },
                                        "type": "BinaryExpression",
                                      },
                                    ],
                                    "callee": Object {
                                      "body": [Circular],
                                      "id": Node {
                                        "end": 21,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 20,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 2,
                                          },
                                        },
                                        "name": "factorial",
                                        "start": 12,
                                        "type": "Identifier",
                                      },
                                      "loc": undefined,
                                      "params": Array [
                                        Node {
                                          "end": 23,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 22,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 21,
                                              "line": 2,
                                            },
                                          },
                                          "name": "n",
                                          "start": 22,
                                          "type": "Identifier",
                                        },
                                      ],
                                      "type": "FunctionExpression",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 12,
                                        "line": 5,
                                      },
                                    },
                                    "type": "CallExpression",
                                  },
                                  "type": "BinaryExpression",
                                },
                                "consequent": Node {
                                  "end": 55,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 4,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 4,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 54,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "test": Object {
                                  "left": Node {
                                    "end": 39,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 12,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "name": "n",
                                    "start": 38,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "operator": "===",
                                  "right": Node {
                                    "end": 45,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 17,
                                        "line": 3,
                                      },
                                    },
                                    "raw": "0",
                                    "start": 44,
                                    "type": "Literal",
                                    "value": 0,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "type": "ConditionalExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 4,
                                  "line": 3,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 2,
                            },
                          },
                          "name": "factorial",
                          "start": 12,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [
                          Node {
                            "end": 23,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 22,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 21,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 22,
                            "type": "Identifier",
                          },
                        ],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "right",
        "arguments[0]",
      ],
    ],
    "Binary expression 1 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "arguments": Array [
                        Node {
                          "end": 1,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 1,
                              "line": 1,
                            },
                            "start": Position {
                              "column": 0,
                              "line": 1,
                            },
                          },
                          "raw": "0",
                          "start": 0,
                          "type": "Literal",
                          "value": 0,
                        },
                      ],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "alternate": Object {
                                  "left": Node {
                                    "end": 65,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 9,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 8,
                                        "line": 5,
                                      },
                                    },
                                    "name": "n",
                                    "start": 64,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 26,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 5,
                                    },
                                  },
                                  "operator": "*",
                                  "right": Object {
                                    "arguments": Array [
                                      Object {
                                        "left": Node {
                                          "end": 79,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 23,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 22,
                                              "line": 5,
                                            },
                                          },
                                          "name": "n",
                                          "start": 78,
                                          "type": "Identifier",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 25,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 22,
                                            "line": 5,
                                          },
                                        },
                                        "operator": "-",
                                        "right": Node {
                                          "end": 81,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 25,
                                              "line": 5,
                                            },
                                            "start": Position {
                                              "column": 24,
                                              "line": 5,
                                            },
                                          },
                                          "raw": "1",
                                          "start": 80,
                                          "type": "Literal",
                                          "value": 1,
                                        },
                                        "type": "BinaryExpression",
                                      },
                                    ],
                                    "callee": Object {
                                      "body": [Circular],
                                      "id": Node {
                                        "end": 21,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 20,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 2,
                                          },
                                        },
                                        "name": "factorial",
                                        "start": 12,
                                        "type": "Identifier",
                                      },
                                      "loc": undefined,
                                      "params": Array [
                                        Node {
                                          "end": 23,
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 22,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 21,
                                              "line": 2,
                                            },
                                          },
                                          "name": "n",
                                          "start": 22,
                                          "type": "Identifier",
                                        },
                                      ],
                                      "type": "FunctionExpression",
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 12,
                                        "line": 5,
                                      },
                                    },
                                    "type": "CallExpression",
                                  },
                                  "type": "BinaryExpression",
                                },
                                "consequent": Node {
                                  "end": 55,
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 9,
                                      "line": 4,
                                    },
                                    "start": Position {
                                      "column": 8,
                                      "line": 4,
                                    },
                                  },
                                  "raw": "1",
                                  "start": 54,
                                  "type": "Literal",
                                  "value": 1,
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 26,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 11,
                                    "line": 3,
                                  },
                                },
                                "test": Object {
                                  "left": Node {
                                    "end": 39,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 12,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "name": "n",
                                    "start": 38,
                                    "type": "Identifier",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 18,
                                      "line": 3,
                                    },
                                    "start": Position {
                                      "column": 11,
                                      "line": 3,
                                    },
                                  },
                                  "operator": "===",
                                  "right": Node {
                                    "end": 45,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 18,
                                        "line": 3,
                                      },
                                      "start": Position {
                                        "column": 17,
                                        "line": 3,
                                      },
                                    },
                                    "raw": "0",
                                    "start": 44,
                                    "type": "Literal",
                                    "value": 0,
                                  },
                                  "type": "BinaryExpression",
                                },
                                "type": "ConditionalExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 4,
                                  "line": 3,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 11,
                              "line": 2,
                            },
                          },
                          "name": "factorial",
                          "start": 12,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [
                          Node {
                            "end": 23,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 22,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 21,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 22,
                            "type": "Identifier",
                          },
                        ],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 12,
                          "line": 5,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Function factorial takes in 0 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "alternate": Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 0,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 5,
                          },
                        },
                        "operator": "*",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Object {
                                "loc": undefined,
                                "type": "Literal",
                                "value": 0,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 22,
                                  "line": 5,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 81,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 24,
                                    "line": 5,
                                  },
                                },
                                "raw": "1",
                                "start": 80,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": Object {
                              "body": Array [
                                Object {
                                  "argument": Object {
                                    "alternate": Object {
                                      "left": Node {
                                        "end": 65,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 9,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 8,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 64,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 26,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "*",
                                      "right": Object {
                                        "arguments": Array [
                                          Object {
                                            "left": Node {
                                              "end": 79,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 23,
                                                  "line": 5,
                                                },
                                                "start": Position {
                                                  "column": 22,
                                                  "line": 5,
                                                },
                                              },
                                              "name": "n",
                                              "start": 78,
                                              "type": "Identifier",
                                            },
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 25,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 22,
                                                "line": 5,
                                              },
                                            },
                                            "operator": "-",
                                            "right": Node {
                                              "end": 81,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 25,
                                                  "line": 5,
                                                },
                                                "start": Position {
                                                  "column": 24,
                                                  "line": 5,
                                                },
                                              },
                                              "raw": "1",
                                              "start": 80,
                                              "type": "Literal",
                                              "value": 1,
                                            },
                                            "type": "BinaryExpression",
                                          },
                                        ],
                                        "callee": Object {
                                          "body": [Circular],
                                          "id": Node {
                                            "end": 21,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 20,
                                                "line": 2,
                                              },
                                              "start": Position {
                                                "column": 11,
                                                "line": 2,
                                              },
                                            },
                                            "name": "factorial",
                                            "start": 12,
                                            "type": "Identifier",
                                          },
                                          "loc": undefined,
                                          "params": Array [
                                            Node {
                                              "end": 23,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 22,
                                                  "line": 2,
                                                },
                                                "start": Position {
                                                  "column": 21,
                                                  "line": 2,
                                                },
                                              },
                                              "name": "n",
                                              "start": 22,
                                              "type": "Identifier",
                                            },
                                          ],
                                          "type": "FunctionExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 26,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 12,
                                            "line": 5,
                                          },
                                        },
                                        "type": "CallExpression",
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "consequent": Node {
                                      "end": 55,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 9,
                                          "line": 4,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 4,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 54,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "test": Object {
                                      "left": Node {
                                        "end": 39,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 12,
                                            "line": 3,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 3,
                                          },
                                        },
                                        "name": "n",
                                        "start": 38,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 18,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 3,
                                        },
                                      },
                                      "operator": "===",
                                      "right": Node {
                                        "end": 45,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 18,
                                            "line": 3,
                                          },
                                          "start": Position {
                                            "column": 17,
                                            "line": 3,
                                          },
                                        },
                                        "raw": "0",
                                        "start": 44,
                                        "type": "Literal",
                                        "value": 0,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "type": "ConditionalExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 27,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 4,
                                      "line": 3,
                                    },
                                  },
                                  "type": "ReturnStatement",
                                },
                              ],
                              "type": "BlockStatement",
                            },
                            "id": Node {
                              "end": 21,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 20,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 2,
                                },
                              },
                              "name": "factorial",
                              "start": 12,
                              "type": "Identifier",
                            },
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 23,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 22,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 21,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 22,
                                "type": "Identifier",
                              },
                            ],
                            "type": "FunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 5,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "BinaryExpression",
                      },
                      "consequent": Node {
                        "end": 55,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 9,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "raw": "1",
                        "start": 54,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "test": Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 0,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 45,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 17,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 44,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Function factorial takes in 0 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "alternate": Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 0,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 5,
                          },
                        },
                        "operator": "*",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Object {
                                "loc": undefined,
                                "type": "Literal",
                                "value": 0,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 22,
                                  "line": 5,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 81,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 24,
                                    "line": 5,
                                  },
                                },
                                "raw": "1",
                                "start": 80,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": Object {
                              "body": Array [
                                Object {
                                  "argument": Object {
                                    "alternate": Object {
                                      "left": Node {
                                        "end": 65,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 9,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 8,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 64,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 26,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "*",
                                      "right": Object {
                                        "arguments": Array [
                                          Object {
                                            "left": Node {
                                              "end": 79,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 23,
                                                  "line": 5,
                                                },
                                                "start": Position {
                                                  "column": 22,
                                                  "line": 5,
                                                },
                                              },
                                              "name": "n",
                                              "start": 78,
                                              "type": "Identifier",
                                            },
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 25,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 22,
                                                "line": 5,
                                              },
                                            },
                                            "operator": "-",
                                            "right": Node {
                                              "end": 81,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 25,
                                                  "line": 5,
                                                },
                                                "start": Position {
                                                  "column": 24,
                                                  "line": 5,
                                                },
                                              },
                                              "raw": "1",
                                              "start": 80,
                                              "type": "Literal",
                                              "value": 1,
                                            },
                                            "type": "BinaryExpression",
                                          },
                                        ],
                                        "callee": Object {
                                          "body": [Circular],
                                          "id": Node {
                                            "end": 21,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 20,
                                                "line": 2,
                                              },
                                              "start": Position {
                                                "column": 11,
                                                "line": 2,
                                              },
                                            },
                                            "name": "factorial",
                                            "start": 12,
                                            "type": "Identifier",
                                          },
                                          "loc": undefined,
                                          "params": Array [
                                            Node {
                                              "end": 23,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 22,
                                                  "line": 2,
                                                },
                                                "start": Position {
                                                  "column": 21,
                                                  "line": 2,
                                                },
                                              },
                                              "name": "n",
                                              "start": 22,
                                              "type": "Identifier",
                                            },
                                          ],
                                          "type": "FunctionExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 26,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 12,
                                            "line": 5,
                                          },
                                        },
                                        "type": "CallExpression",
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "consequent": Node {
                                      "end": 55,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 9,
                                          "line": 4,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 4,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 54,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "test": Object {
                                      "left": Node {
                                        "end": 39,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 12,
                                            "line": 3,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 3,
                                          },
                                        },
                                        "name": "n",
                                        "start": 38,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 18,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 3,
                                        },
                                      },
                                      "operator": "===",
                                      "right": Node {
                                        "end": 45,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 18,
                                            "line": 3,
                                          },
                                          "start": Position {
                                            "column": 17,
                                            "line": 3,
                                          },
                                        },
                                        "raw": "0",
                                        "start": 44,
                                        "type": "Literal",
                                        "value": 0,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "type": "ConditionalExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 27,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 4,
                                      "line": 3,
                                    },
                                  },
                                  "type": "ReturnStatement",
                                },
                              ],
                              "type": "BlockStatement",
                            },
                            "id": Node {
                              "end": 21,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 20,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 2,
                                },
                              },
                              "name": "factorial",
                              "start": 12,
                              "type": "Identifier",
                            },
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 23,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 22,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 21,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 22,
                                "type": "Identifier",
                              },
                            ],
                            "type": "FunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 5,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "BinaryExpression",
                      },
                      "consequent": Node {
                        "end": 55,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 9,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "raw": "1",
                        "start": 54,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "test": Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 0,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 18,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 45,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 18,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 17,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 44,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "right",
        "test",
      ],
    ],
    "Binary expression 0 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "alternate": Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 0,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 5,
                          },
                        },
                        "operator": "*",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Object {
                                "loc": undefined,
                                "type": "Literal",
                                "value": 0,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 22,
                                  "line": 5,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 81,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 24,
                                    "line": 5,
                                  },
                                },
                                "raw": "1",
                                "start": 80,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": Object {
                              "body": Array [
                                Object {
                                  "argument": Object {
                                    "alternate": Object {
                                      "left": Node {
                                        "end": 65,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 9,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 8,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 64,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 26,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "*",
                                      "right": Object {
                                        "arguments": Array [
                                          Object {
                                            "left": Node {
                                              "end": 79,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 23,
                                                  "line": 5,
                                                },
                                                "start": Position {
                                                  "column": 22,
                                                  "line": 5,
                                                },
                                              },
                                              "name": "n",
                                              "start": 78,
                                              "type": "Identifier",
                                            },
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 25,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 22,
                                                "line": 5,
                                              },
                                            },
                                            "operator": "-",
                                            "right": Node {
                                              "end": 81,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 25,
                                                  "line": 5,
                                                },
                                                "start": Position {
                                                  "column": 24,
                                                  "line": 5,
                                                },
                                              },
                                              "raw": "1",
                                              "start": 80,
                                              "type": "Literal",
                                              "value": 1,
                                            },
                                            "type": "BinaryExpression",
                                          },
                                        ],
                                        "callee": Object {
                                          "body": [Circular],
                                          "id": Node {
                                            "end": 21,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 20,
                                                "line": 2,
                                              },
                                              "start": Position {
                                                "column": 11,
                                                "line": 2,
                                              },
                                            },
                                            "name": "factorial",
                                            "start": 12,
                                            "type": "Identifier",
                                          },
                                          "loc": undefined,
                                          "params": Array [
                                            Node {
                                              "end": 23,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 22,
                                                  "line": 2,
                                                },
                                                "start": Position {
                                                  "column": 21,
                                                  "line": 2,
                                                },
                                              },
                                              "name": "n",
                                              "start": 22,
                                              "type": "Identifier",
                                            },
                                          ],
                                          "type": "FunctionExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 26,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 12,
                                            "line": 5,
                                          },
                                        },
                                        "type": "CallExpression",
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "consequent": Node {
                                      "end": 55,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 9,
                                          "line": 4,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 4,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 54,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "test": Object {
                                      "left": Node {
                                        "end": 39,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 12,
                                            "line": 3,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 3,
                                          },
                                        },
                                        "name": "n",
                                        "start": 38,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 18,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 3,
                                        },
                                      },
                                      "operator": "===",
                                      "right": Node {
                                        "end": 45,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 18,
                                            "line": 3,
                                          },
                                          "start": Position {
                                            "column": 17,
                                            "line": 3,
                                          },
                                        },
                                        "raw": "0",
                                        "start": 44,
                                        "type": "Literal",
                                        "value": 0,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "type": "ConditionalExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 27,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 4,
                                      "line": 3,
                                    },
                                  },
                                  "type": "ReturnStatement",
                                },
                              ],
                              "type": "BlockStatement",
                            },
                            "id": Node {
                              "end": 21,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 20,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 2,
                                },
                              },
                              "name": "factorial",
                              "start": 12,
                              "type": "Identifier",
                            },
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 23,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 22,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 21,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 22,
                                "type": "Identifier",
                              },
                            ],
                            "type": "FunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 5,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "BinaryExpression",
                      },
                      "consequent": Node {
                        "end": 55,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 9,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "raw": "1",
                        "start": 54,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "test": Node {
                        "end": 4,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 4,
                            "line": 1,
                          },
                          "start": Position {
                            "column": 0,
                            "line": 1,
                          },
                        },
                        "raw": "true",
                        "start": 0,
                        "type": "Literal",
                        "value": true,
                      },
                      "type": "ConditionalExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "right",
        "test",
      ],
    ],
    "Binary expression 0 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Object {
                      "alternate": Object {
                        "left": Object {
                          "loc": undefined,
                          "type": "Literal",
                          "value": 0,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 5,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 5,
                          },
                        },
                        "operator": "*",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Object {
                                "loc": undefined,
                                "type": "Literal",
                                "value": 0,
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 25,
                                  "line": 5,
                                },
                                "start": Position {
                                  "column": 22,
                                  "line": 5,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 81,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 25,
                                    "line": 5,
                                  },
                                  "start": Position {
                                    "column": 24,
                                    "line": 5,
                                  },
                                },
                                "raw": "1",
                                "start": 80,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": Object {
                              "body": Array [
                                Object {
                                  "argument": Object {
                                    "alternate": Object {
                                      "left": Node {
                                        "end": 65,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 9,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 8,
                                            "line": 5,
                                          },
                                        },
                                        "name": "n",
                                        "start": 64,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 26,
                                          "line": 5,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 5,
                                        },
                                      },
                                      "operator": "*",
                                      "right": Object {
                                        "arguments": Array [
                                          Object {
                                            "left": Node {
                                              "end": 79,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 23,
                                                  "line": 5,
                                                },
                                                "start": Position {
                                                  "column": 22,
                                                  "line": 5,
                                                },
                                              },
                                              "name": "n",
                                              "start": 78,
                                              "type": "Identifier",
                                            },
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 25,
                                                "line": 5,
                                              },
                                              "start": Position {
                                                "column": 22,
                                                "line": 5,
                                              },
                                            },
                                            "operator": "-",
                                            "right": Node {
                                              "end": 81,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 25,
                                                  "line": 5,
                                                },
                                                "start": Position {
                                                  "column": 24,
                                                  "line": 5,
                                                },
                                              },
                                              "raw": "1",
                                              "start": 80,
                                              "type": "Literal",
                                              "value": 1,
                                            },
                                            "type": "BinaryExpression",
                                          },
                                        ],
                                        "callee": Object {
                                          "body": [Circular],
                                          "id": Node {
                                            "end": 21,
                                            "loc": SourceLocation {
                                              "end": Position {
                                                "column": 20,
                                                "line": 2,
                                              },
                                              "start": Position {
                                                "column": 11,
                                                "line": 2,
                                              },
                                            },
                                            "name": "factorial",
                                            "start": 12,
                                            "type": "Identifier",
                                          },
                                          "loc": undefined,
                                          "params": Array [
                                            Node {
                                              "end": 23,
                                              "loc": SourceLocation {
                                                "end": Position {
                                                  "column": 22,
                                                  "line": 2,
                                                },
                                                "start": Position {
                                                  "column": 21,
                                                  "line": 2,
                                                },
                                              },
                                              "name": "n",
                                              "start": 22,
                                              "type": "Identifier",
                                            },
                                          ],
                                          "type": "FunctionExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 26,
                                            "line": 5,
                                          },
                                          "start": Position {
                                            "column": 12,
                                            "line": 5,
                                          },
                                        },
                                        "type": "CallExpression",
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "consequent": Node {
                                      "end": 55,
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 9,
                                          "line": 4,
                                        },
                                        "start": Position {
                                          "column": 8,
                                          "line": 4,
                                        },
                                      },
                                      "raw": "1",
                                      "start": 54,
                                      "type": "Literal",
                                      "value": 1,
                                    },
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 26,
                                        "line": 5,
                                      },
                                      "start": Position {
                                        "column": 11,
                                        "line": 3,
                                      },
                                    },
                                    "test": Object {
                                      "left": Node {
                                        "end": 39,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 12,
                                            "line": 3,
                                          },
                                          "start": Position {
                                            "column": 11,
                                            "line": 3,
                                          },
                                        },
                                        "name": "n",
                                        "start": 38,
                                        "type": "Identifier",
                                      },
                                      "loc": SourceLocation {
                                        "end": Position {
                                          "column": 18,
                                          "line": 3,
                                        },
                                        "start": Position {
                                          "column": 11,
                                          "line": 3,
                                        },
                                      },
                                      "operator": "===",
                                      "right": Node {
                                        "end": 45,
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 18,
                                            "line": 3,
                                          },
                                          "start": Position {
                                            "column": 17,
                                            "line": 3,
                                          },
                                        },
                                        "raw": "0",
                                        "start": 44,
                                        "type": "Literal",
                                        "value": 0,
                                      },
                                      "type": "BinaryExpression",
                                    },
                                    "type": "ConditionalExpression",
                                  },
                                  "loc": SourceLocation {
                                    "end": Position {
                                      "column": 27,
                                      "line": 5,
                                    },
                                    "start": Position {
                                      "column": 4,
                                      "line": 3,
                                    },
                                  },
                                  "type": "ReturnStatement",
                                },
                              ],
                              "type": "BlockStatement",
                            },
                            "id": Node {
                              "end": 21,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 20,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 11,
                                  "line": 2,
                                },
                              },
                              "name": "factorial",
                              "start": 12,
                              "type": "Identifier",
                            },
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 23,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 22,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 21,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 22,
                                "type": "Identifier",
                              },
                            ],
                            "type": "FunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 12,
                              "line": 5,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "BinaryExpression",
                      },
                      "consequent": Node {
                        "end": 55,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 9,
                            "line": 4,
                          },
                          "start": Position {
                            "column": 8,
                            "line": 4,
                          },
                        },
                        "raw": "1",
                        "start": 54,
                        "type": "Literal",
                        "value": 1,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "test": Node {
                        "end": 4,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 4,
                            "line": 1,
                          },
                          "start": Position {
                            "column": 0,
                            "line": 1,
                          },
                        },
                        "raw": "true",
                        "start": 0,
                        "type": "Literal",
                        "value": true,
                      },
                      "type": "ConditionalExpression",
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is true, consequent evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 55,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "raw": "1",
                      "start": 54,
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Conditional expression evaluated, condition is true, consequent evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Object {
                    "left": Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 8,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 55,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 4,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 4,
                        },
                      },
                      "raw": "1",
                      "start": 54,
                      "type": "Literal",
                      "value": 1,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Binary expression 1 * 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Node {
                    "end": 1,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 1,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "1",
                    "start": 0,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
        "right",
      ],
    ],
    "Binary expression 1 * 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 8,
                      "line": 5,
                    },
                  },
                  "operator": "*",
                  "right": Node {
                    "end": 1,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 1,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "1",
                    "start": 0,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
      ],
    ],
    "Binary expression 2 * 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Node {
                  "end": 1,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 1,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "2",
                  "start": 0,
                  "type": "Literal",
                  "value": 2,
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
        "right",
      ],
    ],
    "Binary expression 2 * 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 3,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 5,
                  },
                },
                "operator": "*",
                "right": Node {
                  "end": 1,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 1,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "2",
                  "start": 0,
                  "type": "Literal",
                  "value": 2,
                },
                "type": "BinaryExpression",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
      ],
    ],
    "Binary expression 3 * 2 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Node {
                "end": 1,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 1,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "6",
                "start": 0,
                "type": "Literal",
                "value": 6,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
        "right",
      ],
    ],
    "Binary expression 3 * 2 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 4,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 5,
                },
                "start": Position {
                  "column": 8,
                  "line": 5,
                },
              },
              "operator": "*",
              "right": Node {
                "end": 1,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 1,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "6",
                "start": 0,
                "type": "Literal",
                "value": 6,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Binary expression 4 * 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 2,
              "loc": SourceLocation {
                "end": Position {
                  "column": 2,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "24",
              "start": 0,
              "type": "Literal",
              "value": 24,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Binary expression 4 * 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 5,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 5,
              },
              "start": Position {
                "column": 8,
                "line": 5,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 2,
              "loc": SourceLocation {
                "end": Position {
                  "column": 2,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "24",
              "start": 0,
              "type": "Literal",
              "value": 24,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 5 * 24 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 3,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "120",
            "start": 0,
            "type": "Literal",
            "value": 120,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 5 * 24 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 3,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "120",
            "start": 0,
            "type": "Literal",
            "value": 120,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`Test basic bifunction 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "left": Node {
                    "end": 34,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 33,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 16,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "operator": "*",
                  "right": Node {
                    "end": 38,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "m",
                    "start": 37,
                    "type": "Identifier",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 13,
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 2,
              },
              "start": Position {
                "column": 11,
                "line": 2,
              },
            },
            "name": "f",
            "start": 12,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 15,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "name": "n",
              "start": 14,
              "type": "Identifier",
            },
            Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 16,
                  "line": 2,
                },
              },
              "name": "m",
              "start": 17,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 49,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 48,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "left": Node {
                      "end": 51,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 7,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 6,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 50,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 53,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "raw": "6",
                      "start": 52,
                      "type": "Literal",
                      "value": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 56,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 54,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Node {
              "end": 47,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "name": "f",
              "start": 46,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "left": Node {
                    "end": 34,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 33,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 16,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "operator": "*",
                  "right": Node {
                    "end": 38,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "m",
                    "start": 37,
                    "type": "Identifier",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 13,
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 2,
              },
              "start": Position {
                "column": 11,
                "line": 2,
              },
            },
            "name": "f",
            "start": 12,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 15,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "name": "n",
              "start": 14,
              "type": "Identifier",
            },
            Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 16,
                  "line": 2,
                },
              },
              "name": "m",
              "start": 17,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 49,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 48,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "left": Node {
                      "end": 51,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 7,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 6,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 50,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 53,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "raw": "6",
                      "start": 52,
                      "type": "Literal",
                      "value": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 56,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 54,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Node {
              "end": 47,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "name": "f",
              "start": 46,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Function f declared, parameter(s) n,m required",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 49,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 48,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "left": Node {
                      "end": 51,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 7,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 6,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 50,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 53,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "raw": "6",
                      "start": 52,
                      "type": "Literal",
                      "value": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 56,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 54,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "callee",
      ],
    ],
    "Function f declared, parameter(s) n,m required",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 49,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 48,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "left": Node {
                      "end": 51,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 7,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 6,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 50,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 53,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "raw": "6",
                      "start": 52,
                      "type": "Literal",
                      "value": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 56,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 54,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
        "left",
        "right",
      ],
    ],
    "Binary expression 1 * 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 49,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 48,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Node {
                    "end": 1,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 1,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "6",
                    "start": 0,
                    "type": "Literal",
                    "value": 6,
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 56,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 54,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
        "left",
        "right",
      ],
    ],
    "Binary expression 1 * 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 49,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 48,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Node {
                    "end": 1,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 1,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "6",
                    "start": 0,
                    "type": "Literal",
                    "value": 6,
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 56,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 54,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
        "left",
      ],
    ],
    "Binary expression 5 + 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Node {
                  "end": 2,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 2,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "11",
                  "start": 0,
                  "type": "Literal",
                  "value": 11,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 56,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 54,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
        "left",
      ],
    ],
    "Binary expression 5 + 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Node {
                  "end": 2,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 2,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "11",
                  "start": 0,
                  "type": "Literal",
                  "value": 11,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 56,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 54,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
      ],
    ],
    "Binary expression 11 - 40 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "argument": Node {
                  "end": 3,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 1,
                      "line": 1,
                    },
                  },
                  "raw": "29",
                  "start": 1,
                  "type": "Literal",
                  "value": 29,
                },
                "end": 3,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "operator": "-",
                "prefix": true,
                "start": 0,
                "type": "UnaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
      ],
    ],
    "Binary expression 11 - 40 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "argument": Node {
                  "end": 3,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 1,
                      "line": 1,
                    },
                  },
                  "raw": "29",
                  "start": 1,
                  "type": "Literal",
                  "value": 29,
                },
                "end": 3,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "operator": "-",
                "prefix": true,
                "start": 0,
                "type": "UnaryExpression",
              },
              Object {
                "left": Node {
                  "end": 59,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 5,
                    },
                  },
                  "raw": "2",
                  "start": 58,
                  "type": "Literal",
                  "value": 2,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 17,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 61,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 5,
                    },
                  },
                  "raw": "5",
                  "start": 60,
                  "type": "Literal",
                  "value": 5,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[1]",
      ],
    ],
    "Binary expression 2 - 5 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "argument": Node {
                  "end": 3,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 1,
                      "line": 1,
                    },
                  },
                  "raw": "29",
                  "start": 1,
                  "type": "Literal",
                  "value": 29,
                },
                "end": 3,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "operator": "-",
                "prefix": true,
                "start": 0,
                "type": "UnaryExpression",
              },
              Node {
                "argument": Node {
                  "end": 2,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 2,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 1,
                      "line": 1,
                    },
                  },
                  "raw": "3",
                  "start": 1,
                  "type": "Literal",
                  "value": 3,
                },
                "end": 2,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 2,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "operator": "-",
                "prefix": true,
                "start": 0,
                "type": "UnaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[1]",
      ],
    ],
    "Binary expression 2 - 5 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "argument": Node {
                  "end": 3,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 1,
                      "line": 1,
                    },
                  },
                  "raw": "29",
                  "start": 1,
                  "type": "Literal",
                  "value": 29,
                },
                "end": 3,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "operator": "-",
                "prefix": true,
                "start": 0,
                "type": "UnaryExpression",
              },
              Node {
                "argument": Node {
                  "end": 2,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 2,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 1,
                      "line": 1,
                    },
                  },
                  "raw": "3",
                  "start": 1,
                  "type": "Literal",
                  "value": 3,
                },
                "end": 2,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 2,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "operator": "-",
                "prefix": true,
                "start": 0,
                "type": "UnaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "left": Node {
                        "end": 34,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 33,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 16,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "operator": "*",
                      "right": Node {
                        "end": 38,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "m",
                        "start": 37,
                        "type": "Identifier",
                      },
                      "type": "BinaryExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
                Node {
                  "end": 18,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 16,
                      "line": 2,
                    },
                  },
                  "name": "m",
                  "start": 17,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 18,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Function f takes in -29,-3 as input n,m",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "argument": Node {
                "end": 3,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 1,
                    "line": 1,
                  },
                },
                "raw": "29",
                "start": 1,
                "type": "Literal",
                "value": 29,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "operator": "-",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 3,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Object {
              "argument": Node {
                "end": 2,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 2,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 1,
                    "line": 1,
                  },
                },
                "raw": "3",
                "start": 1,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 2,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "operator": "-",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Function f takes in -29,-3 as input n,m",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "argument": Node {
                "end": 3,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 1,
                    "line": 1,
                  },
                },
                "raw": "29",
                "start": 1,
                "type": "Literal",
                "value": 29,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "operator": "-",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 16,
                "line": 3,
              },
              "start": Position {
                "column": 11,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Object {
              "argument": Node {
                "end": 2,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 2,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 1,
                    "line": 1,
                  },
                },
                "raw": "3",
                "start": 1,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 2,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "operator": "-",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression -29 * -3 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 2,
            "loc": SourceLocation {
              "end": Position {
                "column": 2,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "87",
            "start": 0,
            "type": "Literal",
            "value": 87,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression -29 * -3 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 2,
            "loc": SourceLocation {
              "end": Position {
                "column": 2,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "87",
            "start": 0,
            "type": "Literal",
            "value": 87,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`Test basic function 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Node {
                  "end": 31,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "name": "n",
                  "start": 30,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 13,
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 2,
              },
              "start": Position {
                "column": 11,
                "line": 2,
              },
            },
            "name": "f",
            "start": 12,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 15,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "name": "n",
              "start": 14,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 42,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 41,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "left": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 7,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 6,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 43,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "raw": "6",
                      "start": 45,
                      "type": "Literal",
                      "value": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 49,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 47,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Node {
              "end": 40,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "name": "f",
              "start": 39,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Node {
                  "end": 31,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "name": "n",
                  "start": 30,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 3,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 13,
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 2,
              },
              "start": Position {
                "column": 11,
                "line": 2,
              },
            },
            "name": "f",
            "start": 12,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 15,
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "name": "n",
              "start": 14,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 42,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 41,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "left": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 7,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 6,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 43,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "raw": "6",
                      "start": 45,
                      "type": "Literal",
                      "value": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 49,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 47,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Node {
              "end": 40,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 5,
                },
                "start": Position {
                  "column": 2,
                  "line": 5,
                },
              },
              "name": "f",
              "start": 39,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Function f declared, parameter(s) n required",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 42,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 41,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "left": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 7,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 6,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 43,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "raw": "6",
                      "start": 45,
                      "type": "Literal",
                      "value": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 49,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 47,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Node {
                      "end": 31,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 30,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "callee",
      ],
    ],
    "Function f declared, parameter(s) n required",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 42,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 41,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "left": Node {
                      "end": 44,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 7,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 6,
                          "line": 5,
                        },
                      },
                      "raw": "1",
                      "start": 43,
                      "type": "Literal",
                      "value": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 6,
                        "line": 5,
                      },
                    },
                    "operator": "*",
                    "right": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 9,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 8,
                          "line": 5,
                        },
                      },
                      "raw": "6",
                      "start": 45,
                      "type": "Literal",
                      "value": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 49,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 47,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Node {
                      "end": 31,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 30,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
        "left",
        "right",
      ],
    ],
    "Binary expression 1 * 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 42,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 41,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Node {
                    "end": 1,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 1,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "6",
                    "start": 0,
                    "type": "Literal",
                    "value": 6,
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 49,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 47,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Node {
                      "end": 31,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 30,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
        "left",
        "right",
      ],
    ],
    "Binary expression 1 * 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "left": Node {
                    "end": 42,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 5,
                        "line": 5,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 5,
                      },
                    },
                    "raw": "5",
                    "start": 41,
                    "type": "Literal",
                    "value": 5,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 5,
                    },
                  },
                  "operator": "+",
                  "right": Node {
                    "end": 1,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 1,
                        "line": 1,
                      },
                      "start": Position {
                        "column": 0,
                        "line": 1,
                      },
                    },
                    "raw": "6",
                    "start": 0,
                    "type": "Literal",
                    "value": 6,
                  },
                  "type": "BinaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 49,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 47,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Node {
                      "end": 31,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 30,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
        "left",
      ],
    ],
    "Binary expression 5 + 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Node {
                  "end": 2,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 2,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "11",
                  "start": 0,
                  "type": "Literal",
                  "value": 11,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 49,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 47,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Node {
                      "end": 31,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 30,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
        "left",
      ],
    ],
    "Binary expression 5 + 6 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Node {
                  "end": 2,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 2,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "11",
                  "start": 0,
                  "type": "Literal",
                  "value": 11,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 5,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 49,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 5,
                    },
                    "start": Position {
                      "column": 10,
                      "line": 5,
                    },
                  },
                  "raw": "40",
                  "start": 47,
                  "type": "Literal",
                  "value": 40,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Node {
                      "end": 31,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 30,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
      ],
    ],
    "Binary expression 11 - 40 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "argument": Node {
                  "end": 3,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 1,
                      "line": 1,
                    },
                  },
                  "raw": "29",
                  "start": 1,
                  "type": "Literal",
                  "value": 29,
                },
                "end": 3,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "operator": "-",
                "prefix": true,
                "start": 0,
                "type": "UnaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Node {
                      "end": 31,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 30,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
      ],
    ],
    "Binary expression 11 - 40 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "argument": Node {
                  "end": 3,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 1,
                      "line": 1,
                    },
                  },
                  "raw": "29",
                  "start": 1,
                  "type": "Literal",
                  "value": 29,
                },
                "end": 3,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "operator": "-",
                "prefix": true,
                "start": 0,
                "type": "UnaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Node {
                      "end": 31,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 30,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 13,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 3,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 12,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 15,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 14,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 13,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 14,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 5,
              },
              "start": Position {
                "column": 2,
                "line": 5,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Function f takes in -29 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "argument": Node {
              "end": 3,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 1,
                },
                "start": Position {
                  "column": 1,
                  "line": 1,
                },
              },
              "raw": "29",
              "start": 1,
              "type": "Literal",
              "value": 29,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "operator": "-",
            "prefix": true,
            "type": "UnaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Function f takes in -29 as input n",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "argument": Node {
              "end": 3,
              "loc": SourceLocation {
                "end": Position {
                  "column": 3,
                  "line": 1,
                },
                "start": Position {
                  "column": 1,
                  "line": 1,
                },
              },
              "raw": "29",
              "start": 1,
              "type": "Literal",
              "value": 29,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "operator": "-",
            "prefix": true,
            "type": "UnaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`Test basic substitution 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "left": Node {
                "end": 7,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 5,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 6,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 5,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 10,
                "type": "Literal",
                "value": 2,
              },
              "type": "BinaryExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 17,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "3",
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "raw": "4",
                "start": 20,
                "type": "Literal",
                "value": 4,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "left": Node {
                "end": 7,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 5,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 6,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 5,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 10,
                "type": "Literal",
                "value": 2,
              },
              "type": "BinaryExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 17,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "3",
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "raw": "4",
                "start": 20,
                "type": "Literal",
                "value": 4,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Binary expression 1 + 2 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 17,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "3",
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "raw": "4",
                "start": 20,
                "type": "Literal",
                "value": 4,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Binary expression 1 + 2 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 17,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "3",
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "raw": "4",
                "start": 20,
                "type": "Literal",
                "value": 4,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Binary expression 3 + 4 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "7",
              "start": 0,
              "type": "Literal",
              "value": 7,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Binary expression 3 + 4 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "7",
              "start": 0,
              "type": "Literal",
              "value": 7,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 3 * 7 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 2,
            "loc": SourceLocation {
              "end": Position {
                "column": 2,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "21",
            "start": 0,
            "type": "Literal",
            "value": 21,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 3 * 7 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 2,
            "loc": SourceLocation {
              "end": Position {
                "column": 2,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "21",
            "start": 0,
            "type": "Literal",
            "value": 21,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`Test binary operator error 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "left": Node {
                "end": 7,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 5,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 6,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 5,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 10,
                "type": "Literal",
                "value": 2,
              },
              "type": "BinaryExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 30,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 19,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "'a'",
                "start": 16,
                "type": "Literal",
                "value": "a",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 29,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 30,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 29,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 21,
                    "line": 2,
                  },
                },
                "raw": "'string'",
                "start": 22,
                "type": "Literal",
                "value": "string",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "left": Node {
                "end": 7,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 5,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 6,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 5,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 10,
                "type": "Literal",
                "value": 2,
              },
              "type": "BinaryExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 30,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 19,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "'a'",
                "start": 16,
                "type": "Literal",
                "value": "a",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 29,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 30,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 29,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 21,
                    "line": 2,
                  },
                },
                "raw": "'string'",
                "start": 22,
                "type": "Literal",
                "value": "string",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Binary expression 1 + 2 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 30,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 19,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "'a'",
                "start": 16,
                "type": "Literal",
                "value": "a",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 29,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 30,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 29,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 21,
                    "line": 2,
                  },
                },
                "raw": "'string'",
                "start": 22,
                "type": "Literal",
                "value": "string",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Binary expression 1 + 2 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 30,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 19,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 18,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "'a'",
                "start": 16,
                "type": "Literal",
                "value": "a",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 29,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 30,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 29,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 21,
                    "line": 2,
                  },
                },
                "raw": "'string'",
                "start": 22,
                "type": "Literal",
                "value": "string",
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Binary expression 'a' + 'string' evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 30,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 9,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "\\"astring\\"",
              "start": 0,
              "type": "Literal",
              "value": "astring",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Binary expression 'a' + 'string' evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 30,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 9,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "\\"astring\\"",
              "start": 0,
              "type": "Literal",
              "value": "astring",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "",
  ],
]
`;

exports[`Test ternary operator 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Node {
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "name": "anotherGarbage",
              "start": 55,
              "type": "Identifier",
            },
            "consequent": Object {
              "alternate": Node {
                "end": 48,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 32,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 24,
                    "line": 3,
                  },
                },
                "name": "Infinity",
                "start": 40,
                "type": "Identifier",
              },
              "consequent": Node {
                "end": 37,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 21,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "garbage",
                "start": 30,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 32,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "test": Node {
                "end": 27,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 3,
                  },
                },
                "raw": "false",
                "start": 22,
                "type": "Literal",
                "value": false,
              },
              "type": "ConditionalExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "test": Object {
              "left": Object {
                "left": Node {
                  "end": 4,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 3,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 8,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 2,
                  },
                },
                "operator": "+",
                "right": Object {
                  "argument": Node {
                    "end": 9,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 8,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 7,
                        "line": 2,
                      },
                    },
                    "raw": "1",
                    "start": 8,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 8,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 2,
                    },
                  },
                  "operator": "-",
                  "prefix": true,
                  "type": "UnaryExpression",
                },
                "type": "BinaryExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "raw": "0",
                "start": 14,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Node {
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "name": "anotherGarbage",
              "start": 55,
              "type": "Identifier",
            },
            "consequent": Object {
              "alternate": Node {
                "end": 48,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 32,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 24,
                    "line": 3,
                  },
                },
                "name": "Infinity",
                "start": 40,
                "type": "Identifier",
              },
              "consequent": Node {
                "end": 37,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 21,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "garbage",
                "start": 30,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 32,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "test": Node {
                "end": 27,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 3,
                  },
                },
                "raw": "false",
                "start": 22,
                "type": "Literal",
                "value": false,
              },
              "type": "ConditionalExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "test": Object {
              "left": Object {
                "left": Node {
                  "end": 4,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 3,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 8,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 2,
                  },
                },
                "operator": "+",
                "right": Object {
                  "argument": Node {
                    "end": 9,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 8,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 7,
                        "line": 2,
                      },
                    },
                    "raw": "1",
                    "start": 8,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 8,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 6,
                      "line": 2,
                    },
                  },
                  "operator": "-",
                  "prefix": true,
                  "type": "UnaryExpression",
                },
                "type": "BinaryExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "raw": "0",
                "start": 14,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "test",
        "left",
      ],
    ],
    "Binary expression 1 + -1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Node {
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "name": "anotherGarbage",
              "start": 55,
              "type": "Identifier",
            },
            "consequent": Object {
              "alternate": Node {
                "end": 48,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 32,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 24,
                    "line": 3,
                  },
                },
                "name": "Infinity",
                "start": 40,
                "type": "Identifier",
              },
              "consequent": Node {
                "end": 37,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 21,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "garbage",
                "start": 30,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 32,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "test": Node {
                "end": 27,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 3,
                  },
                },
                "raw": "false",
                "start": 22,
                "type": "Literal",
                "value": false,
              },
              "type": "ConditionalExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "test": Object {
              "left": Node {
                "end": 1,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 1,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "0",
                "start": 0,
                "type": "Literal",
                "value": 0,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "raw": "0",
                "start": 14,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "test",
        "left",
      ],
    ],
    "Binary expression 1 + -1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Node {
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "name": "anotherGarbage",
              "start": 55,
              "type": "Identifier",
            },
            "consequent": Object {
              "alternate": Node {
                "end": 48,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 32,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 24,
                    "line": 3,
                  },
                },
                "name": "Infinity",
                "start": 40,
                "type": "Identifier",
              },
              "consequent": Node {
                "end": 37,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 21,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "garbage",
                "start": 30,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 32,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "test": Node {
                "end": 27,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 3,
                  },
                },
                "raw": "false",
                "start": 22,
                "type": "Literal",
                "value": false,
              },
              "type": "ConditionalExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "test": Object {
              "left": Node {
                "end": 1,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 1,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "0",
                "start": 0,
                "type": "Literal",
                "value": 0,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 14,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "raw": "0",
                "start": 14,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "test",
      ],
    ],
    "Binary expression 0 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Node {
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "name": "anotherGarbage",
              "start": 55,
              "type": "Identifier",
            },
            "consequent": Object {
              "alternate": Node {
                "end": 48,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 32,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 24,
                    "line": 3,
                  },
                },
                "name": "Infinity",
                "start": 40,
                "type": "Identifier",
              },
              "consequent": Node {
                "end": 37,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 21,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "garbage",
                "start": 30,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 32,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "test": Node {
                "end": 27,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 3,
                  },
                },
                "raw": "false",
                "start": 22,
                "type": "Literal",
                "value": false,
              },
              "type": "ConditionalExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "test": Node {
              "end": 4,
              "loc": SourceLocation {
                "end": Position {
                  "column": 4,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "true",
              "start": 0,
              "type": "Literal",
              "value": true,
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "test",
      ],
    ],
    "Binary expression 0 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Node {
              "end": 69,
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "name": "anotherGarbage",
              "start": 55,
              "type": "Identifier",
            },
            "consequent": Object {
              "alternate": Node {
                "end": 48,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 32,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 24,
                    "line": 3,
                  },
                },
                "name": "Infinity",
                "start": 40,
                "type": "Identifier",
              },
              "consequent": Node {
                "end": 37,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 21,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "garbage",
                "start": 30,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 32,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "test": Node {
                "end": 27,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 3,
                  },
                },
                "raw": "false",
                "start": 22,
                "type": "Literal",
                "value": false,
              },
              "type": "ConditionalExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "test": Node {
              "end": 4,
              "loc": SourceLocation {
                "end": Position {
                  "column": 4,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "true",
              "start": 0,
              "type": "Literal",
              "value": true,
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Conditional expression evaluated, condition is true, consequent evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Node {
              "end": 48,
              "loc": SourceLocation {
                "end": Position {
                  "column": 32,
                  "line": 3,
                },
                "start": Position {
                  "column": 24,
                  "line": 3,
                },
              },
              "name": "Infinity",
              "start": 40,
              "type": "Identifier",
            },
            "consequent": Node {
              "end": 37,
              "loc": SourceLocation {
                "end": Position {
                  "column": 21,
                  "line": 3,
                },
                "start": Position {
                  "column": 14,
                  "line": 3,
                },
              },
              "name": "garbage",
              "start": 30,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 32,
                "line": 3,
              },
              "start": Position {
                "column": 6,
                "line": 3,
              },
            },
            "test": Node {
              "end": 27,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "raw": "false",
              "start": 22,
              "type": "Literal",
              "value": false,
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Conditional expression evaluated, condition is true, consequent evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Node {
              "end": 48,
              "loc": SourceLocation {
                "end": Position {
                  "column": 32,
                  "line": 3,
                },
                "start": Position {
                  "column": 24,
                  "line": 3,
                },
              },
              "name": "Infinity",
              "start": 40,
              "type": "Identifier",
            },
            "consequent": Node {
              "end": 37,
              "loc": SourceLocation {
                "end": Position {
                  "column": 21,
                  "line": 3,
                },
                "start": Position {
                  "column": 14,
                  "line": 3,
                },
              },
              "name": "garbage",
              "start": 30,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 32,
                "line": 3,
              },
              "start": Position {
                "column": 6,
                "line": 3,
              },
            },
            "test": Node {
              "end": 27,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "raw": "false",
              "start": 22,
              "type": "Literal",
              "value": false,
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 48,
            "loc": SourceLocation {
              "end": Position {
                "column": 32,
                "line": 3,
              },
              "start": Position {
                "column": 24,
                "line": 3,
              },
            },
            "name": "Infinity",
            "start": 40,
            "type": "Identifier",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Conditional expression evaluated, condition is false, alternate evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 48,
            "loc": SourceLocation {
              "end": Position {
                "column": 32,
                "line": 3,
              },
              "start": Position {
                "column": 24,
                "line": 3,
              },
            },
            "name": "Infinity",
            "start": 40,
            "type": "Identifier",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`Test two statement substitution 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "left": Node {
                "end": 7,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 5,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 6,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 5,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 10,
                "type": "Literal",
                "value": 2,
              },
              "type": "BinaryExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 17,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "3",
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "raw": "4",
                "start": 20,
                "type": "Literal",
                "value": 4,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "left": Node {
                "end": 7,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 6,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 5,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 6,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 5,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 2,
                  },
                },
                "raw": "2",
                "start": 10,
                "type": "Literal",
                "value": 2,
              },
              "type": "BinaryExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 17,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "3",
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "raw": "4",
                "start": 20,
                "type": "Literal",
                "value": 4,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Binary expression 1 + 2 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 17,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "3",
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "raw": "4",
                "start": 20,
                "type": "Literal",
                "value": 4,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Binary expression 1 + 2 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Object {
              "left": Node {
                "end": 17,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 15,
                    "line": 2,
                  },
                },
                "raw": "3",
                "start": 16,
                "type": "Literal",
                "value": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "operator": "+",
              "right": Node {
                "end": 21,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "raw": "4",
                "start": 20,
                "type": "Literal",
                "value": 4,
              },
              "type": "BinaryExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Binary expression 3 + 4 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "7",
              "start": 0,
              "type": "Literal",
              "value": 7,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "right",
      ],
    ],
    "Binary expression 3 + 4 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "3",
              "start": 0,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 1,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "7",
              "start": 0,
              "type": "Literal",
              "value": 7,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 3 * 7 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 2,
            "loc": SourceLocation {
              "end": Position {
                "column": 2,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "21",
            "start": 0,
            "type": "Literal",
            "value": 21,
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 3 * 7 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 2,
            "loc": SourceLocation {
              "end": Position {
                "column": 2,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "21",
            "start": 0,
            "type": "Literal",
            "value": 21,
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "21 finished evaluating",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [],
    ],
    "21 finished evaluating",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 29,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "raw": "3",
              "start": 28,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "*",
            "right": Node {
              "end": 33,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 3,
                },
                "start": Position {
                  "column": 8,
                  "line": 3,
                },
              },
              "raw": "5",
              "start": 32,
              "type": "Literal",
              "value": 5,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 3 * 5 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 2,
            "loc": SourceLocation {
              "end": Position {
                "column": 2,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "15",
            "start": 0,
            "type": "Literal",
            "value": 15,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 3 * 5 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 2,
            "loc": SourceLocation {
              "end": Position {
                "column": 2,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "15",
            "start": 0,
            "type": "Literal",
            "value": 15,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`Test unary and binary boolean operations 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "argument": Object {
                "argument": Object {
                  "argument": Node {
                    "end": 10,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 5,
                        "line": 2,
                      },
                    },
                    "raw": "true",
                    "start": 6,
                    "type": "Literal",
                    "value": true,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 2,
                    },
                  },
                  "operator": "!",
                  "prefix": true,
                  "type": "UnaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 3,
                    "line": 2,
                  },
                },
                "operator": "!",
                "prefix": true,
                "type": "UnaryExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "!",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "raw": "true",
              "start": 14,
              "type": "Literal",
              "value": true,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "argument": Object {
                "argument": Object {
                  "argument": Node {
                    "end": 10,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 9,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 5,
                        "line": 2,
                      },
                    },
                    "raw": "true",
                    "start": 6,
                    "type": "Literal",
                    "value": true,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 9,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 4,
                      "line": 2,
                    },
                  },
                  "operator": "!",
                  "prefix": true,
                  "type": "UnaryExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 3,
                    "line": 2,
                  },
                },
                "operator": "!",
                "prefix": true,
                "type": "UnaryExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "!",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "raw": "true",
              "start": 14,
              "type": "Literal",
              "value": true,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
        "argument",
        "argument",
      ],
    ],
    "Unary expression evaluated, boolean true negated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "argument": Object {
                "argument": Node {
                  "end": 5,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 5,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "false",
                  "start": 0,
                  "type": "Literal",
                  "value": false,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 3,
                    "line": 2,
                  },
                },
                "operator": "!",
                "prefix": true,
                "type": "UnaryExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "!",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "raw": "true",
              "start": 14,
              "type": "Literal",
              "value": true,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
        "argument",
        "argument",
      ],
    ],
    "Unary expression evaluated, boolean true negated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "argument": Object {
                "argument": Node {
                  "end": 5,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 5,
                      "line": 1,
                    },
                    "start": Position {
                      "column": 0,
                      "line": 1,
                    },
                  },
                  "raw": "false",
                  "start": 0,
                  "type": "Literal",
                  "value": false,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 3,
                    "line": 2,
                  },
                },
                "operator": "!",
                "prefix": true,
                "type": "UnaryExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "!",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "raw": "true",
              "start": 14,
              "type": "Literal",
              "value": true,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
        "argument",
      ],
    ],
    "Unary expression evaluated, boolean false negated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "argument": Node {
                "end": 4,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 4,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "true",
                "start": 0,
                "type": "Literal",
                "value": true,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "!",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "raw": "true",
              "start": 14,
              "type": "Literal",
              "value": true,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
        "argument",
      ],
    ],
    "Unary expression evaluated, boolean false negated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "argument": Node {
                "end": 4,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 4,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "true",
                "start": 0,
                "type": "Literal",
                "value": true,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "operator": "!",
              "prefix": true,
              "type": "UnaryExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "raw": "true",
              "start": 14,
              "type": "Literal",
              "value": true,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Unary expression evaluated, boolean true negated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 5,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "false",
              "start": 0,
              "type": "Literal",
              "value": false,
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "raw": "true",
              "start": 14,
              "type": "Literal",
              "value": true,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Unary expression evaluated, boolean true negated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 5,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "false",
              "start": 0,
              "type": "Literal",
              "value": false,
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 13,
                  "line": 2,
                },
              },
              "raw": "true",
              "start": 14,
              "type": "Literal",
              "value": true,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "OR operation evaluated, left of operator is false, continue evaluating right of operator",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 18,
            "loc": SourceLocation {
              "end": Position {
                "column": 17,
                "line": 2,
              },
              "start": Position {
                "column": 13,
                "line": 2,
              },
            },
            "raw": "true",
            "start": 14,
            "type": "Literal",
            "value": true,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "OR operation evaluated, left of operator is false, continue evaluating right of operator",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 18,
            "loc": SourceLocation {
              "end": Position {
                "column": 17,
                "line": 2,
              },
              "start": Position {
                "column": 13,
                "line": 2,
              },
            },
            "raw": "true",
            "start": 14,
            "type": "Literal",
            "value": true,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`assign undefined 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 10,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 9,
                "type": "Identifier",
              },
              "init": Object {
                "name": "undefined",
                "type": "Identifier",
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "expression": Node {
            "end": 27,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 3,
              },
              "start": Position {
                "column": 2,
                "line": 3,
              },
            },
            "name": "a",
            "start": 26,
            "type": "Identifier",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 10,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 9,
                "type": "Identifier",
              },
              "init": Object {
                "name": "undefined",
                "type": "Identifier",
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "expression": Node {
            "end": 27,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 3,
              },
              "start": Position {
                "column": 2,
                "line": 3,
              },
            },
            "name": "a",
            "start": 26,
            "type": "Identifier",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Constant a declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "name": "undefined",
            "type": "Identifier",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Constant a declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "name": "undefined",
            "type": "Identifier",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`builtins return identifiers 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [],
            "callee": Node {
              "end": 11,
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "name": "math_sin",
              "start": 3,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [],
            "callee": Node {
              "end": 11,
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "name": "math_sin",
              "start": 3,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "math_sin runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 3,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "name": "NaN",
            "start": 0,
            "type": "Identifier",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "math_sin runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 3,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "name": "NaN",
            "start": 0,
            "type": "Identifier",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`const declarations in blocks subst into call expressions 1`] = `
"const z = 1;
function f(g) {
  const z = 3;
  return (y => z + z)(z);
}
f(undefined);

const z = 1;
function f(g) {
  const z = 3;
  return (y => z + z)(z);
}
f(undefined);

function f(g) {
  const z = 3;
  return (y => z + z)(z);
}
f(undefined);

function f(g) {
  const z = 3;
  return (y => z + z)(z);
}
f(undefined);

f(undefined);

f(undefined);

{
  const z = 3;
  return (y => z + z)(z);
};

{
  const z = 3;
  return (y => z + z)(z);
};

{
  return (y => 3 + 3)(3);
};

{
  return (y => 3 + 3)(3);
};

(y => 3 + 3)(3);

(y => 3 + 3)(3);

3 + 3;

3 + 3;

6;

6;
"
`;

exports[`constant declarations in blocks are protected 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 12,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 2,
                  },
                },
                "name": "z",
                "start": 11,
                "type": "Identifier",
              },
              "init": Node {
                "end": 16,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 15,
                "type": "Literal",
                "value": 1,
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "body": Object {
            "body": Array [
              Object {
                "declarations": Array [
                  Object {
                    "id": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 5,
                        },
                      },
                      "name": "z",
                      "start": 45,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 50,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 5,
                        },
                      },
                      "raw": "3",
                      "start": 49,
                      "type": "Literal",
                      "value": 3,
                    },
                    "loc": undefined,
                    "type": "VariableDeclarator",
                  },
                ],
                "kind": "const",
                "loc": undefined,
                "type": "VariableDeclaration",
              },
              Object {
                "argument": Object {
                  "arguments": Array [
                    Node {
                      "end": 66,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 14,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 13,
                          "line": 6,
                        },
                      },
                      "name": "z",
                      "start": 65,
                      "type": "Identifier",
                    },
                  ],
                  "callee": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 6,
                      },
                    },
                    "name": "g",
                    "start": 63,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 6,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 29,
            "loc": SourceLocation {
              "end": Position {
                "column": 10,
                "line": 4,
              },
              "start": Position {
                "column": 9,
                "line": 4,
              },
            },
            "name": "f",
            "start": 28,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 31,
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 4,
                },
                "start": Position {
                  "column": 11,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 30,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "body": Object {
                  "left": Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 8,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 7,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 79,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 7,
                      "line": 9,
                    },
                  },
                  "operator": "+",
                  "right": Node {
                    "end": 84,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 9,
                      },
                    },
                    "name": "z",
                    "start": 83,
                    "type": "Identifier",
                  },
                  "type": "BinaryExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 75,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 3,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 2,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 74,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
            ],
            "callee": Node {
              "end": 73,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 9,
                },
                "start": Position {
                  "column": 0,
                  "line": 9,
                },
              },
              "name": "f",
              "start": 72,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 9,
              },
              "start": Position {
                "column": 0,
                "line": 9,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 12,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 2,
                  },
                },
                "name": "z",
                "start": 11,
                "type": "Identifier",
              },
              "init": Node {
                "end": 16,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 15,
                "type": "Literal",
                "value": 1,
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "body": Object {
            "body": Array [
              Object {
                "declarations": Array [
                  Object {
                    "id": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 5,
                        },
                      },
                      "name": "z",
                      "start": 45,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 50,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 5,
                        },
                      },
                      "raw": "3",
                      "start": 49,
                      "type": "Literal",
                      "value": 3,
                    },
                    "loc": undefined,
                    "type": "VariableDeclarator",
                  },
                ],
                "kind": "const",
                "loc": undefined,
                "type": "VariableDeclaration",
              },
              Object {
                "argument": Object {
                  "arguments": Array [
                    Node {
                      "end": 66,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 14,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 13,
                          "line": 6,
                        },
                      },
                      "name": "z",
                      "start": 65,
                      "type": "Identifier",
                    },
                  ],
                  "callee": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 6,
                      },
                    },
                    "name": "g",
                    "start": 63,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 6,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 29,
            "loc": SourceLocation {
              "end": Position {
                "column": 10,
                "line": 4,
              },
              "start": Position {
                "column": 9,
                "line": 4,
              },
            },
            "name": "f",
            "start": 28,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 31,
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 4,
                },
                "start": Position {
                  "column": 11,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 30,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "body": Object {
                  "left": Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 8,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 7,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 79,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 7,
                      "line": 9,
                    },
                  },
                  "operator": "+",
                  "right": Node {
                    "end": 84,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 9,
                      },
                    },
                    "name": "z",
                    "start": 83,
                    "type": "Identifier",
                  },
                  "type": "BinaryExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 75,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 3,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 2,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 74,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
            ],
            "callee": Node {
              "end": 73,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 9,
                },
                "start": Position {
                  "column": 0,
                  "line": 9,
                },
              },
              "name": "f",
              "start": 72,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 9,
              },
              "start": Position {
                "column": 0,
                "line": 9,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Constant z declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "declarations": Array [
                  Object {
                    "id": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 5,
                        },
                      },
                      "name": "z",
                      "start": 45,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 50,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 5,
                        },
                      },
                      "raw": "3",
                      "start": 49,
                      "type": "Literal",
                      "value": 3,
                    },
                    "loc": undefined,
                    "type": "VariableDeclarator",
                  },
                ],
                "kind": "const",
                "loc": undefined,
                "type": "VariableDeclaration",
              },
              Object {
                "argument": Object {
                  "arguments": Array [
                    Node {
                      "end": 66,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 14,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 13,
                          "line": 6,
                        },
                      },
                      "name": "z",
                      "start": 65,
                      "type": "Identifier",
                    },
                  ],
                  "callee": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 6,
                      },
                    },
                    "name": "g",
                    "start": 63,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 6,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 29,
            "loc": SourceLocation {
              "end": Position {
                "column": 10,
                "line": 4,
              },
              "start": Position {
                "column": 9,
                "line": 4,
              },
            },
            "name": "f",
            "start": 28,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 31,
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 4,
                },
                "start": Position {
                  "column": 11,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 30,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "body": Object {
                  "left": Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 8,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 7,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 79,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 7,
                      "line": 9,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 75,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 3,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 2,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 74,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
            ],
            "callee": Node {
              "end": 73,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 9,
                },
                "start": Position {
                  "column": 0,
                  "line": 9,
                },
              },
              "name": "f",
              "start": 72,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 9,
              },
              "start": Position {
                "column": 0,
                "line": 9,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[1]",
        "expression",
        "arguments[0]",
        "body",
        "right",
      ],
    ],
    "Constant z declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "declarations": Array [
                  Object {
                    "id": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 5,
                        },
                      },
                      "name": "z",
                      "start": 45,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 50,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 5,
                        },
                      },
                      "raw": "3",
                      "start": 49,
                      "type": "Literal",
                      "value": 3,
                    },
                    "loc": undefined,
                    "type": "VariableDeclarator",
                  },
                ],
                "kind": "const",
                "loc": undefined,
                "type": "VariableDeclaration",
              },
              Object {
                "argument": Object {
                  "arguments": Array [
                    Node {
                      "end": 66,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 14,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 13,
                          "line": 6,
                        },
                      },
                      "name": "z",
                      "start": 65,
                      "type": "Identifier",
                    },
                  ],
                  "callee": Node {
                    "end": 64,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 12,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 11,
                        "line": 6,
                      },
                    },
                    "name": "g",
                    "start": 63,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 6,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 29,
            "loc": SourceLocation {
              "end": Position {
                "column": 10,
                "line": 4,
              },
              "start": Position {
                "column": 9,
                "line": 4,
              },
            },
            "name": "f",
            "start": 28,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [
            Node {
              "end": 31,
              "loc": SourceLocation {
                "end": Position {
                  "column": 12,
                  "line": 4,
                },
                "start": Position {
                  "column": 11,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 30,
              "type": "Identifier",
            },
          ],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "body": Object {
                  "left": Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 8,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 7,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 79,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 7,
                      "line": 9,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 75,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 3,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 2,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 74,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
            ],
            "callee": Node {
              "end": 73,
              "loc": SourceLocation {
                "end": Position {
                  "column": 1,
                  "line": 9,
                },
                "start": Position {
                  "column": 0,
                  "line": 9,
                },
              },
              "name": "f",
              "start": 72,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 9,
              },
              "start": Position {
                "column": 0,
                "line": 9,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Function f declared, parameter(s) g required",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "body": Object {
                  "left": Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 8,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 7,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 79,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 7,
                      "line": 9,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 75,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 3,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 2,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 74,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "declarations": Array [
                      Object {
                        "id": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 11,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 10,
                              "line": 5,
                            },
                          },
                          "name": "z",
                          "start": 45,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 50,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 5,
                            },
                          },
                          "raw": "3",
                          "start": 49,
                          "type": "Literal",
                          "value": 3,
                        },
                        "loc": undefined,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "kind": "const",
                    "loc": undefined,
                    "type": "VariableDeclaration",
                  },
                  Object {
                    "argument": Object {
                      "arguments": Array [
                        Node {
                          "end": 66,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 6,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 6,
                            },
                          },
                          "name": "z",
                          "start": 65,
                          "type": "Identifier",
                        },
                      ],
                      "callee": Node {
                        "end": 64,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 6,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 6,
                          },
                        },
                        "name": "g",
                        "start": 63,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 6,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 6,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 29,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 4,
                  },
                },
                "name": "f",
                "start": 28,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 31,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 4,
                    },
                  },
                  "name": "g",
                  "start": 30,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 9,
              },
              "start": Position {
                "column": 0,
                "line": 9,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "callee",
      ],
    ],
    "Function f declared, parameter(s) g required",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "body": Object {
                  "left": Node {
                    "end": 80,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 8,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 7,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 79,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 7,
                      "line": 9,
                    },
                  },
                  "operator": "+",
                  "right": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 75,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 3,
                        "line": 9,
                      },
                      "start": Position {
                        "column": 2,
                        "line": 9,
                      },
                    },
                    "name": "y",
                    "start": 74,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "declarations": Array [
                      Object {
                        "id": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 11,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 10,
                              "line": 5,
                            },
                          },
                          "name": "z",
                          "start": 45,
                          "type": "Identifier",
                        },
                        "init": Node {
                          "end": 50,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 5,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 5,
                            },
                          },
                          "raw": "3",
                          "start": 49,
                          "type": "Literal",
                          "value": 3,
                        },
                        "loc": undefined,
                        "type": "VariableDeclarator",
                      },
                    ],
                    "kind": "const",
                    "loc": undefined,
                    "type": "VariableDeclaration",
                  },
                  Object {
                    "argument": Object {
                      "arguments": Array [
                        Node {
                          "end": 66,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 6,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 6,
                            },
                          },
                          "name": "z",
                          "start": 65,
                          "type": "Identifier",
                        },
                      ],
                      "callee": Node {
                        "end": 64,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 12,
                            "line": 6,
                          },
                          "start": Position {
                            "column": 11,
                            "line": 6,
                          },
                        },
                        "name": "g",
                        "start": 63,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 11,
                          "line": 6,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 6,
                      },
                      "start": Position {
                        "column": 4,
                        "line": 6,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 29,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 9,
                    "line": 4,
                  },
                },
                "name": "f",
                "start": 28,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 31,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 4,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 4,
                    },
                  },
                  "name": "g",
                  "start": 30,
                  "type": "Identifier",
                },
              ],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 13,
                "line": 9,
              },
              "start": Position {
                "column": 0,
                "line": 9,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Function f takes in y => y + 1 as input g",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "body": Array [
              Object {
                "declarations": Array [
                  Object {
                    "id": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 5,
                        },
                      },
                      "name": "z",
                      "start": 45,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 50,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 5,
                        },
                      },
                      "raw": "3",
                      "start": 49,
                      "type": "Literal",
                      "value": 3,
                    },
                    "loc": undefined,
                    "type": "VariableDeclarator",
                  },
                ],
                "kind": "const",
                "loc": undefined,
                "type": "VariableDeclaration",
              },
              Object {
                "argument": Object {
                  "arguments": Array [
                    Node {
                      "end": 66,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 14,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 13,
                          "line": 6,
                        },
                      },
                      "name": "z",
                      "start": 65,
                      "type": "Identifier",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "left": Node {
                        "end": 80,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 8,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 7,
                            "line": 9,
                          },
                        },
                        "name": "y",
                        "start": 79,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 9,
                        },
                        "start": Position {
                          "column": 7,
                          "line": 9,
                        },
                      },
                      "operator": "+",
                      "right": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 75,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 3,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 2,
                            "line": 9,
                          },
                        },
                        "name": "y",
                        "start": 74,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 6,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "loc": undefined,
            "type": "BlockExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Function f takes in y => y + 1 as input g",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "body": Array [
              Object {
                "declarations": Array [
                  Object {
                    "id": Node {
                      "end": 46,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 11,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 10,
                          "line": 5,
                        },
                      },
                      "name": "z",
                      "start": 45,
                      "type": "Identifier",
                    },
                    "init": Node {
                      "end": 50,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 15,
                          "line": 5,
                        },
                        "start": Position {
                          "column": 14,
                          "line": 5,
                        },
                      },
                      "raw": "3",
                      "start": 49,
                      "type": "Literal",
                      "value": 3,
                    },
                    "loc": undefined,
                    "type": "VariableDeclarator",
                  },
                ],
                "kind": "const",
                "loc": undefined,
                "type": "VariableDeclaration",
              },
              Object {
                "argument": Object {
                  "arguments": Array [
                    Node {
                      "end": 66,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 14,
                          "line": 6,
                        },
                        "start": Position {
                          "column": 13,
                          "line": 6,
                        },
                      },
                      "name": "z",
                      "start": 65,
                      "type": "Identifier",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "left": Node {
                        "end": 80,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 8,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 7,
                            "line": 9,
                          },
                        },
                        "name": "y",
                        "start": 79,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 9,
                        },
                        "start": Position {
                          "column": 7,
                          "line": 9,
                        },
                      },
                      "operator": "+",
                      "right": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 75,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 3,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 2,
                            "line": 9,
                          },
                        },
                        "name": "y",
                        "start": 74,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 6,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "loc": undefined,
            "type": "BlockExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "body[0]",
      ],
    ],
    "Constant z declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "arguments": Array [
                    Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 3,
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "left": Node {
                        "end": 80,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 8,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 7,
                            "line": 9,
                          },
                        },
                        "name": "y",
                        "start": 79,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 9,
                        },
                        "start": Position {
                          "column": 7,
                          "line": 9,
                        },
                      },
                      "operator": "+",
                      "right": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 75,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 3,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 2,
                            "line": 9,
                          },
                        },
                        "name": "y",
                        "start": 74,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 6,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "loc": undefined,
            "type": "BlockExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "body[0]",
        "argument",
        "arguments[0]",
      ],
    ],
    "Constant z declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "arguments": Array [
                    Object {
                      "loc": undefined,
                      "type": "Literal",
                      "value": 3,
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "left": Node {
                        "end": 80,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 8,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 7,
                            "line": 9,
                          },
                        },
                        "name": "y",
                        "start": 79,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 12,
                          "line": 9,
                        },
                        "start": Position {
                          "column": 7,
                          "line": 9,
                        },
                      },
                      "operator": "+",
                      "right": Object {
                        "loc": undefined,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 75,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 3,
                            "line": 9,
                          },
                          "start": Position {
                            "column": 2,
                            "line": 9,
                          },
                        },
                        "name": "y",
                        "start": 74,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 6,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 6,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 6,
                  },
                  "start": Position {
                    "column": 4,
                    "line": 6,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "loc": undefined,
            "type": "BlockExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "(y => y + 1)(3) returned",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 3,
              },
            ],
            "callee": Object {
              "body": Object {
                "left": Node {
                  "end": 80,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 8,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 7,
                      "line": 9,
                    },
                  },
                  "name": "y",
                  "start": 79,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 9,
                  },
                  "start": Position {
                    "column": 7,
                    "line": 9,
                  },
                },
                "operator": "+",
                "right": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 1,
                },
                "type": "BinaryExpression",
              },
              "expression": true,
              "generator": false,
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 75,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 9,
                    },
                  },
                  "name": "y",
                  "start": 74,
                  "type": "Identifier",
                },
              ],
              "type": "ArrowFunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 15,
                "line": 6,
              },
              "start": Position {
                "column": 11,
                "line": 6,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "(y => y + 1)(3) returned",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "loc": undefined,
                "type": "Literal",
                "value": 3,
              },
            ],
            "callee": Object {
              "body": Object {
                "left": Node {
                  "end": 80,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 8,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 7,
                      "line": 9,
                    },
                  },
                  "name": "y",
                  "start": 79,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 9,
                  },
                  "start": Position {
                    "column": 7,
                    "line": 9,
                  },
                },
                "operator": "+",
                "right": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 1,
                },
                "type": "BinaryExpression",
              },
              "expression": true,
              "generator": false,
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 75,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 3,
                      "line": 9,
                    },
                    "start": Position {
                      "column": 2,
                      "line": 9,
                    },
                  },
                  "name": "y",
                  "start": 74,
                  "type": "Identifier",
                },
              ],
              "type": "ArrowFunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 15,
                "line": 6,
              },
              "start": Position {
                "column": 11,
                "line": 6,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "3 substituted into y of y => y + 1",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 9,
              },
              "start": Position {
                "column": 7,
                "line": 9,
              },
            },
            "operator": "+",
            "right": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 1,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "3 substituted into y of y => y + 1",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 3,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 12,
                "line": 9,
              },
              "start": Position {
                "column": 7,
                "line": 9,
              },
            },
            "operator": "+",
            "right": Object {
              "loc": undefined,
              "type": "Literal",
              "value": 1,
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 3 + 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 1,
            "loc": SourceLocation {
              "end": Position {
                "column": 1,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "4",
            "start": 0,
            "type": "Literal",
            "value": 4,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression 3 + 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 1,
            "loc": SourceLocation {
              "end": Position {
                "column": 1,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "4",
            "start": 0,
            "type": "Literal",
            "value": 4,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`even odd mutual 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 12,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 2,
                  },
                },
                "name": "odd",
                "start": 9,
                "type": "Identifier",
              },
              "init": Object {
                "body": Object {
                  "alternate": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 45,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 44,
                              "line": 2,
                            },
                          },
                          "raw": "1",
                          "start": 45,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Node {
                      "end": 42,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 41,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 37,
                          "line": 2,
                        },
                      },
                      "name": "even",
                      "start": 38,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 46,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 2,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "consequent": Node {
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 34,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 29,
                        "line": 2,
                      },
                    },
                    "raw": "false",
                    "start": 30,
                    "type": "Literal",
                    "value": false,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "test": Object {
                    "left": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 20,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 27,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 25,
                          "line": 2,
                        },
                      },
                      "raw": "0",
                      "start": 26,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 16,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 15,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 61,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 3,
                  },
                },
                "name": "even",
                "start": 57,
                "type": "Identifier",
              },
              "init": Object {
                "body": Object {
                  "left": Object {
                    "left": Node {
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 20,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 69,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 76,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 75,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "loc": undefined,
                  "operator": "||",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 36,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 35,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 84,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 38,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 86,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Node {
                      "end": 83,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 34,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 31,
                          "line": 3,
                        },
                      },
                      "name": "odd",
                      "start": 80,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 39,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 31,
                        "line": 3,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "LogicalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 65,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 64,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 98,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 8,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 7,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 97,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 96,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 4,
                },
              },
              "name": "even",
              "start": 92,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 4,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 12,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 2,
                  },
                },
                "name": "odd",
                "start": 9,
                "type": "Identifier",
              },
              "init": Object {
                "body": Object {
                  "alternate": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 45,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 44,
                              "line": 2,
                            },
                          },
                          "raw": "1",
                          "start": 45,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Node {
                      "end": 42,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 41,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 37,
                          "line": 2,
                        },
                      },
                      "name": "even",
                      "start": 38,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 46,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 2,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "consequent": Node {
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 34,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 29,
                        "line": 2,
                      },
                    },
                    "raw": "false",
                    "start": 30,
                    "type": "Literal",
                    "value": false,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "test": Object {
                    "left": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 20,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 27,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 25,
                          "line": 2,
                        },
                      },
                      "raw": "0",
                      "start": 26,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 16,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 15,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 61,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 3,
                  },
                },
                "name": "even",
                "start": 57,
                "type": "Identifier",
              },
              "init": Object {
                "body": Object {
                  "left": Object {
                    "left": Node {
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 20,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 69,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 76,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 75,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "loc": undefined,
                  "operator": "||",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 36,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 35,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 84,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 38,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 86,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Node {
                      "end": 83,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 34,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 31,
                          "line": 3,
                        },
                      },
                      "name": "odd",
                      "start": 80,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 39,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 31,
                        "line": 3,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "LogicalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 65,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 64,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 98,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 8,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 7,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 97,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 96,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 4,
                },
              },
              "name": "even",
              "start": 92,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 4,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Constant odd declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 61,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 3,
                  },
                },
                "name": "even",
                "start": 57,
                "type": "Identifier",
              },
              "init": Object {
                "body": Object {
                  "left": Object {
                    "left": Node {
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 20,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 69,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 76,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 75,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "loc": undefined,
                  "operator": "||",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 36,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 35,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 84,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 38,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 86,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "alternate": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 44,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 43,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 42,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 43,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 45,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 42,
                                  "line": 2,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 46,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 45,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 44,
                                    "line": 2,
                                  },
                                },
                                "raw": "1",
                                "start": 45,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Node {
                            "end": 42,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 41,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 37,
                                "line": 2,
                              },
                            },
                            "name": "even",
                            "start": 38,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 46,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 2,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "consequent": Node {
                          "end": 35,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 34,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 29,
                              "line": 2,
                            },
                          },
                          "raw": "false",
                          "start": 30,
                          "type": "Literal",
                          "value": false,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 46,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 19,
                            "line": 2,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 19,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 20,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 27,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 25,
                                "line": 2,
                              },
                            },
                            "raw": "0",
                            "start": 26,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 16,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 15,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 39,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 31,
                        "line": 3,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "LogicalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 65,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 64,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 98,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 8,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 7,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 97,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 96,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 4,
                },
              },
              "name": "even",
              "start": 92,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 4,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "declarations[0]",
        "init",
        "body",
        "right",
        "callee",
      ],
    ],
    "Constant odd declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "declarations": Array [
            Object {
              "id": Node {
                "end": 61,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 12,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 3,
                  },
                },
                "name": "even",
                "start": 57,
                "type": "Identifier",
              },
              "init": Object {
                "body": Object {
                  "left": Object {
                    "left": Node {
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 20,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 69,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 76,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 75,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "loc": undefined,
                  "operator": "||",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 36,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 35,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 84,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 38,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 86,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "alternate": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 44,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 43,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 42,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 43,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 45,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 42,
                                  "line": 2,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 46,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 45,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 44,
                                    "line": 2,
                                  },
                                },
                                "raw": "1",
                                "start": 45,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Node {
                            "end": 42,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 41,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 37,
                                "line": 2,
                              },
                            },
                            "name": "even",
                            "start": 38,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 46,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 2,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "consequent": Node {
                          "end": 35,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 34,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 29,
                              "line": 2,
                            },
                          },
                          "raw": "false",
                          "start": 30,
                          "type": "Literal",
                          "value": false,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 46,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 19,
                            "line": 2,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 19,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 20,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 27,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 25,
                                "line": 2,
                              },
                            },
                            "raw": "0",
                            "start": 26,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 16,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 15,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 39,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 31,
                        "line": 3,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "LogicalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 65,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 64,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": undefined,
              "type": "VariableDeclarator",
            },
          ],
          "kind": "const",
          "loc": undefined,
          "type": "VariableDeclaration",
        },
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 98,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 8,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 7,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 97,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Node {
              "end": 96,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 4,
                },
                "start": Position {
                  "column": 2,
                  "line": 4,
                },
              },
              "name": "even",
              "start": 92,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 4,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Constant even declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 98,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 8,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 7,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 97,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Object {
              "body": Object {
                "left": Object {
                  "left": Node {
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 21,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 69,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 27,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 20,
                      "line": 3,
                    },
                  },
                  "operator": "===",
                  "right": Node {
                    "end": 76,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 26,
                        "line": 3,
                      },
                    },
                    "raw": "0",
                    "start": 75,
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "BinaryExpression",
                },
                "loc": undefined,
                "operator": "||",
                "right": Object {
                  "arguments": Array [
                    Object {
                      "left": Node {
                        "end": 85,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 36,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 84,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 38,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 35,
                          "line": 3,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 87,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 37,
                            "line": 3,
                          },
                        },
                        "raw": "1",
                        "start": 86,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "alternate": Object {
                        "arguments": Array [
                          Object {
                            "left": Node {
                              "end": 44,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 43,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 42,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 43,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 45,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 42,
                                "line": 2,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 46,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 45,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 44,
                                  "line": 2,
                                },
                              },
                              "raw": "1",
                              "start": 45,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": [Circular],
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 46,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 37,
                            "line": 2,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "consequent": Node {
                        "end": 35,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 34,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 29,
                            "line": 2,
                          },
                        },
                        "raw": "false",
                        "start": 30,
                        "type": "Literal",
                        "value": false,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 46,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "test": Object {
                        "left": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 20,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 19,
                            "line": 2,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 27,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 25,
                              "line": 2,
                            },
                          },
                          "raw": "0",
                          "start": 26,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 16,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 15,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 14,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 15,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 39,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 31,
                      "line": 3,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "LogicalExpression",
              },
              "expression": true,
              "generator": false,
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 65,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 16,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 15,
                      "line": 3,
                    },
                  },
                  "name": "n",
                  "start": 64,
                  "type": "Identifier",
                },
              ],
              "type": "ArrowFunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 4,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "callee",
      ],
    ],
    "Constant even declared and substituted into rest of block",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 98,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 8,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 7,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 97,
                "type": "Literal",
                "value": 1,
              },
            ],
            "callee": Object {
              "body": Object {
                "left": Object {
                  "left": Node {
                    "end": 70,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 21,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 69,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 27,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 20,
                      "line": 3,
                    },
                  },
                  "operator": "===",
                  "right": Node {
                    "end": 76,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 26,
                        "line": 3,
                      },
                    },
                    "raw": "0",
                    "start": 75,
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "BinaryExpression",
                },
                "loc": undefined,
                "operator": "||",
                "right": Object {
                  "arguments": Array [
                    Object {
                      "left": Node {
                        "end": 85,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 36,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 84,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 38,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 35,
                          "line": 3,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 87,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 37,
                            "line": 3,
                          },
                        },
                        "raw": "1",
                        "start": 86,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "alternate": Object {
                        "arguments": Array [
                          Object {
                            "left": Node {
                              "end": 44,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 43,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 42,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 43,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 45,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 42,
                                "line": 2,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 46,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 45,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 44,
                                  "line": 2,
                                },
                              },
                              "raw": "1",
                              "start": 45,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": [Circular],
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 46,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 37,
                            "line": 2,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "consequent": Node {
                        "end": 35,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 34,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 29,
                            "line": 2,
                          },
                        },
                        "raw": "false",
                        "start": 30,
                        "type": "Literal",
                        "value": false,
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 46,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "test": Object {
                        "left": Node {
                          "end": 21,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 20,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 20,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 26,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 19,
                            "line": 2,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 27,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 25,
                              "line": 2,
                            },
                          },
                          "raw": "0",
                          "start": 26,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "type": "ConditionalExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 16,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 15,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 14,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 15,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 39,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 31,
                      "line": 3,
                    },
                  },
                  "type": "CallExpression",
                },
                "type": "LogicalExpression",
              },
              "expression": true,
              "generator": false,
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 65,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 16,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 15,
                      "line": 3,
                    },
                  },
                  "name": "n",
                  "start": 64,
                  "type": "Identifier",
                },
              ],
              "type": "ArrowFunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 2,
                "line": 4,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "1 substituted into n of n => n === 0 || (n => ...)(n - 1)",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 27,
                  "line": 3,
                },
                "start": Position {
                  "column": 20,
                  "line": 3,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 76,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 27,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 26,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 75,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 38,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 35,
                      "line": 3,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 87,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 38,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 3,
                      },
                    },
                    "raw": "1",
                    "start": 86,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "alternate": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 45,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 44,
                              "line": 2,
                            },
                          },
                          "raw": "1",
                          "start": 45,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "left": Object {
                          "left": Node {
                            "end": 70,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 21,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 20,
                                "line": 3,
                              },
                            },
                            "name": "n",
                            "start": 69,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 20,
                              "line": 3,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 76,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 26,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 75,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "loc": undefined,
                        "operator": "||",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 85,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 36,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 35,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 84,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 38,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 35,
                                  "line": 3,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 87,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 38,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 37,
                                    "line": 3,
                                  },
                                },
                                "raw": "1",
                                "start": 86,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": [Circular],
                            "expression": true,
                            "generator": false,
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 16,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 15,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 14,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 15,
                                "type": "Identifier",
                              },
                            ],
                            "type": "ArrowFunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 39,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 31,
                              "line": 3,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "LogicalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 65,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 15,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 64,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 46,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 2,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "consequent": Node {
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 34,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 29,
                        "line": 2,
                      },
                    },
                    "raw": "false",
                    "start": 30,
                    "type": "Literal",
                    "value": false,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "test": Object {
                    "left": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 20,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 27,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 25,
                          "line": 2,
                        },
                      },
                      "raw": "0",
                      "start": 26,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 16,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 15,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 39,
                  "line": 3,
                },
                "start": Position {
                  "column": 31,
                  "line": 3,
                },
              },
              "type": "CallExpression",
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "1 substituted into n of n => n === 0 || (n => ...)(n - 1)",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 27,
                  "line": 3,
                },
                "start": Position {
                  "column": 20,
                  "line": 3,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 76,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 27,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 26,
                    "line": 3,
                  },
                },
                "raw": "0",
                "start": 75,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 38,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 35,
                      "line": 3,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 87,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 38,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 3,
                      },
                    },
                    "raw": "1",
                    "start": 86,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "alternate": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 45,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 44,
                              "line": 2,
                            },
                          },
                          "raw": "1",
                          "start": 45,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "left": Object {
                          "left": Node {
                            "end": 70,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 21,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 20,
                                "line": 3,
                              },
                            },
                            "name": "n",
                            "start": 69,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 20,
                              "line": 3,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 76,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 26,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 75,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "loc": undefined,
                        "operator": "||",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 85,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 36,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 35,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 84,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 38,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 35,
                                  "line": 3,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 87,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 38,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 37,
                                    "line": 3,
                                  },
                                },
                                "raw": "1",
                                "start": 86,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": [Circular],
                            "expression": true,
                            "generator": false,
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 16,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 15,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 14,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 15,
                                "type": "Identifier",
                              },
                            ],
                            "type": "ArrowFunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 39,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 31,
                              "line": 3,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "LogicalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 65,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 15,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 64,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 46,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 2,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "consequent": Node {
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 34,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 29,
                        "line": 2,
                      },
                    },
                    "raw": "false",
                    "start": 30,
                    "type": "Literal",
                    "value": false,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "test": Object {
                    "left": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 20,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 27,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 25,
                          "line": 2,
                        },
                      },
                      "raw": "0",
                      "start": 26,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 16,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 15,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 39,
                  "line": 3,
                },
                "start": Position {
                  "column": 31,
                  "line": 3,
                },
              },
              "type": "CallExpression",
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Binary expression 1 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 5,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "false",
              "start": 0,
              "type": "Literal",
              "value": false,
            },
            "loc": undefined,
            "operator": "||",
            "right": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 38,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 35,
                      "line": 3,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 87,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 38,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 3,
                      },
                    },
                    "raw": "1",
                    "start": 86,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "alternate": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 45,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 44,
                              "line": 2,
                            },
                          },
                          "raw": "1",
                          "start": 45,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "left": Object {
                          "left": Node {
                            "end": 70,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 21,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 20,
                                "line": 3,
                              },
                            },
                            "name": "n",
                            "start": 69,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 20,
                              "line": 3,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 76,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 26,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 75,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "loc": undefined,
                        "operator": "||",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 85,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 36,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 35,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 84,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 38,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 35,
                                  "line": 3,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 87,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 38,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 37,
                                    "line": 3,
                                  },
                                },
                                "raw": "1",
                                "start": 86,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": [Circular],
                            "expression": true,
                            "generator": false,
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 16,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 15,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 14,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 15,
                                "type": "Identifier",
                              },
                            ],
                            "type": "ArrowFunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 39,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 31,
                              "line": 3,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "LogicalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 65,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 15,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 64,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 46,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 2,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "consequent": Node {
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 34,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 29,
                        "line": 2,
                      },
                    },
                    "raw": "false",
                    "start": 30,
                    "type": "Literal",
                    "value": false,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "test": Object {
                    "left": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 20,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 27,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 25,
                          "line": 2,
                        },
                      },
                      "raw": "0",
                      "start": 26,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 16,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 15,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 39,
                  "line": 3,
                },
                "start": Position {
                  "column": 31,
                  "line": 3,
                },
              },
              "type": "CallExpression",
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "Binary expression 1 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 5,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "false",
              "start": 0,
              "type": "Literal",
              "value": false,
            },
            "loc": undefined,
            "operator": "||",
            "right": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 38,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 35,
                      "line": 3,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 87,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 38,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 3,
                      },
                    },
                    "raw": "1",
                    "start": 86,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "alternate": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 46,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 45,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 44,
                              "line": 2,
                            },
                          },
                          "raw": "1",
                          "start": 45,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "left": Object {
                          "left": Node {
                            "end": 70,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 21,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 20,
                                "line": 3,
                              },
                            },
                            "name": "n",
                            "start": 69,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 20,
                              "line": 3,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 76,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 27,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 26,
                                "line": 3,
                              },
                            },
                            "raw": "0",
                            "start": 75,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "loc": undefined,
                        "operator": "||",
                        "right": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 85,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 36,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 35,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 84,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 38,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 35,
                                  "line": 3,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 87,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 38,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 37,
                                    "line": 3,
                                  },
                                },
                                "raw": "1",
                                "start": 86,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": [Circular],
                            "expression": true,
                            "generator": false,
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 16,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 15,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 14,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 15,
                                "type": "Identifier",
                              },
                            ],
                            "type": "ArrowFunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 39,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 31,
                              "line": 3,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "type": "LogicalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 65,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 16,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 15,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 64,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 46,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 37,
                        "line": 2,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "consequent": Node {
                    "end": 35,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 34,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 29,
                        "line": 2,
                      },
                    },
                    "raw": "false",
                    "start": 30,
                    "type": "Literal",
                    "value": false,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "test": Object {
                    "left": Node {
                      "end": 21,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 20,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "name": "n",
                      "start": 20,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 27,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 26,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 25,
                          "line": 2,
                        },
                      },
                      "raw": "0",
                      "start": 26,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "type": "ConditionalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 16,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 15,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 14,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 15,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 39,
                  "line": 3,
                },
                "start": Position {
                  "column": 31,
                  "line": 3,
                },
              },
              "type": "CallExpression",
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "OR operation evaluated, left of operator is false, continue evaluating right of operator",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 38,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 35,
                    "line": 3,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 87,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 38,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 37,
                      "line": 3,
                    },
                  },
                  "raw": "1",
                  "start": 86,
                  "type": "Literal",
                  "value": 1,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "alternate": Object {
                  "arguments": Array [
                    Object {
                      "left": Node {
                        "end": 44,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 43,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 43,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 45,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 42,
                          "line": 2,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 46,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 44,
                            "line": 2,
                          },
                        },
                        "raw": "1",
                        "start": 45,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "left": Object {
                        "left": Node {
                          "end": 70,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 21,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 20,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 69,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 20,
                            "line": 3,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 76,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 26,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 75,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "loc": undefined,
                      "operator": "||",
                      "right": Object {
                        "arguments": Array [
                          Object {
                            "left": Node {
                              "end": 85,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 36,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 35,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 84,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 38,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 35,
                                "line": 3,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 87,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 38,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 37,
                                  "line": 3,
                                },
                              },
                              "raw": "1",
                              "start": 86,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Object {
                          "body": [Circular],
                          "expression": true,
                          "generator": false,
                          "loc": undefined,
                          "params": Array [
                            Node {
                              "end": 16,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 15,
                              "type": "Identifier",
                            },
                          ],
                          "type": "ArrowFunctionExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 39,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 31,
                            "line": 3,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "type": "LogicalExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 65,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 64,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 37,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "consequent": Node {
                  "end": 35,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 34,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 29,
                      "line": 2,
                    },
                  },
                  "raw": "false",
                  "start": 30,
                  "type": "Literal",
                  "value": false,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 46,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "test": Object {
                  "left": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 20,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "operator": "===",
                  "right": Node {
                    "end": 27,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 25,
                        "line": 2,
                      },
                    },
                    "raw": "0",
                    "start": 26,
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "BinaryExpression",
                },
                "type": "ConditionalExpression",
              },
              "expression": true,
              "generator": false,
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 16,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 15,
                  "type": "Identifier",
                },
              ],
              "type": "ArrowFunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 39,
                "line": 3,
              },
              "start": Position {
                "column": 31,
                "line": 3,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "OR operation evaluated, left of operator is false, continue evaluating right of operator",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "left": Object {
                  "loc": undefined,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 38,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 35,
                    "line": 3,
                  },
                },
                "operator": "-",
                "right": Node {
                  "end": 87,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 38,
                      "line": 3,
                    },
                    "start": Position {
                      "column": 37,
                      "line": 3,
                    },
                  },
                  "raw": "1",
                  "start": 86,
                  "type": "Literal",
                  "value": 1,
                },
                "type": "BinaryExpression",
              },
            ],
            "callee": Object {
              "body": Object {
                "alternate": Object {
                  "arguments": Array [
                    Object {
                      "left": Node {
                        "end": 44,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 43,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 43,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 45,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 42,
                          "line": 2,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 46,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 44,
                            "line": 2,
                          },
                        },
                        "raw": "1",
                        "start": 45,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "left": Object {
                        "left": Node {
                          "end": 70,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 21,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 20,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 69,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 20,
                            "line": 3,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 76,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 26,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 75,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "loc": undefined,
                      "operator": "||",
                      "right": Object {
                        "arguments": Array [
                          Object {
                            "left": Node {
                              "end": 85,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 36,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 35,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 84,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 38,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 35,
                                "line": 3,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 87,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 38,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 37,
                                  "line": 3,
                                },
                              },
                              "raw": "1",
                              "start": 86,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Object {
                          "body": [Circular],
                          "expression": true,
                          "generator": false,
                          "loc": undefined,
                          "params": Array [
                            Node {
                              "end": 16,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 15,
                              "type": "Identifier",
                            },
                          ],
                          "type": "ArrowFunctionExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 39,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 31,
                            "line": 3,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "type": "LogicalExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 65,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 64,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 37,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "consequent": Node {
                  "end": 35,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 34,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 29,
                      "line": 2,
                    },
                  },
                  "raw": "false",
                  "start": 30,
                  "type": "Literal",
                  "value": false,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 46,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "test": Object {
                  "left": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 20,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "operator": "===",
                  "right": Node {
                    "end": 27,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 25,
                        "line": 2,
                      },
                    },
                    "raw": "0",
                    "start": 26,
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "BinaryExpression",
                },
                "type": "ConditionalExpression",
              },
              "expression": true,
              "generator": false,
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 16,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 15,
                  "type": "Identifier",
                },
              ],
              "type": "ArrowFunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 39,
                "line": 3,
              },
              "start": Position {
                "column": 31,
                "line": 3,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
      ],
    ],
    "Binary expression 1 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 1,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 1,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "0",
                "start": 0,
                "type": "Literal",
                "value": 0,
              },
            ],
            "callee": Object {
              "body": Object {
                "alternate": Object {
                  "arguments": Array [
                    Object {
                      "left": Node {
                        "end": 44,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 43,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 43,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 45,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 42,
                          "line": 2,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 46,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 44,
                            "line": 2,
                          },
                        },
                        "raw": "1",
                        "start": 45,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "left": Object {
                        "left": Node {
                          "end": 70,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 21,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 20,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 69,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 20,
                            "line": 3,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 76,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 26,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 75,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "loc": undefined,
                      "operator": "||",
                      "right": Object {
                        "arguments": Array [
                          Object {
                            "left": Node {
                              "end": 85,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 36,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 35,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 84,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 38,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 35,
                                "line": 3,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 87,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 38,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 37,
                                  "line": 3,
                                },
                              },
                              "raw": "1",
                              "start": 86,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Object {
                          "body": [Circular],
                          "expression": true,
                          "generator": false,
                          "loc": undefined,
                          "params": Array [
                            Node {
                              "end": 16,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 15,
                              "type": "Identifier",
                            },
                          ],
                          "type": "ArrowFunctionExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 39,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 31,
                            "line": 3,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "type": "LogicalExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 65,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 64,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 37,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "consequent": Node {
                  "end": 35,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 34,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 29,
                      "line": 2,
                    },
                  },
                  "raw": "false",
                  "start": 30,
                  "type": "Literal",
                  "value": false,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 46,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "test": Object {
                  "left": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 20,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "operator": "===",
                  "right": Node {
                    "end": 27,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 25,
                        "line": 2,
                      },
                    },
                    "raw": "0",
                    "start": 26,
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "BinaryExpression",
                },
                "type": "ConditionalExpression",
              },
              "expression": true,
              "generator": false,
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 16,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 15,
                  "type": "Identifier",
                },
              ],
              "type": "ArrowFunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 39,
                "line": 3,
              },
              "start": Position {
                "column": 31,
                "line": 3,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "arguments[0]",
      ],
    ],
    "Binary expression 1 - 1 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 1,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 1,
                    "line": 1,
                  },
                  "start": Position {
                    "column": 0,
                    "line": 1,
                  },
                },
                "raw": "0",
                "start": 0,
                "type": "Literal",
                "value": 0,
              },
            ],
            "callee": Object {
              "body": Object {
                "alternate": Object {
                  "arguments": Array [
                    Object {
                      "left": Node {
                        "end": 44,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 43,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 42,
                            "line": 2,
                          },
                        },
                        "name": "n",
                        "start": 43,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 45,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 42,
                          "line": 2,
                        },
                      },
                      "operator": "-",
                      "right": Node {
                        "end": 46,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 45,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 44,
                            "line": 2,
                          },
                        },
                        "raw": "1",
                        "start": 45,
                        "type": "Literal",
                        "value": 1,
                      },
                      "type": "BinaryExpression",
                    },
                  ],
                  "callee": Object {
                    "body": Object {
                      "left": Object {
                        "left": Node {
                          "end": 70,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 21,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 20,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 69,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 20,
                            "line": 3,
                          },
                        },
                        "operator": "===",
                        "right": Node {
                          "end": 76,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 27,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 26,
                              "line": 3,
                            },
                          },
                          "raw": "0",
                          "start": 75,
                          "type": "Literal",
                          "value": 0,
                        },
                        "type": "BinaryExpression",
                      },
                      "loc": undefined,
                      "operator": "||",
                      "right": Object {
                        "arguments": Array [
                          Object {
                            "left": Node {
                              "end": 85,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 36,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 35,
                                  "line": 3,
                                },
                              },
                              "name": "n",
                              "start": 84,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 38,
                                "line": 3,
                              },
                              "start": Position {
                                "column": 35,
                                "line": 3,
                              },
                            },
                            "operator": "-",
                            "right": Node {
                              "end": 87,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 38,
                                  "line": 3,
                                },
                                "start": Position {
                                  "column": 37,
                                  "line": 3,
                                },
                              },
                              "raw": "1",
                              "start": 86,
                              "type": "Literal",
                              "value": 1,
                            },
                            "type": "BinaryExpression",
                          },
                        ],
                        "callee": Object {
                          "body": [Circular],
                          "expression": true,
                          "generator": false,
                          "loc": undefined,
                          "params": Array [
                            Node {
                              "end": 16,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 15,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 14,
                                  "line": 2,
                                },
                              },
                              "name": "n",
                              "start": 15,
                              "type": "Identifier",
                            },
                          ],
                          "type": "ArrowFunctionExpression",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 39,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 31,
                            "line": 3,
                          },
                        },
                        "type": "CallExpression",
                      },
                      "type": "LogicalExpression",
                    },
                    "expression": true,
                    "generator": false,
                    "loc": undefined,
                    "params": Array [
                      Node {
                        "end": 65,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 16,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 15,
                            "line": 3,
                          },
                        },
                        "name": "n",
                        "start": 64,
                        "type": "Identifier",
                      },
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 46,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 37,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "consequent": Node {
                  "end": 35,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 34,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 29,
                      "line": 2,
                    },
                  },
                  "raw": "false",
                  "start": 30,
                  "type": "Literal",
                  "value": false,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 46,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "test": Object {
                  "left": Node {
                    "end": 21,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "name": "n",
                    "start": 20,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 26,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 19,
                      "line": 2,
                    },
                  },
                  "operator": "===",
                  "right": Node {
                    "end": 27,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 25,
                        "line": 2,
                      },
                    },
                    "raw": "0",
                    "start": 26,
                    "type": "Literal",
                    "value": 0,
                  },
                  "type": "BinaryExpression",
                },
                "type": "ConditionalExpression",
              },
              "expression": true,
              "generator": false,
              "loc": undefined,
              "params": Array [
                Node {
                  "end": 16,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 15,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "name": "n",
                  "start": 15,
                  "type": "Identifier",
                },
              ],
              "type": "ArrowFunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 39,
                "line": 3,
              },
              "start": Position {
                "column": 31,
                "line": 3,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "0 substituted into n of n => n === 0 ? false : (n => ...)(n - 1)",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 0,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 45,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 42,
                      "line": 2,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 46,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 45,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 44,
                        "line": 2,
                      },
                    },
                    "raw": "1",
                    "start": 45,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "left": Object {
                    "left": Node {
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 20,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 69,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 76,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 75,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "loc": undefined,
                  "operator": "||",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 36,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 35,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 84,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 38,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 86,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "alternate": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 44,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 43,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 42,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 43,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 45,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 42,
                                  "line": 2,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 46,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 45,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 44,
                                    "line": 2,
                                  },
                                },
                                "raw": "1",
                                "start": 45,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": [Circular],
                            "expression": true,
                            "generator": false,
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 16,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 15,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                            ],
                            "type": "ArrowFunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 46,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 2,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "consequent": Node {
                          "end": 35,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 34,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 29,
                              "line": 2,
                            },
                          },
                          "raw": "false",
                          "start": 30,
                          "type": "Literal",
                          "value": false,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 46,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 19,
                            "line": 2,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 19,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 20,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 27,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 25,
                                "line": 2,
                              },
                            },
                            "raw": "0",
                            "start": 26,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 16,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 15,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 39,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 31,
                        "line": 3,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "LogicalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 65,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 64,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 46,
                  "line": 2,
                },
                "start": Position {
                  "column": 37,
                  "line": 2,
                },
              },
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 35,
              "loc": SourceLocation {
                "end": Position {
                  "column": 34,
                  "line": 2,
                },
                "start": Position {
                  "column": 29,
                  "line": 2,
                },
              },
              "raw": "false",
              "start": 30,
              "type": "Literal",
              "value": false,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 46,
                "line": 2,
              },
              "start": Position {
                "column": 19,
                "line": 2,
              },
            },
            "test": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 0,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 2,
                },
                "start": Position {
                  "column": 19,
                  "line": 2,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 27,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 25,
                    "line": 2,
                  },
                },
                "raw": "0",
                "start": 26,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "0 substituted into n of n => n === 0 ? false : (n => ...)(n - 1)",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 0,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 45,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 42,
                      "line": 2,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 46,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 45,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 44,
                        "line": 2,
                      },
                    },
                    "raw": "1",
                    "start": 45,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "left": Object {
                    "left": Node {
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 20,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 69,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 76,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 75,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "loc": undefined,
                  "operator": "||",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 36,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 35,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 84,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 38,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 86,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "alternate": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 44,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 43,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 42,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 43,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 45,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 42,
                                  "line": 2,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 46,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 45,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 44,
                                    "line": 2,
                                  },
                                },
                                "raw": "1",
                                "start": 45,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": [Circular],
                            "expression": true,
                            "generator": false,
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 16,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 15,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                            ],
                            "type": "ArrowFunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 46,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 2,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "consequent": Node {
                          "end": 35,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 34,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 29,
                              "line": 2,
                            },
                          },
                          "raw": "false",
                          "start": 30,
                          "type": "Literal",
                          "value": false,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 46,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 19,
                            "line": 2,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 19,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 20,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 27,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 25,
                                "line": 2,
                              },
                            },
                            "raw": "0",
                            "start": 26,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 16,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 15,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 39,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 31,
                        "line": 3,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "LogicalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 65,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 64,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 46,
                  "line": 2,
                },
                "start": Position {
                  "column": 37,
                  "line": 2,
                },
              },
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 35,
              "loc": SourceLocation {
                "end": Position {
                  "column": 34,
                  "line": 2,
                },
                "start": Position {
                  "column": 29,
                  "line": 2,
                },
              },
              "raw": "false",
              "start": 30,
              "type": "Literal",
              "value": false,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 46,
                "line": 2,
              },
              "start": Position {
                "column": 19,
                "line": 2,
              },
            },
            "test": Object {
              "left": Object {
                "loc": undefined,
                "type": "Literal",
                "value": 0,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 2,
                },
                "start": Position {
                  "column": 19,
                  "line": 2,
                },
              },
              "operator": "===",
              "right": Node {
                "end": 27,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 26,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 25,
                    "line": 2,
                  },
                },
                "raw": "0",
                "start": 26,
                "type": "Literal",
                "value": 0,
              },
              "type": "BinaryExpression",
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "test",
      ],
    ],
    "Binary expression 0 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 0,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 45,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 42,
                      "line": 2,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 46,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 45,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 44,
                        "line": 2,
                      },
                    },
                    "raw": "1",
                    "start": 45,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "left": Object {
                    "left": Node {
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 20,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 69,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 76,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 75,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "loc": undefined,
                  "operator": "||",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 36,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 35,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 84,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 38,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 86,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "alternate": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 44,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 43,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 42,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 43,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 45,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 42,
                                  "line": 2,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 46,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 45,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 44,
                                    "line": 2,
                                  },
                                },
                                "raw": "1",
                                "start": 45,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": [Circular],
                            "expression": true,
                            "generator": false,
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 16,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 15,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                            ],
                            "type": "ArrowFunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 46,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 2,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "consequent": Node {
                          "end": 35,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 34,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 29,
                              "line": 2,
                            },
                          },
                          "raw": "false",
                          "start": 30,
                          "type": "Literal",
                          "value": false,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 46,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 19,
                            "line": 2,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 19,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 20,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 27,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 25,
                                "line": 2,
                              },
                            },
                            "raw": "0",
                            "start": 26,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 16,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 15,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 39,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 31,
                        "line": 3,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "LogicalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 65,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 64,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 46,
                  "line": 2,
                },
                "start": Position {
                  "column": 37,
                  "line": 2,
                },
              },
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 35,
              "loc": SourceLocation {
                "end": Position {
                  "column": 34,
                  "line": 2,
                },
                "start": Position {
                  "column": 29,
                  "line": 2,
                },
              },
              "raw": "false",
              "start": 30,
              "type": "Literal",
              "value": false,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 46,
                "line": 2,
              },
              "start": Position {
                "column": 19,
                "line": 2,
              },
            },
            "test": Node {
              "end": 4,
              "loc": SourceLocation {
                "end": Position {
                  "column": 4,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "true",
              "start": 0,
              "type": "Literal",
              "value": true,
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "test",
      ],
    ],
    "Binary expression 0 === 0 evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "alternate": Object {
              "arguments": Array [
                Object {
                  "left": Object {
                    "loc": undefined,
                    "type": "Literal",
                    "value": 0,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 45,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 42,
                      "line": 2,
                    },
                  },
                  "operator": "-",
                  "right": Node {
                    "end": 46,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 45,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 44,
                        "line": 2,
                      },
                    },
                    "raw": "1",
                    "start": 45,
                    "type": "Literal",
                    "value": 1,
                  },
                  "type": "BinaryExpression",
                },
              ],
              "callee": Object {
                "body": Object {
                  "left": Object {
                    "left": Node {
                      "end": 70,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 21,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 20,
                          "line": 3,
                        },
                      },
                      "name": "n",
                      "start": 69,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 20,
                        "line": 3,
                      },
                    },
                    "operator": "===",
                    "right": Node {
                      "end": 76,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 27,
                          "line": 3,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 3,
                        },
                      },
                      "raw": "0",
                      "start": 75,
                      "type": "Literal",
                      "value": 0,
                    },
                    "type": "BinaryExpression",
                  },
                  "loc": undefined,
                  "operator": "||",
                  "right": Object {
                    "arguments": Array [
                      Object {
                        "left": Node {
                          "end": 85,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 36,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 35,
                              "line": 3,
                            },
                          },
                          "name": "n",
                          "start": 84,
                          "type": "Identifier",
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 38,
                            "line": 3,
                          },
                          "start": Position {
                            "column": 35,
                            "line": 3,
                          },
                        },
                        "operator": "-",
                        "right": Node {
                          "end": 87,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 38,
                              "line": 3,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 3,
                            },
                          },
                          "raw": "1",
                          "start": 86,
                          "type": "Literal",
                          "value": 1,
                        },
                        "type": "BinaryExpression",
                      },
                    ],
                    "callee": Object {
                      "body": Object {
                        "alternate": Object {
                          "arguments": Array [
                            Object {
                              "left": Node {
                                "end": 44,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 43,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 42,
                                    "line": 2,
                                  },
                                },
                                "name": "n",
                                "start": 43,
                                "type": "Identifier",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 45,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 42,
                                  "line": 2,
                                },
                              },
                              "operator": "-",
                              "right": Node {
                                "end": 46,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 45,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 44,
                                    "line": 2,
                                  },
                                },
                                "raw": "1",
                                "start": 45,
                                "type": "Literal",
                                "value": 1,
                              },
                              "type": "BinaryExpression",
                            },
                          ],
                          "callee": Object {
                            "body": [Circular],
                            "expression": true,
                            "generator": false,
                            "loc": undefined,
                            "params": Array [
                              Node {
                                "end": 65,
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 16,
                                    "line": 3,
                                  },
                                  "start": Position {
                                    "column": 15,
                                    "line": 3,
                                  },
                                },
                                "name": "n",
                                "start": 64,
                                "type": "Identifier",
                              },
                            ],
                            "type": "ArrowFunctionExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 46,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 37,
                              "line": 2,
                            },
                          },
                          "type": "CallExpression",
                        },
                        "consequent": Node {
                          "end": 35,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 34,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 29,
                              "line": 2,
                            },
                          },
                          "raw": "false",
                          "start": 30,
                          "type": "Literal",
                          "value": false,
                        },
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 46,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 19,
                            "line": 2,
                          },
                        },
                        "test": Object {
                          "left": Node {
                            "end": 21,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 20,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 19,
                                "line": 2,
                              },
                            },
                            "name": "n",
                            "start": 20,
                            "type": "Identifier",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 26,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "operator": "===",
                          "right": Node {
                            "end": 27,
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 26,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 25,
                                "line": 2,
                              },
                            },
                            "raw": "0",
                            "start": 26,
                            "type": "Literal",
                            "value": 0,
                          },
                          "type": "BinaryExpression",
                        },
                        "type": "ConditionalExpression",
                      },
                      "expression": true,
                      "generator": false,
                      "loc": undefined,
                      "params": Array [
                        Node {
                          "end": 16,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 15,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 14,
                              "line": 2,
                            },
                          },
                          "name": "n",
                          "start": 15,
                          "type": "Identifier",
                        },
                      ],
                      "type": "ArrowFunctionExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 39,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 31,
                        "line": 3,
                      },
                    },
                    "type": "CallExpression",
                  },
                  "type": "LogicalExpression",
                },
                "expression": true,
                "generator": false,
                "loc": undefined,
                "params": Array [
                  Node {
                    "end": 65,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 16,
                        "line": 3,
                      },
                      "start": Position {
                        "column": 15,
                        "line": 3,
                      },
                    },
                    "name": "n",
                    "start": 64,
                    "type": "Identifier",
                  },
                ],
                "type": "ArrowFunctionExpression",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 46,
                  "line": 2,
                },
                "start": Position {
                  "column": 37,
                  "line": 2,
                },
              },
              "type": "CallExpression",
            },
            "consequent": Node {
              "end": 35,
              "loc": SourceLocation {
                "end": Position {
                  "column": 34,
                  "line": 2,
                },
                "start": Position {
                  "column": 29,
                  "line": 2,
                },
              },
              "raw": "false",
              "start": 30,
              "type": "Literal",
              "value": false,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 46,
                "line": 2,
              },
              "start": Position {
                "column": 19,
                "line": 2,
              },
            },
            "test": Node {
              "end": 4,
              "loc": SourceLocation {
                "end": Position {
                  "column": 4,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "true",
              "start": 0,
              "type": "Literal",
              "value": true,
            },
            "type": "ConditionalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Conditional expression evaluated, condition is true, consequent evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 35,
            "loc": SourceLocation {
              "end": Position {
                "column": 34,
                "line": 2,
              },
              "start": Position {
                "column": 29,
                "line": 2,
              },
            },
            "raw": "false",
            "start": 30,
            "type": "Literal",
            "value": false,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Conditional expression evaluated, condition is true, consequent evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 35,
            "loc": SourceLocation {
              "end": Position {
                "column": 34,
                "line": 2,
              },
              "start": Position {
                "column": 29,
                "line": 2,
              },
            },
            "raw": "false",
            "start": 30,
            "type": "Literal",
            "value": false,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`expmod 1`] = `
"function is_even(n) {
  return n % 2 === 0;
}
function expmod(base, exp, m) {
  if (exp === 0) {
    return 1;
  } else {
    if (is_even(exp)) {
      const to_half = expmod(base, exp / 2, m);
      return to_half * to_half % m;
    } else {
      return base * expmod(base, exp - 1, m) % m;
    }
  }
}
expmod(4, 3, 5);

function is_even(n) {
  return n % 2 === 0;
}
function expmod(base, exp, m) {
  if (exp === 0) {
    return 1;
  } else {
    if (is_even(exp)) {
      const to_half = expmod(base, exp / 2, m);
      return to_half * to_half % m;
    } else {
      return base * expmod(base, exp - 1, m) % m;
    }
  }
}
expmod(4, 3, 5);

function expmod(base, exp, m) {
  if (exp === 0) {
    return 1;
  } else {
    if (is_even(exp)) {
      const to_half = expmod(base, exp / 2, m);
      return to_half * to_half % m;
    } else {
      return base * expmod(base, exp - 1, m) % m;
    }
  }
}
expmod(4, 3, 5);

function expmod(base, exp, m) {
  if (exp === 0) {
    return 1;
  } else {
    if (is_even(exp)) {
      const to_half = expmod(base, exp / 2, m);
      return to_half * to_half % m;
    } else {
      return base * expmod(base, exp - 1, m) % m;
    }
  }
}
expmod(4, 3, 5);

expmod(4, 3, 5);

expmod(4, 3, 5);

{
  if (3 === 0) {
    return 1;
  } else {
    if (is_even(3)) {
      const to_half = expmod(4, 3 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 3 - 1, 5) % 5;
    }
  }
};

{
  if (3 === 0) {
    return 1;
  } else {
    if (is_even(3)) {
      const to_half = expmod(4, 3 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 3 - 1, 5) % 5;
    }
  }
};

{
  if (false) {
    return 1;
  } else {
    if (is_even(3)) {
      const to_half = expmod(4, 3 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 3 - 1, 5) % 5;
    }
  }
};

{
  if (false) {
    return 1;
  } else {
    if (is_even(3)) {
      const to_half = expmod(4, 3 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 3 - 1, 5) % 5;
    }
  }
};

{
  if (is_even(3)) {
    const to_half = expmod(4, 3 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 3 - 1, 5) % 5;
  }
};

{
  if (is_even(3)) {
    const to_half = expmod(4, 3 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 3 - 1, 5) % 5;
  }
};

{
  if (3 % 2 === 0) {
    const to_half = expmod(4, 3 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 3 - 1, 5) % 5;
  }
};

{
  if (3 % 2 === 0) {
    const to_half = expmod(4, 3 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 3 - 1, 5) % 5;
  }
};

{
  if (1 === 0) {
    const to_half = expmod(4, 3 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 3 - 1, 5) % 5;
  }
};

{
  if (1 === 0) {
    const to_half = expmod(4, 3 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 3 - 1, 5) % 5;
  }
};

{
  if (false) {
    const to_half = expmod(4, 3 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 3 - 1, 5) % 5;
  }
};

{
  if (false) {
    const to_half = expmod(4, 3 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 3 - 1, 5) % 5;
  }
};

{
  return 4 * expmod(4, 3 - 1, 5) % 5;
};

{
  return 4 * expmod(4, 3 - 1, 5) % 5;
};

4 * expmod(4, 3 - 1, 5) % 5;

4 * expmod(4, 3 - 1, 5) % 5;

4 * expmod(4, 2, 5) % 5;

4 * expmod(4, 2, 5) % 5;

4 * {
  if (2 === 0) {
    return 1;
  } else {
    if (is_even(2)) {
      const to_half = expmod(4, 2 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 2 - 1, 5) % 5;
    }
  }
} % 5;

4 * {
  if (2 === 0) {
    return 1;
  } else {
    if (is_even(2)) {
      const to_half = expmod(4, 2 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 2 - 1, 5) % 5;
    }
  }
} % 5;

4 * {
  if (false) {
    return 1;
  } else {
    if (is_even(2)) {
      const to_half = expmod(4, 2 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 2 - 1, 5) % 5;
    }
  }
} % 5;

4 * {
  if (false) {
    return 1;
  } else {
    if (is_even(2)) {
      const to_half = expmod(4, 2 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 2 - 1, 5) % 5;
    }
  }
} % 5;

4 * {
  if (is_even(2)) {
    const to_half = expmod(4, 2 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 2 - 1, 5) % 5;
  }
} % 5;

4 * {
  if (is_even(2)) {
    const to_half = expmod(4, 2 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 2 - 1, 5) % 5;
  }
} % 5;

4 * {
  if (2 % 2 === 0) {
    const to_half = expmod(4, 2 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 2 - 1, 5) % 5;
  }
} % 5;

4 * {
  if (2 % 2 === 0) {
    const to_half = expmod(4, 2 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 2 - 1, 5) % 5;
  }
} % 5;

4 * {
  if (0 === 0) {
    const to_half = expmod(4, 2 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 2 - 1, 5) % 5;
  }
} % 5;

4 * {
  if (0 === 0) {
    const to_half = expmod(4, 2 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 2 - 1, 5) % 5;
  }
} % 5;

4 * {
  if (true) {
    const to_half = expmod(4, 2 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 2 - 1, 5) % 5;
  }
} % 5;

4 * {
  if (true) {
    const to_half = expmod(4, 2 / 2, 5);
    return to_half * to_half % 5;
  } else {
    return 4 * expmod(4, 2 - 1, 5) % 5;
  }
} % 5;

4 * {
  const to_half = expmod(4, 2 / 2, 5);
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = expmod(4, 2 / 2, 5);
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = expmod(4, 1, 5);
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = expmod(4, 1, 5);
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (1 === 0) {
      return 1;
    } else {
      if (is_even(1)) {
        const to_half = expmod(4, 1 / 2, 5);
        return to_half * to_half % 5;
      } else {
        return 4 * expmod(4, 1 - 1, 5) % 5;
      }
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (1 === 0) {
      return 1;
    } else {
      if (is_even(1)) {
        const to_half = expmod(4, 1 / 2, 5);
        return to_half * to_half % 5;
      } else {
        return 4 * expmod(4, 1 - 1, 5) % 5;
      }
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (false) {
      return 1;
    } else {
      if (is_even(1)) {
        const to_half = expmod(4, 1 / 2, 5);
        return to_half * to_half % 5;
      } else {
        return 4 * expmod(4, 1 - 1, 5) % 5;
      }
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (false) {
      return 1;
    } else {
      if (is_even(1)) {
        const to_half = expmod(4, 1 / 2, 5);
        return to_half * to_half % 5;
      } else {
        return 4 * expmod(4, 1 - 1, 5) % 5;
      }
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (is_even(1)) {
      const to_half = expmod(4, 1 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 1 - 1, 5) % 5;
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (is_even(1)) {
      const to_half = expmod(4, 1 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 1 - 1, 5) % 5;
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (1 % 2 === 0) {
      const to_half = expmod(4, 1 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 1 - 1, 5) % 5;
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (1 % 2 === 0) {
      const to_half = expmod(4, 1 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 1 - 1, 5) % 5;
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (1 === 0) {
      const to_half = expmod(4, 1 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 1 - 1, 5) % 5;
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (1 === 0) {
      const to_half = expmod(4, 1 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 1 - 1, 5) % 5;
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (false) {
      const to_half = expmod(4, 1 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 1 - 1, 5) % 5;
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    if (false) {
      const to_half = expmod(4, 1 / 2, 5);
      return to_half * to_half % 5;
    } else {
      return 4 * expmod(4, 1 - 1, 5) % 5;
    }
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    return 4 * expmod(4, 1 - 1, 5) % 5;
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = {
    return 4 * expmod(4, 1 - 1, 5) % 5;
  };
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * expmod(4, 1 - 1, 5) % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * expmod(4, 1 - 1, 5) % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * expmod(4, 0, 5) % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * expmod(4, 0, 5) % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * {
    if (0 === 0) {
      return 1;
    } else {
      if (is_even(0)) {
        const to_half = expmod(4, 0 / 2, 5);
        return to_half * to_half % 5;
      } else {
        return 4 * expmod(4, 0 - 1, 5) % 5;
      }
    }
  } % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * {
    if (0 === 0) {
      return 1;
    } else {
      if (is_even(0)) {
        const to_half = expmod(4, 0 / 2, 5);
        return to_half * to_half % 5;
      } else {
        return 4 * expmod(4, 0 - 1, 5) % 5;
      }
    }
  } % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * {
    if (true) {
      return 1;
    } else {
      if (is_even(0)) {
        const to_half = expmod(4, 0 / 2, 5);
        return to_half * to_half % 5;
      } else {
        return 4 * expmod(4, 0 - 1, 5) % 5;
      }
    }
  } % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * {
    if (true) {
      return 1;
    } else {
      if (is_even(0)) {
        const to_half = expmod(4, 0 / 2, 5);
        return to_half * to_half % 5;
      } else {
        return 4 * expmod(4, 0 - 1, 5) % 5;
      }
    }
  } % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * {
    return 1;
  } % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * {
    return 1;
  } % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * 1 % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 * 1 % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4 % 5;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4;
  return to_half * to_half % 5;
} % 5;

4 * {
  const to_half = 4;
  return to_half * to_half % 5;
} % 5;

4 * {
  return 4 * 4 % 5;
} % 5;

4 * {
  return 4 * 4 % 5;
} % 5;

4 * (4 * 4 % 5) % 5;

4 * (4 * 4 % 5) % 5;

4 * (16 % 5) % 5;

4 * (16 % 5) % 5;

4 * 1 % 5;

4 * 1 % 5;

4 % 5;

4 % 5;

4;

4;
"
`;

exports[`function declarations in blocks are protected 1`] = `
"function repeat_pattern(n, p, r) {
  function twice_p(r) {
    return p(p(r));
  }
  return n === 0 ? r : n % 2 !== 0 ? repeat_pattern(n - 1, p, p(r)) : repeat_pattern(n / 2, twice_p, r);
}
function plus_one(x) {
  return x + 1;
}
repeat_pattern(5, plus_one, 0);

function repeat_pattern(n, p, r) {
  function twice_p(r) {
    return p(p(r));
  }
  return n === 0 ? r : n % 2 !== 0 ? repeat_pattern(n - 1, p, p(r)) : repeat_pattern(n / 2, twice_p, r);
}
function plus_one(x) {
  return x + 1;
}
repeat_pattern(5, plus_one, 0);

function plus_one(x) {
  return x + 1;
}
repeat_pattern(5, plus_one, 0);

function plus_one(x) {
  return x + 1;
}
repeat_pattern(5, plus_one, 0);

repeat_pattern(5, plus_one, 0);

repeat_pattern(5, plus_one, 0);

{
  function twice_p(r) {
    return plus_one(plus_one(r));
  }
  return 5 === 0 ? 0 : 5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);
};

{
  function twice_p(r) {
    return plus_one(plus_one(r));
  }
  return 5 === 0 ? 0 : 5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);
};

{
  return 5 === 0 ? 0 : 5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);
};

{
  return 5 === 0 ? 0 : 5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);
};

5 === 0 ? 0 : 5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

5 === 0 ? 0 : 5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

false ? 0 : 5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

false ? 0 : 5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

5 % 2 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

1 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

1 !== 0 ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

true ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

true ? repeat_pattern(5 - 1, plus_one, plus_one(0)) : repeat_pattern(5 / 2, twice_p, 0);

repeat_pattern(5 - 1, plus_one, plus_one(0));

repeat_pattern(5 - 1, plus_one, plus_one(0));

repeat_pattern(4, plus_one, plus_one(0));

repeat_pattern(4, plus_one, plus_one(0));

repeat_pattern(4, plus_one, 0 + 1);

repeat_pattern(4, plus_one, 0 + 1);

repeat_pattern(4, plus_one, 1);

repeat_pattern(4, plus_one, 1);

{
  function twice_p(r) {
    return plus_one(plus_one(r));
  }
  return 4 === 0 ? 1 : 4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);
};

{
  function twice_p(r) {
    return plus_one(plus_one(r));
  }
  return 4 === 0 ? 1 : 4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);
};

{
  return 4 === 0 ? 1 : 4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);
};

{
  return 4 === 0 ? 1 : 4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);
};

4 === 0 ? 1 : 4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

4 === 0 ? 1 : 4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

false ? 1 : 4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

false ? 1 : 4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

4 % 2 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

0 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

0 !== 0 ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

false ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

false ? repeat_pattern(4 - 1, plus_one, plus_one(1)) : repeat_pattern(4 / 2, twice_p, 1);

repeat_pattern(4 / 2, twice_p, 1);

repeat_pattern(4 / 2, twice_p, 1);

repeat_pattern(2, twice_p, 1);

repeat_pattern(2, twice_p, 1);

{
  function twice_p(r) {
    return twice_p(twice_p(r));
  }
  return 2 === 0 ? 1 : 2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);
};

{
  function twice_p(r) {
    return twice_p(twice_p(r));
  }
  return 2 === 0 ? 1 : 2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);
};

{
  return 2 === 0 ? 1 : 2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);
};

{
  return 2 === 0 ? 1 : 2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);
};

2 === 0 ? 1 : 2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

2 === 0 ? 1 : 2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

false ? 1 : 2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

false ? 1 : 2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

2 % 2 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

0 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

0 !== 0 ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

false ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

false ? repeat_pattern(2 - 1, twice_p, twice_p(1)) : repeat_pattern(2 / 2, twice_p, 1);

repeat_pattern(2 / 2, twice_p, 1);

repeat_pattern(2 / 2, twice_p, 1);

repeat_pattern(1, twice_p, 1);

repeat_pattern(1, twice_p, 1);

{
  function twice_p(r) {
    return twice_p(twice_p(r));
  }
  return 1 === 0 ? 1 : 1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);
};

{
  function twice_p(r) {
    return twice_p(twice_p(r));
  }
  return 1 === 0 ? 1 : 1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);
};

{
  return 1 === 0 ? 1 : 1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);
};

{
  return 1 === 0 ? 1 : 1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);
};

1 === 0 ? 1 : 1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

1 === 0 ? 1 : 1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

false ? 1 : 1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

false ? 1 : 1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

1 % 2 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

1 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

1 !== 0 ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

true ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

true ? repeat_pattern(1 - 1, twice_p, twice_p(1)) : repeat_pattern(1 / 2, twice_p, 1);

repeat_pattern(1 - 1, twice_p, twice_p(1));

repeat_pattern(1 - 1, twice_p, twice_p(1));

repeat_pattern(0, twice_p, twice_p(1));

repeat_pattern(0, twice_p, twice_p(1));

repeat_pattern(0, twice_p, twice_p(twice_p(1)));

repeat_pattern(0, twice_p, twice_p(twice_p(1)));

repeat_pattern(0, twice_p, twice_p(plus_one(plus_one(1))));

repeat_pattern(0, twice_p, twice_p(plus_one(plus_one(1))));

repeat_pattern(0, twice_p, twice_p(plus_one(1 + 1)));

repeat_pattern(0, twice_p, twice_p(plus_one(1 + 1)));

repeat_pattern(0, twice_p, twice_p(plus_one(2)));

repeat_pattern(0, twice_p, twice_p(plus_one(2)));

repeat_pattern(0, twice_p, twice_p(2 + 1));

repeat_pattern(0, twice_p, twice_p(2 + 1));

repeat_pattern(0, twice_p, twice_p(3));

repeat_pattern(0, twice_p, twice_p(3));

repeat_pattern(0, twice_p, plus_one(plus_one(3)));

repeat_pattern(0, twice_p, plus_one(plus_one(3)));

repeat_pattern(0, twice_p, plus_one(3 + 1));

repeat_pattern(0, twice_p, plus_one(3 + 1));

repeat_pattern(0, twice_p, plus_one(4));

repeat_pattern(0, twice_p, plus_one(4));

repeat_pattern(0, twice_p, 4 + 1);

repeat_pattern(0, twice_p, 4 + 1);

repeat_pattern(0, twice_p, 5);

repeat_pattern(0, twice_p, 5);

{
  function twice_p(r) {
    return twice_p(twice_p(r));
  }
  return 0 === 0 ? 5 : 0 % 2 !== 0 ? repeat_pattern(0 - 1, twice_p, twice_p(5)) : repeat_pattern(0 / 2, twice_p, 5);
};

{
  function twice_p(r) {
    return twice_p(twice_p(r));
  }
  return 0 === 0 ? 5 : 0 % 2 !== 0 ? repeat_pattern(0 - 1, twice_p, twice_p(5)) : repeat_pattern(0 / 2, twice_p, 5);
};

{
  return 0 === 0 ? 5 : 0 % 2 !== 0 ? repeat_pattern(0 - 1, twice_p, twice_p(5)) : repeat_pattern(0 / 2, twice_p, 5);
};

{
  return 0 === 0 ? 5 : 0 % 2 !== 0 ? repeat_pattern(0 - 1, twice_p, twice_p(5)) : repeat_pattern(0 / 2, twice_p, 5);
};

0 === 0 ? 5 : 0 % 2 !== 0 ? repeat_pattern(0 - 1, twice_p, twice_p(5)) : repeat_pattern(0 / 2, twice_p, 5);

0 === 0 ? 5 : 0 % 2 !== 0 ? repeat_pattern(0 - 1, twice_p, twice_p(5)) : repeat_pattern(0 / 2, twice_p, 5);

true ? 5 : 0 % 2 !== 0 ? repeat_pattern(0 - 1, twice_p, twice_p(5)) : repeat_pattern(0 / 2, twice_p, 5);

true ? 5 : 0 % 2 !== 0 ? repeat_pattern(0 - 1, twice_p, twice_p(5)) : repeat_pattern(0 / 2, twice_p, 5);

5;

5;
"
`;

exports[`is_function checks for builtin 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 28,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 27,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 16,
                    "line": 2,
                  },
                },
                "name": "is_function",
                "start": 17,
                "type": "Identifier",
              },
            ],
            "callee": Node {
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 2,
                },
                "start": Position {
                  "column": 4,
                  "line": 2,
                },
              },
              "name": "is_function",
              "start": 5,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 28,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Node {
                "end": 28,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 27,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 16,
                    "line": 2,
                  },
                },
                "name": "is_function",
                "start": 17,
                "type": "Identifier",
              },
            ],
            "callee": Node {
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 2,
                },
                "start": Position {
                  "column": 4,
                  "line": 2,
                },
              },
              "name": "is_function",
              "start": 5,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 28,
                "line": 2,
              },
              "start": Position {
                "column": 4,
                "line": 2,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "is_function runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "loc": undefined,
            "type": "Literal",
            "value": true,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "is_function runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "loc": undefined,
            "type": "Literal",
            "value": true,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`math_pow 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "arguments": Array [
                Node {
                  "end": 13,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "raw": "2",
                  "start": 12,
                  "type": "Literal",
                  "value": 2,
                },
                Node {
                  "end": 17,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 16,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "raw": "20",
                  "start": 15,
                  "type": "Literal",
                  "value": 20,
                },
              ],
              "callee": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 2,
                  },
                },
                "name": "math_pow",
                "start": 3,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "type": "CallExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 25,
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "name": "NaN",
              "start": 22,
              "type": "Identifier",
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "arguments": Array [
                Node {
                  "end": 13,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "raw": "2",
                  "start": 12,
                  "type": "Literal",
                  "value": 2,
                },
                Node {
                  "end": 17,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 16,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 14,
                      "line": 2,
                    },
                  },
                  "raw": "20",
                  "start": 15,
                  "type": "Literal",
                  "value": 20,
                },
              ],
              "callee": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 2,
                  },
                },
                "name": "math_pow",
                "start": 3,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "type": "CallExpression",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 25,
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "name": "NaN",
              "start": 22,
              "type": "Identifier",
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "math_pow runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 7,
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "1048576",
              "start": 0,
              "type": "Literal",
              "value": 1048576,
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 25,
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "name": "NaN",
              "start": 22,
              "type": "Identifier",
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "math_pow runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 7,
              "loc": SourceLocation {
                "end": Position {
                  "column": 7,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "1048576",
              "start": 0,
              "type": "Literal",
              "value": 1048576,
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 25,
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 2,
                },
                "start": Position {
                  "column": 21,
                  "line": 2,
                },
              },
              "name": "NaN",
              "start": 22,
              "type": "Identifier",
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "",
  ],
]
`;

exports[`negative numbers as arguments 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "argument": Node {
                  "end": 14,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 13,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "operator": "-",
                "prefix": true,
                "type": "UnaryExpression",
              },
            ],
            "callee": Node {
              "end": 11,
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "name": "math_sin",
              "start": 3,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "arguments": Array [
              Object {
                "argument": Node {
                  "end": 14,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 13,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 12,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 13,
                  "type": "Literal",
                  "value": 1,
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 11,
                    "line": 2,
                  },
                },
                "operator": "-",
                "prefix": true,
                "type": "UnaryExpression",
              },
            ],
            "callee": Node {
              "end": 11,
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "name": "math_sin",
              "start": 3,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "type": "CallExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "math_sin runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "argument": Node {
              "end": 19,
              "loc": SourceLocation {
                "end": Position {
                  "column": 19,
                  "line": 1,
                },
                "start": Position {
                  "column": 1,
                  "line": 1,
                },
              },
              "raw": "0.8414709848078965",
              "start": 1,
              "type": "Literal",
              "value": 0.8414709848078965,
            },
            "end": 19,
            "loc": SourceLocation {
              "end": Position {
                "column": 19,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "operator": "-",
            "prefix": true,
            "start": 0,
            "type": "UnaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "math_sin runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "argument": Node {
              "end": 19,
              "loc": SourceLocation {
                "end": Position {
                  "column": 19,
                  "line": 1,
                },
                "start": Position {
                  "column": 1,
                  "line": 1,
                },
              },
              "raw": "0.8414709848078965",
              "start": 1,
              "type": "Literal",
              "value": 0.8414709848078965,
            },
            "end": 19,
            "loc": SourceLocation {
              "end": Position {
                "column": 19,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "operator": "-",
            "prefix": true,
            "start": 0,
            "type": "UnaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`plus undefined 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "arguments": Array [
                Node {
                  "end": 13,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 12,
                  "type": "Literal",
                  "value": 1,
                },
              ],
              "callee": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 2,
                  },
                },
                "name": "math_sin",
                "start": 3,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "type": "CallExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 25,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "operator": "+",
            "right": Object {
              "name": "undefined",
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "arguments": Array [
                Node {
                  "end": 13,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 12,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "raw": "1",
                  "start": 12,
                  "type": "Literal",
                  "value": 1,
                },
              ],
              "callee": Node {
                "end": 11,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 10,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 2,
                    "line": 2,
                  },
                },
                "name": "math_sin",
                "start": 3,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 2,
                },
                "start": Position {
                  "column": 2,
                  "line": 2,
                },
              },
              "type": "CallExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 25,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "operator": "+",
            "right": Object {
              "name": "undefined",
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "math_sin runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 18,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "0.8414709848078965",
              "start": 0,
              "type": "Literal",
              "value": 0.8414709848078965,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 25,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "operator": "+",
            "right": Object {
              "name": "undefined",
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
      ],
    ],
    "math_sin runs",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Node {
              "end": 18,
              "loc": SourceLocation {
                "end": Position {
                  "column": 18,
                  "line": 1,
                },
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "raw": "0.8414709848078965",
              "start": 0,
              "type": "Literal",
              "value": 0.8414709848078965,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 25,
                "line": 2,
              },
              "start": Position {
                "column": 2,
                "line": 2,
              },
            },
            "operator": "+",
            "right": Object {
              "name": "undefined",
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "",
  ],
]
`;

exports[`subsets 1`] = `
"function subsets(s) {
  if (is_null(s)) {
    return list(null);
  } else {
    const rest = subsets(tail(s));
    return append(rest, map(x => pair(head(s), x), rest));
  }
}
subsets(list(1, 2, 3));

function subsets(s) {
  if (is_null(s)) {
    return list(null);
  } else {
    const rest = subsets(tail(s));
    return append(rest, map(x => pair(head(s), x), rest));
  }
}
subsets(list(1, 2, 3));

subsets(list(1, 2, 3));

subsets(list(1, 2, 3));

subsets([1, [2, [3, null]]]);

subsets([1, [2, [3, null]]]);

{
  if (is_null([1, [2, [3, null]]])) {
    return list(null);
  } else {
    const rest = subsets(tail([1, [2, [3, null]]]));
    return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
  }
};

{
  if (is_null([1, [2, [3, null]]])) {
    return list(null);
  } else {
    const rest = subsets(tail([1, [2, [3, null]]]));
    return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
  }
};

{
  if (false) {
    return list(null);
  } else {
    const rest = subsets(tail([1, [2, [3, null]]]));
    return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
  }
};

{
  if (false) {
    return list(null);
  } else {
    const rest = subsets(tail([1, [2, [3, null]]]));
    return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
  }
};

{
  const rest = subsets(tail([1, [2, [3, null]]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = subsets(tail([1, [2, [3, null]]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = subsets([2, [3, null]]);
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = subsets([2, [3, null]]);
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    if (is_null([2, [3, null]])) {
      return list(null);
    } else {
      const rest = subsets(tail([2, [3, null]]));
      return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
    }
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    if (is_null([2, [3, null]])) {
      return list(null);
    } else {
      const rest = subsets(tail([2, [3, null]]));
      return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
    }
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    if (false) {
      return list(null);
    } else {
      const rest = subsets(tail([2, [3, null]]));
      return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
    }
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    if (false) {
      return list(null);
    } else {
      const rest = subsets(tail([2, [3, null]]));
      return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
    }
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = subsets(tail([2, [3, null]]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = subsets(tail([2, [3, null]]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = subsets([3, null]);
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = subsets([3, null]);
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      if (is_null([3, null])) {
        return list(null);
      } else {
        const rest = subsets(tail([3, null]));
        return append(rest, map(x => pair(head([3, null]), x), rest));
      }
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      if (is_null([3, null])) {
        return list(null);
      } else {
        const rest = subsets(tail([3, null]));
        return append(rest, map(x => pair(head([3, null]), x), rest));
      }
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      if (false) {
        return list(null);
      } else {
        const rest = subsets(tail([3, null]));
        return append(rest, map(x => pair(head([3, null]), x), rest));
      }
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      if (false) {
        return list(null);
      } else {
        const rest = subsets(tail([3, null]));
        return append(rest, map(x => pair(head([3, null]), x), rest));
      }
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = subsets(tail([3, null]));
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = subsets(tail([3, null]));
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = subsets(null);
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = subsets(null);
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = {
        if (is_null(null)) {
          return list(null);
        } else {
          const rest = subsets(tail(null));
          return append(rest, map(x => pair(head(null), x), rest));
        }
      };
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = {
        if (is_null(null)) {
          return list(null);
        } else {
          const rest = subsets(tail(null));
          return append(rest, map(x => pair(head(null), x), rest));
        }
      };
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = {
        if (true) {
          return list(null);
        } else {
          const rest = subsets(tail(null));
          return append(rest, map(x => pair(head(null), x), rest));
        }
      };
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = {
        if (true) {
          return list(null);
        } else {
          const rest = subsets(tail(null));
          return append(rest, map(x => pair(head(null), x), rest));
        }
      };
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = {
        return list(null);
      };
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = {
        return list(null);
      };
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = list(null);
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = list(null);
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = [null, null];
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      const rest = [null, null];
      return append(rest, map(x => pair(head([3, null]), x), rest));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      return append([null, null], map(x => pair(head([3, null]), x), [null, null]));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = {
      return append([null, null], map(x => pair(head([3, null]), x), [null, null]));
    };
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], map(x => pair(head([3, null]), x), [null, null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], map(x => pair(head([3, null]), x), [null, null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], is_null([null, null]) ? null : pair((x => pair(head([3, null]), x))(head([null, null])), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], is_null([null, null]) ? null : pair((x => pair(head([3, null]), x))(head([null, null])), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], false ? null : pair((x => pair(head([3, null]), x))(head([null, null])), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], false ? null : pair((x => pair(head([3, null]), x))(head([null, null])), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair((x => pair(head([3, null]), x))(head([null, null])), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair((x => pair(head([3, null]), x))(head([null, null])), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair((x => pair(head([3, null]), x))(null), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair((x => pair(head([3, null]), x))(null), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair(pair(head([3, null]), null), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair(pair(head([3, null]), null), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair(pair(3, null), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair(pair(3, null), map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], map(x => pair(head([3, null]), x), tail([null, null]))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], map(x => pair(head([3, null]), x), null)));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], map(x => pair(head([3, null]), x), null)));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], is_null(null) ? null : pair((x => pair(head([3, null]), x))(head(null)), map(x => pair(head([3, null]), x), tail(null)))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], is_null(null) ? null : pair((x => pair(head([3, null]), x))(head(null)), map(x => pair(head([3, null]), x), tail(null)))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], true ? null : pair((x => pair(head([3, null]), x))(head(null)), map(x => pair(head([3, null]), x), tail(null)))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], true ? null : pair((x => pair(head([3, null]), x))(head(null)), map(x => pair(head([3, null]), x), tail(null)))));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], null));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], pair([3, null], null));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], [[3, null], null]);
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = append([null, null], [[3, null], null]);
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = is_null([null, null]) ? [[3, null], null] : pair(head([null, null]), append(tail([null, null]), [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = is_null([null, null]) ? [[3, null], null] : pair(head([null, null]), append(tail([null, null]), [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = false ? [[3, null], null] : pair(head([null, null]), append(tail([null, null]), [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = false ? [[3, null], null] : pair(head([null, null]), append(tail([null, null]), [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(head([null, null]), append(tail([null, null]), [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(head([null, null]), append(tail([null, null]), [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, append(tail([null, null]), [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, append(tail([null, null]), [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, append(null, [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, append(null, [[3, null], null]));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, is_null(null) ? [[3, null], null] : pair(head(null), append(tail(null), [[3, null], null])));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, is_null(null) ? [[3, null], null] : pair(head(null), append(tail(null), [[3, null], null])));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, true ? [[3, null], null] : pair(head(null), append(tail(null), [[3, null], null])));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, true ? [[3, null], null] : pair(head(null), append(tail(null), [[3, null], null])));
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, [[3, null], null]);
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = pair(null, [[3, null], null]);
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = [null, [[3, null], null]];
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    const rest = [null, [[3, null], null]];
    return append(rest, map(x => pair(head([2, [3, null]]), x), rest));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    return append([null, [[3, null], null]], map(x => pair(head([2, [3, null]]), x), [null, [[3, null], null]]));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = {
    return append([null, [[3, null], null]], map(x => pair(head([2, [3, null]]), x), [null, [[3, null], null]]));
  };
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], map(x => pair(head([2, [3, null]]), x), [null, [[3, null], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], map(x => pair(head([2, [3, null]]), x), [null, [[3, null], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], is_null([null, [[3, null], null]]) ? null : pair((x => pair(head([2, [3, null]]), x))(head([null, [[3, null], null]])), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], is_null([null, [[3, null], null]]) ? null : pair((x => pair(head([2, [3, null]]), x))(head([null, [[3, null], null]])), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], false ? null : pair((x => pair(head([2, [3, null]]), x))(head([null, [[3, null], null]])), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], false ? null : pair((x => pair(head([2, [3, null]]), x))(head([null, [[3, null], null]])), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair((x => pair(head([2, [3, null]]), x))(head([null, [[3, null], null]])), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair((x => pair(head([2, [3, null]]), x))(head([null, [[3, null], null]])), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair((x => pair(head([2, [3, null]]), x))(null), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair((x => pair(head([2, [3, null]]), x))(null), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair(pair(head([2, [3, null]]), null), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair(pair(head([2, [3, null]]), null), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair(pair(2, null), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair(pair(2, null), map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], map(x => pair(head([2, [3, null]]), x), tail([null, [[3, null], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], map(x => pair(head([2, [3, null]]), x), [[3, null], null])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], map(x => pair(head([2, [3, null]]), x), [[3, null], null])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], is_null([[3, null], null]) ? null : pair((x => pair(head([2, [3, null]]), x))(head([[3, null], null])), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], is_null([[3, null], null]) ? null : pair((x => pair(head([2, [3, null]]), x))(head([[3, null], null])), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], false ? null : pair((x => pair(head([2, [3, null]]), x))(head([[3, null], null])), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], false ? null : pair((x => pair(head([2, [3, null]]), x))(head([[3, null], null])), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair((x => pair(head([2, [3, null]]), x))(head([[3, null], null])), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair((x => pair(head([2, [3, null]]), x))(head([[3, null], null])), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair((x => pair(head([2, [3, null]]), x))([3, null]), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair((x => pair(head([2, [3, null]]), x))([3, null]), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair(pair(head([2, [3, null]]), [3, null]), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair(pair(head([2, [3, null]]), [3, null]), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair(pair(2, [3, null]), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair(pair(2, [3, null]), map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], map(x => pair(head([2, [3, null]]), x), tail([[3, null], null])))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], map(x => pair(head([2, [3, null]]), x), null))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], map(x => pair(head([2, [3, null]]), x), null))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], is_null(null) ? null : pair((x => pair(head([2, [3, null]]), x))(head(null)), map(x => pair(head([2, [3, null]]), x), tail(null))))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], is_null(null) ? null : pair((x => pair(head([2, [3, null]]), x))(head(null)), map(x => pair(head([2, [3, null]]), x), tail(null))))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], true ? null : pair((x => pair(head([2, [3, null]]), x))(head(null)), map(x => pair(head([2, [3, null]]), x), tail(null))))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], true ? null : pair((x => pair(head([2, [3, null]]), x))(head(null)), map(x => pair(head([2, [3, null]]), x), tail(null))))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], null)));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], pair([2, [3, null]], null)));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], [[2, [3, null]], null]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], pair([2, null], [[2, [3, null]], null]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], [[2, null], [[2, [3, null]], null]]);
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = append([null, [[3, null], null]], [[2, null], [[2, [3, null]], null]]);
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = is_null([null, [[3, null], null]]) ? [[2, null], [[2, [3, null]], null]] : pair(head([null, [[3, null], null]]), append(tail([null, [[3, null], null]]), [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = is_null([null, [[3, null], null]]) ? [[2, null], [[2, [3, null]], null]] : pair(head([null, [[3, null], null]]), append(tail([null, [[3, null], null]]), [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = false ? [[2, null], [[2, [3, null]], null]] : pair(head([null, [[3, null], null]]), append(tail([null, [[3, null], null]]), [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = false ? [[2, null], [[2, [3, null]], null]] : pair(head([null, [[3, null], null]]), append(tail([null, [[3, null], null]]), [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(head([null, [[3, null], null]]), append(tail([null, [[3, null], null]]), [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(head([null, [[3, null], null]]), append(tail([null, [[3, null], null]]), [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, append(tail([null, [[3, null], null]]), [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, append(tail([null, [[3, null], null]]), [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, append([[3, null], null], [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, append([[3, null], null], [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, is_null([[3, null], null]) ? [[2, null], [[2, [3, null]], null]] : pair(head([[3, null], null]), append(tail([[3, null], null]), [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, is_null([[3, null], null]) ? [[2, null], [[2, [3, null]], null]] : pair(head([[3, null], null]), append(tail([[3, null], null]), [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, false ? [[2, null], [[2, [3, null]], null]] : pair(head([[3, null], null]), append(tail([[3, null], null]), [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, false ? [[2, null], [[2, [3, null]], null]] : pair(head([[3, null], null]), append(tail([[3, null], null]), [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair(head([[3, null], null]), append(tail([[3, null], null]), [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair(head([[3, null], null]), append(tail([[3, null], null]), [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], append(tail([[3, null], null]), [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], append(tail([[3, null], null]), [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], append(null, [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], append(null, [[2, null], [[2, [3, null]], null]])));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], is_null(null) ? [[2, null], [[2, [3, null]], null]] : pair(head(null), append(tail(null), [[2, null], [[2, [3, null]], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], is_null(null) ? [[2, null], [[2, [3, null]], null]] : pair(head(null), append(tail(null), [[2, null], [[2, [3, null]], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], true ? [[2, null], [[2, [3, null]], null]] : pair(head(null), append(tail(null), [[2, null], [[2, [3, null]], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], true ? [[2, null], [[2, [3, null]], null]] : pair(head(null), append(tail(null), [[2, null], [[2, [3, null]], null]]))));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, pair([3, null], [[2, null], [[2, [3, null]], null]]));
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, [[3, null], [[2, null], [[2, [3, null]], null]]]);
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = pair(null, [[3, null], [[2, null], [[2, [3, null]], null]]]);
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = [null, [[3, null], [[2, null], [[2, [3, null]], null]]]];
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  const rest = [null, [[3, null], [[2, null], [[2, [3, null]], null]]]];
  return append(rest, map(x => pair(head([1, [2, [3, null]]]), x), rest));
};

{
  return append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], map(x => pair(head([1, [2, [3, null]]]), x), [null, [[3, null], [[2, null], [[2, [3, null]], null]]]]));
};

{
  return append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], map(x => pair(head([1, [2, [3, null]]]), x), [null, [[3, null], [[2, null], [[2, [3, null]], null]]]]));
};

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], map(x => pair(head([1, [2, [3, null]]]), x), [null, [[3, null], [[2, null], [[2, [3, null]], null]]]]));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], map(x => pair(head([1, [2, [3, null]]]), x), [null, [[3, null], [[2, null], [[2, [3, null]], null]]]]));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], is_null([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], is_null([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], false ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], false ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair((x => pair(head([1, [2, [3, null]]]), x))(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair((x => pair(head([1, [2, [3, null]]]), x))(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair((x => pair(head([1, [2, [3, null]]]), x))(null), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair((x => pair(head([1, [2, [3, null]]]), x))(null), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair(pair(head([1, [2, [3, null]]]), null), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair(pair(head([1, [2, [3, null]]]), null), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair(pair(1, null), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair(pair(1, null), map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], map(x => pair(head([1, [2, [3, null]]]), x), tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], map(x => pair(head([1, [2, [3, null]]]), x), [[3, null], [[2, null], [[2, [3, null]], null]]])));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], map(x => pair(head([1, [2, [3, null]]]), x), [[3, null], [[2, null], [[2, [3, null]], null]]])));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], is_null([[3, null], [[2, null], [[2, [3, null]], null]]]) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[3, null], [[2, null], [[2, [3, null]], null]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], is_null([[3, null], [[2, null], [[2, [3, null]], null]]]) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[3, null], [[2, null], [[2, [3, null]], null]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], false ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[3, null], [[2, null], [[2, [3, null]], null]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], false ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[3, null], [[2, null], [[2, [3, null]], null]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair((x => pair(head([1, [2, [3, null]]]), x))(head([[3, null], [[2, null], [[2, [3, null]], null]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair((x => pair(head([1, [2, [3, null]]]), x))(head([[3, null], [[2, null], [[2, [3, null]], null]]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair((x => pair(head([1, [2, [3, null]]]), x))([3, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair((x => pair(head([1, [2, [3, null]]]), x))([3, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair(pair(head([1, [2, [3, null]]]), [3, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair(pair(head([1, [2, [3, null]]]), [3, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair(pair(1, [3, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair(pair(1, [3, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], map(x => pair(head([1, [2, [3, null]]]), x), tail([[3, null], [[2, null], [[2, [3, null]], null]]])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], map(x => pair(head([1, [2, [3, null]]]), x), [[2, null], [[2, [3, null]], null]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], map(x => pair(head([1, [2, [3, null]]]), x), [[2, null], [[2, [3, null]], null]]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], is_null([[2, null], [[2, [3, null]], null]]) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, null], [[2, [3, null]], null]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], is_null([[2, null], [[2, [3, null]], null]]) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, null], [[2, [3, null]], null]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], false ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, null], [[2, [3, null]], null]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], false ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, null], [[2, [3, null]], null]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, null], [[2, [3, null]], null]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, null], [[2, [3, null]], null]])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair((x => pair(head([1, [2, [3, null]]]), x))([2, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair((x => pair(head([1, [2, [3, null]]]), x))([2, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair(pair(head([1, [2, [3, null]]]), [2, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair(pair(head([1, [2, [3, null]]]), [2, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair(pair(1, [2, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair(pair(1, [2, null]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, null], [[2, [3, null]], null]]))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], map(x => pair(head([1, [2, [3, null]]]), x), [[2, [3, null]], null])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], map(x => pair(head([1, [2, [3, null]]]), x), [[2, [3, null]], null])))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], is_null([[2, [3, null]], null]) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, [3, null]], null])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], is_null([[2, [3, null]], null]) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, [3, null]], null])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], false ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, [3, null]], null])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], false ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, [3, null]], null])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, [3, null]], null])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair((x => pair(head([1, [2, [3, null]]]), x))(head([[2, [3, null]], null])), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair((x => pair(head([1, [2, [3, null]]]), x))([2, [3, null]]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair((x => pair(head([1, [2, [3, null]]]), x))([2, [3, null]]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair(pair(head([1, [2, [3, null]]]), [2, [3, null]]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair(pair(head([1, [2, [3, null]]]), [2, [3, null]]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair(pair(1, [2, [3, null]]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair(pair(1, [2, [3, null]]), map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], map(x => pair(head([1, [2, [3, null]]]), x), tail([[2, [3, null]], null])))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], map(x => pair(head([1, [2, [3, null]]]), x), null))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], map(x => pair(head([1, [2, [3, null]]]), x), null))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], is_null(null) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head(null)), map(x => pair(head([1, [2, [3, null]]]), x), tail(null))))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], is_null(null) ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head(null)), map(x => pair(head([1, [2, [3, null]]]), x), tail(null))))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], true ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head(null)), map(x => pair(head([1, [2, [3, null]]]), x), tail(null))))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], true ? null : pair((x => pair(head([1, [2, [3, null]]]), x))(head(null)), map(x => pair(head([1, [2, [3, null]]]), x), tail(null))))))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], null)))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], pair([1, [2, [3, null]]], null)))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], [[1, [2, [3, null]]], null]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], pair([1, [2, null]], [[1, [2, [3, null]]], null]))));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]])));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], pair([1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]])));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], pair([1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]));

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]);

append([null, [[3, null], [[2, null], [[2, [3, null]], null]]]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]);

is_null([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), append(tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

is_null([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), append(tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

false ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), append(tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

false ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), append(tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

pair(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), append(tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

pair(head([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), append(tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

pair(null, append(tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

pair(null, append(tail([null, [[3, null], [[2, null], [[2, [3, null]], null]]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

pair(null, append([[3, null], [[2, null], [[2, [3, null]], null]]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

pair(null, append([[3, null], [[2, null], [[2, [3, null]], null]]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]));

pair(null, is_null([[3, null], [[2, null], [[2, [3, null]], null]]]) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[3, null], [[2, null], [[2, [3, null]], null]]]), append(tail([[3, null], [[2, null], [[2, [3, null]], null]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, is_null([[3, null], [[2, null], [[2, [3, null]], null]]]) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[3, null], [[2, null], [[2, [3, null]], null]]]), append(tail([[3, null], [[2, null], [[2, [3, null]], null]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, false ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[3, null], [[2, null], [[2, [3, null]], null]]]), append(tail([[3, null], [[2, null], [[2, [3, null]], null]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, false ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[3, null], [[2, null], [[2, [3, null]], null]]]), append(tail([[3, null], [[2, null], [[2, [3, null]], null]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, pair(head([[3, null], [[2, null], [[2, [3, null]], null]]]), append(tail([[3, null], [[2, null], [[2, [3, null]], null]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, pair(head([[3, null], [[2, null], [[2, [3, null]], null]]]), append(tail([[3, null], [[2, null], [[2, [3, null]], null]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, pair([3, null], append(tail([[3, null], [[2, null], [[2, [3, null]], null]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, pair([3, null], append(tail([[3, null], [[2, null], [[2, [3, null]], null]]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, pair([3, null], append([[2, null], [[2, [3, null]], null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, pair([3, null], append([[2, null], [[2, [3, null]], null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])));

pair(null, pair([3, null], is_null([[2, null], [[2, [3, null]], null]]) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[2, null], [[2, [3, null]], null]]), append(tail([[2, null], [[2, [3, null]], null]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], is_null([[2, null], [[2, [3, null]], null]]) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[2, null], [[2, [3, null]], null]]), append(tail([[2, null], [[2, [3, null]], null]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], false ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[2, null], [[2, [3, null]], null]]), append(tail([[2, null], [[2, [3, null]], null]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], false ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[2, null], [[2, [3, null]], null]]), append(tail([[2, null], [[2, [3, null]], null]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair(head([[2, null], [[2, [3, null]], null]]), append(tail([[2, null], [[2, [3, null]], null]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair(head([[2, null], [[2, [3, null]], null]]), append(tail([[2, null], [[2, [3, null]], null]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair([2, null], append(tail([[2, null], [[2, [3, null]], null]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair([2, null], append(tail([[2, null], [[2, [3, null]], null]]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair([2, null], append([[2, [3, null]], null], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair([2, null], append([[2, [3, null]], null], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair([2, null], is_null([[2, [3, null]], null]) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[2, [3, null]], null]), append(tail([[2, [3, null]], null]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], is_null([[2, [3, null]], null]) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[2, [3, null]], null]), append(tail([[2, [3, null]], null]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], false ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[2, [3, null]], null]), append(tail([[2, [3, null]], null]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], false ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head([[2, [3, null]], null]), append(tail([[2, [3, null]], null]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], pair(head([[2, [3, null]], null]), append(tail([[2, [3, null]], null]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], pair(head([[2, [3, null]], null]), append(tail([[2, [3, null]], null]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], append(tail([[2, [3, null]], null]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], append(tail([[2, [3, null]], null]), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], append(null, [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], append(null, [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]])))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], is_null(null) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head(null), append(tail(null), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], is_null(null) ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head(null), append(tail(null), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], true ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head(null), append(tail(null), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], true ? [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]] : pair(head(null), append(tail(null), [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair([2, null], pair([2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]))));

pair(null, pair([3, null], pair([2, null], [[2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]])));

pair(null, pair([3, null], pair([2, null], [[2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]])));

pair(null, pair([3, null], [[2, null], [[2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]]]));

pair(null, pair([3, null], [[2, null], [[2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]]]));

pair(null, [[3, null], [[2, null], [[2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]]]]);

pair(null, [[3, null], [[2, null], [[2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]]]]);

[null, [[3, null], [[2, null], [[2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]]]]];

[null, [[3, null], [[2, null], [[2, [3, null]], [[1, null], [[1, [3, null]], [[1, [2, null]], [[1, [2, [3, null]]], null]]]]]]]];
"
`;

exports[`triple equals work on function 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "arguments": Array [],
                  "callee": Node {
                    "end": 28,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 26,
                        "line": 2,
                      },
                    },
                    "name": "g",
                    "start": 27,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 29,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 26,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 30,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 15,
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 2,
              },
              "start": Position {
                "column": 13,
                "line": 2,
              },
            },
            "name": "f",
            "start": 14,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [],
          "type": "FunctionDeclaration",
        },
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "arguments": Array [],
                  "callee": Node {
                    "end": 57,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 56,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 55,
                        "line": 2,
                      },
                    },
                    "name": "f",
                    "start": 56,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 58,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 55,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 59,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 48,
                    "line": 2,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 44,
            "loc": SourceLocation {
              "end": Position {
                "column": 43,
                "line": 2,
              },
              "start": Position {
                "column": 42,
                "line": 2,
              },
            },
            "name": "g",
            "start": 43,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 68,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "name": "f",
              "start": 67,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 74,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 3,
                },
                "start": Position {
                  "column": 10,
                  "line": 3,
                },
              },
              "name": "f",
              "start": 73,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 81,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 80,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 87,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 4,
                },
                "start": Position {
                  "column": 10,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 86,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 94,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "name": "f",
              "start": 93,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 100,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 5,
                },
                "start": Position {
                  "column": 10,
                  "line": 5,
                },
              },
              "name": "g",
              "start": 99,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "arguments": Array [],
                  "callee": Node {
                    "end": 28,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 27,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 26,
                        "line": 2,
                      },
                    },
                    "name": "g",
                    "start": 27,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 29,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 26,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 30,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 19,
                    "line": 2,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 15,
            "loc": SourceLocation {
              "end": Position {
                "column": 14,
                "line": 2,
              },
              "start": Position {
                "column": 13,
                "line": 2,
              },
            },
            "name": "f",
            "start": 14,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [],
          "type": "FunctionDeclaration",
        },
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "arguments": Array [],
                  "callee": Node {
                    "end": 57,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 56,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 55,
                        "line": 2,
                      },
                    },
                    "name": "f",
                    "start": 56,
                    "type": "Identifier",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 58,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 55,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 59,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 48,
                    "line": 2,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 44,
            "loc": SourceLocation {
              "end": Position {
                "column": 43,
                "line": 2,
              },
              "start": Position {
                "column": 42,
                "line": 2,
              },
            },
            "name": "g",
            "start": 43,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 68,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 3,
                },
                "start": Position {
                  "column": 4,
                  "line": 3,
                },
              },
              "name": "f",
              "start": 67,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 74,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 3,
                },
                "start": Position {
                  "column": 10,
                  "line": 3,
                },
              },
              "name": "f",
              "start": 73,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 81,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 80,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 87,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 4,
                },
                "start": Position {
                  "column": 10,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 86,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 94,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 5,
                },
                "start": Position {
                  "column": 4,
                  "line": 5,
                },
              },
              "name": "f",
              "start": 93,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 100,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 5,
                },
                "start": Position {
                  "column": 10,
                  "line": 5,
                },
              },
              "name": "g",
              "start": 99,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Function f declared",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "arguments": Array [],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "arguments": Array [],
                            "callee": Node {
                              "end": 28,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 26,
                                  "line": 2,
                                },
                              },
                              "name": "g",
                              "start": 27,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 29,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 26,
                                "line": 2,
                              },
                            },
                            "type": "CallExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 30,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 15,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 14,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 13,
                          "line": 2,
                        },
                      },
                      "name": "f",
                      "start": 14,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 58,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 55,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 59,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 48,
                    "line": 2,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 44,
            "loc": SourceLocation {
              "end": Position {
                "column": 43,
                "line": 2,
              },
              "start": Position {
                "column": 42,
                "line": 2,
              },
            },
            "name": "g",
            "start": 43,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Node {
                        "end": 28,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 26,
                            "line": 2,
                          },
                        },
                        "name": "g",
                        "start": 27,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Node {
                        "end": 28,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 26,
                            "line": 2,
                          },
                        },
                        "name": "g",
                        "start": 27,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 81,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 80,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 87,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 4,
                },
                "start": Position {
                  "column": 10,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 86,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Node {
                        "end": 28,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 26,
                            "line": 2,
                          },
                        },
                        "name": "g",
                        "start": 27,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 100,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 5,
                },
                "start": Position {
                  "column": 10,
                  "line": 5,
                },
              },
              "name": "g",
              "start": 99,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "body",
        "body[0]",
        "argument",
        "callee",
      ],
      Array [
        "body[1]",
        "expression",
        "left",
      ],
      Array [
        "body[3]",
        "expression",
        "left",
      ],
      Array [
        "body[1]",
        "expression",
        "right",
      ],
    ],
    "Function f declared",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "body": Object {
            "body": Array [
              Object {
                "argument": Object {
                  "arguments": Array [],
                  "callee": Object {
                    "body": Object {
                      "body": Array [
                        Object {
                          "argument": Object {
                            "arguments": Array [],
                            "callee": Node {
                              "end": 28,
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 27,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 26,
                                  "line": 2,
                                },
                              },
                              "name": "g",
                              "start": 27,
                              "type": "Identifier",
                            },
                            "loc": SourceLocation {
                              "end": Position {
                                "column": 29,
                                "line": 2,
                              },
                              "start": Position {
                                "column": 26,
                                "line": 2,
                              },
                            },
                            "type": "CallExpression",
                          },
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 30,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 19,
                              "line": 2,
                            },
                          },
                          "type": "ReturnStatement",
                        },
                      ],
                      "type": "BlockStatement",
                    },
                    "id": Node {
                      "end": 15,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 14,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 13,
                          "line": 2,
                        },
                      },
                      "name": "f",
                      "start": 14,
                      "type": "Identifier",
                    },
                    "loc": undefined,
                    "params": Array [],
                    "type": "FunctionExpression",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 58,
                      "line": 2,
                    },
                    "start": Position {
                      "column": 55,
                      "line": 2,
                    },
                  },
                  "type": "CallExpression",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 59,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 48,
                    "line": 2,
                  },
                },
                "type": "ReturnStatement",
              },
            ],
            "type": "BlockStatement",
          },
          "id": Node {
            "end": 44,
            "loc": SourceLocation {
              "end": Position {
                "column": 43,
                "line": 2,
              },
              "start": Position {
                "column": 42,
                "line": 2,
              },
            },
            "name": "g",
            "start": 43,
            "type": "Identifier",
          },
          "loc": undefined,
          "params": Array [],
          "type": "FunctionDeclaration",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Node {
                        "end": 28,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 26,
                            "line": 2,
                          },
                        },
                        "name": "g",
                        "start": 27,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Node {
                        "end": 28,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 26,
                            "line": 2,
                          },
                        },
                        "name": "g",
                        "start": 27,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Node {
              "end": 81,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 4,
                },
                "start": Position {
                  "column": 4,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 80,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 87,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 4,
                },
                "start": Position {
                  "column": 10,
                  "line": 4,
                },
              },
              "name": "g",
              "start": 86,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Node {
                        "end": 28,
                        "loc": SourceLocation {
                          "end": Position {
                            "column": 27,
                            "line": 2,
                          },
                          "start": Position {
                            "column": 26,
                            "line": 2,
                          },
                        },
                        "name": "g",
                        "start": 27,
                        "type": "Identifier",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Node {
              "end": 100,
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 5,
                },
                "start": Position {
                  "column": 10,
                  "line": 5,
                },
              },
              "name": "g",
              "start": 99,
              "type": "Identifier",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "Function g declared",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
        "left",
        "body",
        "body[0]",
        "argument",
        "callee",
      ],
      Array [
        "body[1]",
        "expression",
        "left",
      ],
      Array [
        "body[1]",
        "expression",
        "right",
      ],
      Array [
        "body[2]",
        "expression",
        "right",
      ],
    ],
    "Function g declared",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 3,
              },
              "start": Position {
                "column": 4,
                "line": 3,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression f === f evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 4,
            "loc": SourceLocation {
              "end": Position {
                "column": 4,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "true",
            "start": 0,
            "type": "Literal",
            "value": true,
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression f === f evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 4,
            "loc": SourceLocation {
              "end": Position {
                "column": 4,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "true",
            "start": 0,
            "type": "Literal",
            "value": true,
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "true finished evaluating",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [],
    ],
    "true finished evaluating",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression g === g evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 4,
            "loc": SourceLocation {
              "end": Position {
                "column": 4,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "true",
            "start": 0,
            "type": "Literal",
            "value": true,
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression g === g evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 4,
            "loc": SourceLocation {
              "end": Position {
                "column": 4,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "true",
            "start": 0,
            "type": "Literal",
            "value": true,
          },
          "type": "ExpressionStatement",
        },
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
      ],
    ],
    "true finished evaluating",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [],
    ],
    "true finished evaluating",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": Object {
                                  "body": Object {
                                    "body": Array [
                                      Object {
                                        "argument": Object {
                                          "arguments": Array [],
                                          "callee": [Circular],
                                          "loc": SourceLocation {
                                            "end": Position {
                                              "column": 29,
                                              "line": 2,
                                            },
                                            "start": Position {
                                              "column": 26,
                                              "line": 2,
                                            },
                                          },
                                          "type": "CallExpression",
                                        },
                                        "loc": SourceLocation {
                                          "end": Position {
                                            "column": 30,
                                            "line": 2,
                                          },
                                          "start": Position {
                                            "column": 19,
                                            "line": 2,
                                          },
                                        },
                                        "type": "ReturnStatement",
                                      },
                                    ],
                                    "type": "BlockStatement",
                                  },
                                  "id": Node {
                                    "end": 15,
                                    "loc": SourceLocation {
                                      "end": Position {
                                        "column": 14,
                                        "line": 2,
                                      },
                                      "start": Position {
                                        "column": 13,
                                        "line": 2,
                                      },
                                    },
                                    "name": "f",
                                    "start": 14,
                                    "type": "Identifier",
                                  },
                                  "loc": undefined,
                                  "params": Array [],
                                  "type": "FunctionExpression",
                                },
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 58,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 55,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 59,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 48,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 44,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 43,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 42,
                              "line": 2,
                            },
                          },
                          "name": "g",
                          "start": 43,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 29,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 26,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 30,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 15,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 14,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 13,
                    "line": 2,
                  },
                },
                "name": "f",
                "start": 14,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 4,
                "line": 5,
              },
            },
            "operator": "===",
            "right": Object {
              "body": Object {
                "body": Array [
                  Object {
                    "argument": Object {
                      "arguments": Array [],
                      "callee": Object {
                        "body": Object {
                          "body": Array [
                            Object {
                              "argument": Object {
                                "arguments": Array [],
                                "callee": [Circular],
                                "loc": SourceLocation {
                                  "end": Position {
                                    "column": 29,
                                    "line": 2,
                                  },
                                  "start": Position {
                                    "column": 26,
                                    "line": 2,
                                  },
                                },
                                "type": "CallExpression",
                              },
                              "loc": SourceLocation {
                                "end": Position {
                                  "column": 30,
                                  "line": 2,
                                },
                                "start": Position {
                                  "column": 19,
                                  "line": 2,
                                },
                              },
                              "type": "ReturnStatement",
                            },
                          ],
                          "type": "BlockStatement",
                        },
                        "id": Node {
                          "end": 15,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 14,
                              "line": 2,
                            },
                            "start": Position {
                              "column": 13,
                              "line": 2,
                            },
                          },
                          "name": "f",
                          "start": 14,
                          "type": "Identifier",
                        },
                        "loc": undefined,
                        "params": Array [],
                        "type": "FunctionExpression",
                      },
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 58,
                          "line": 2,
                        },
                        "start": Position {
                          "column": 55,
                          "line": 2,
                        },
                      },
                      "type": "CallExpression",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 59,
                        "line": 2,
                      },
                      "start": Position {
                        "column": 48,
                        "line": 2,
                      },
                    },
                    "type": "ReturnStatement",
                  },
                ],
                "type": "BlockStatement",
              },
              "id": Node {
                "end": 44,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 43,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 42,
                    "line": 2,
                  },
                },
                "name": "g",
                "start": 43,
                "type": "Identifier",
              },
              "loc": undefined,
              "params": Array [],
              "type": "FunctionExpression",
            },
            "type": "BinaryExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression f === g evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 5,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "false",
            "start": 0,
            "type": "Literal",
            "value": false,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [
      Array [
        "body[0]",
        "expression",
      ],
    ],
    "Binary expression f === g evaluated",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Node {
            "end": 5,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "raw": "false",
            "start": 0,
            "type": "Literal",
            "value": false,
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Evaluation complete",
  ],
]
`;

exports[`undefined || 1 1`] = `
Array [
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "name": "undefined",
              "type": "Identifier",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 17,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "raw": "1",
              "start": 16,
              "type": "Literal",
              "value": 1,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "Start of evaluation",
  ],
  Array [
    Object {
      "body": Array [
        Object {
          "expression": Object {
            "left": Object {
              "name": "undefined",
              "type": "Identifier",
            },
            "loc": undefined,
            "operator": "||",
            "right": Node {
              "end": 17,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 2,
                },
                "start": Position {
                  "column": 15,
                  "line": 2,
                },
              },
              "raw": "1",
              "start": 16,
              "type": "Literal",
              "value": 1,
            },
            "type": "LogicalExpression",
          },
          "type": "ExpressionStatement",
        },
      ],
      "sourceType": "module",
      "type": "Program",
    },
    Array [],
    "",
  ],
]
`;
