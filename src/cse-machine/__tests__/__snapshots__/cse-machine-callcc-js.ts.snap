// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`call_cc can be used to return early: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "let x = 1;
call_cc((cont) => {
    x = 2;
    cont();
    x = 3;
});
x;",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": 2,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`call_cc throws error when given > 1 arguments: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "const f = (cont) => cont;
1 + 2 + call_cc(f,f) + 4;",
  "displayResult": Array [],
  "numErrors": 1,
  "parsedErrors": "Line 2: Expected 1 arguments, but got 2.",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`call_cc throws error when given no arguments: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "1 + 2 + call_cc() + 4;",
  "displayResult": Array [],
  "numErrors": 1,
  "parsedErrors": "Line 1: Expected 1 arguments, but got 0.",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`call_cc works with normal functions: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "1 + 2 + call_cc((cont) => 3) + 4;",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": 10,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`continuations can be stored as a value: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "let a = 0;
call_cc((cont) => {
    a = cont;
});
a;",
  "displayResult": Array [],
  "numErrors": 0,
  "parsedErrors": "",
  "result": [Function],
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;
