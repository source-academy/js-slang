// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avoid unnescessary environment instruction 1 1`] = `
Control {
  "numEnvDependentItems": 0,
  "storage": Array [
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 53,
        "isEnvDependent": true,
        "left": Node {
          "arguments": Array [
            Node {
              "end": 48,
              "isEnvDependent": true,
              "left": Node {
                "end": 46,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 4,
                  },
                },
                "name": "n",
                "start": 45,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 48,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 47,
                "type": "Literal",
                "value": 1,
              },
              "start": 45,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 44,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "name": "f",
            "start": 43,
            "type": "Identifier",
          },
          "end": 49,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 10,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "start": 43,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 14,
            "line": 4,
          },
          "start": Position {
            "column": 4,
            "line": 4,
          },
        },
        "operator": "*",
        "right": Node {
          "end": 53,
          "isEnvDependent": false,
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 13,
              "line": 4,
            },
          },
          "raw": "2",
          "start": 52,
          "type": "Literal",
          "value": 2,
        },
        "start": 43,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
    Node {
      "end": 53,
      "isEnvDependent": false,
      "loc": SourceLocation {
        "end": Position {
          "column": 14,
          "line": 4,
        },
        "start": Position {
          "column": 13,
          "line": 4,
        },
      },
      "raw": "2",
      "start": 52,
      "type": "Literal",
      "value": 2,
    },
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 53,
        "isEnvDependent": true,
        "left": Node {
          "arguments": Array [
            Node {
              "end": 48,
              "isEnvDependent": true,
              "left": Node {
                "end": 46,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 4,
                  },
                },
                "name": "n",
                "start": 45,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 48,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 47,
                "type": "Literal",
                "value": 1,
              },
              "start": 45,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 44,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "name": "f",
            "start": 43,
            "type": "Identifier",
          },
          "end": 49,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 10,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "start": 43,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 14,
            "line": 4,
          },
          "start": Position {
            "column": 4,
            "line": 4,
          },
        },
        "operator": "*",
        "right": Node {
          "end": 53,
          "isEnvDependent": false,
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 13,
              "line": 4,
            },
          },
          "raw": "2",
          "start": 52,
          "type": "Literal",
          "value": 2,
        },
        "start": 43,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
    Node {
      "end": 53,
      "isEnvDependent": false,
      "loc": SourceLocation {
        "end": Position {
          "column": 14,
          "line": 4,
        },
        "start": Position {
          "column": 13,
          "line": 4,
        },
      },
      "raw": "2",
      "start": 52,
      "type": "Literal",
      "value": 2,
    },
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 53,
        "isEnvDependent": true,
        "left": Node {
          "arguments": Array [
            Node {
              "end": 48,
              "isEnvDependent": true,
              "left": Node {
                "end": 46,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 4,
                  },
                },
                "name": "n",
                "start": 45,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 4,
                },
                "start": Position {
                  "column": 6,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 48,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 9,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 8,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 47,
                "type": "Literal",
                "value": 1,
              },
              "start": 45,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 44,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 4,
              },
              "start": Position {
                "column": 4,
                "line": 4,
              },
            },
            "name": "f",
            "start": 43,
            "type": "Identifier",
          },
          "end": 49,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 10,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "start": 43,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 14,
            "line": 4,
          },
          "start": Position {
            "column": 4,
            "line": 4,
          },
        },
        "operator": "*",
        "right": Node {
          "end": 53,
          "isEnvDependent": false,
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 13,
              "line": 4,
            },
          },
          "raw": "2",
          "start": 52,
          "type": "Literal",
          "value": 2,
        },
        "start": 43,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
  ],
}
`;

exports[`Avoid unnescessary environment instruction 2 1`] = `
Control {
  "numEnvDependentItems": 0,
  "storage": Array [
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 53,
        "isEnvDependent": true,
        "left": Node {
          "end": 44,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "name": "n",
          "start": 43,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 14,
            "line": 4,
          },
          "start": Position {
            "column": 4,
            "line": 4,
          },
        },
        "operator": "*",
        "right": Node {
          "arguments": Array [
            Node {
              "end": 52,
              "isEnvDependent": true,
              "left": Node {
                "end": 50,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 4,
                  },
                },
                "name": "n",
                "start": 49,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 10,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 52,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 51,
                "type": "Literal",
                "value": 1,
              },
              "start": 49,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 48,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 8,
                "line": 4,
              },
            },
            "name": "f",
            "start": 47,
            "type": "Identifier",
          },
          "end": 53,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 8,
              "line": 4,
            },
          },
          "start": 47,
          "type": "CallExpression",
        },
        "start": 43,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 53,
        "isEnvDependent": true,
        "left": Node {
          "end": 44,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "name": "n",
          "start": 43,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 14,
            "line": 4,
          },
          "start": Position {
            "column": 4,
            "line": 4,
          },
        },
        "operator": "*",
        "right": Node {
          "arguments": Array [
            Node {
              "end": 52,
              "isEnvDependent": true,
              "left": Node {
                "end": 50,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 4,
                  },
                },
                "name": "n",
                "start": 49,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 10,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 52,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 51,
                "type": "Literal",
                "value": 1,
              },
              "start": 49,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 48,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 8,
                "line": 4,
              },
            },
            "name": "f",
            "start": 47,
            "type": "Identifier",
          },
          "end": 53,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 8,
              "line": 4,
            },
          },
          "start": 47,
          "type": "CallExpression",
        },
        "start": 43,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 53,
        "isEnvDependent": true,
        "left": Node {
          "end": 44,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 4,
            },
            "start": Position {
              "column": 4,
              "line": 4,
            },
          },
          "name": "n",
          "start": 43,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 14,
            "line": 4,
          },
          "start": Position {
            "column": 4,
            "line": 4,
          },
        },
        "operator": "*",
        "right": Node {
          "arguments": Array [
            Node {
              "end": 52,
              "isEnvDependent": true,
              "left": Node {
                "end": 50,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 4,
                  },
                },
                "name": "n",
                "start": 49,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 4,
                },
                "start": Position {
                  "column": 10,
                  "line": 4,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 52,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 4,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 4,
                  },
                },
                "raw": "1",
                "start": 51,
                "type": "Literal",
                "value": 1,
              },
              "start": 49,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 48,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 4,
              },
              "start": Position {
                "column": 8,
                "line": 4,
              },
            },
            "name": "f",
            "start": 47,
            "type": "Identifier",
          },
          "end": 53,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 14,
              "line": 4,
            },
            "start": Position {
              "column": 8,
              "line": 4,
            },
          },
          "start": 47,
          "type": "CallExpression",
        },
        "start": 43,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
  ],
}
`;

exports[`Avoid unnescessary environment instruction 3 1`] = `
Control {
  "numEnvDependentItems": 5,
  "storage": Array [
    Node {
      "end": 86,
      "expression": Node {
        "end": 85,
        "isEnvDependent": true,
        "left": Node {
          "end": 81,
          "loc": SourceLocation {
            "end": Position {
              "column": 1,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 8,
            },
          },
          "name": "a",
          "start": 80,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 5,
            "line": 8,
          },
          "start": Position {
            "column": 0,
            "line": 8,
          },
        },
        "operator": "=",
        "right": Node {
          "end": 85,
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 8,
            },
            "start": Position {
              "column": 4,
              "line": 8,
            },
          },
          "raw": "2",
          "start": 84,
          "type": "Literal",
          "value": 2,
        },
        "start": 80,
        "type": "AssignmentExpression",
      },
      "isEnvDependent": true,
      "loc": SourceLocation {
        "end": Position {
          "column": 6,
          "line": 8,
        },
        "start": Position {
          "column": 0,
          "line": 8,
        },
      },
      "start": 80,
      "type": "ExpressionStatement",
    },
    Object {
      "instrType": "Pop",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 86,
        "expression": Node {
          "end": 85,
          "isEnvDependent": true,
          "left": Node {
            "end": 81,
            "loc": SourceLocation {
              "end": Position {
                "column": 1,
                "line": 8,
              },
              "start": Position {
                "column": 0,
                "line": 8,
              },
            },
            "name": "a",
            "start": 80,
            "type": "Identifier",
          },
          "loc": SourceLocation {
            "end": Position {
              "column": 5,
              "line": 8,
            },
            "start": Position {
              "column": 0,
              "line": 8,
            },
          },
          "operator": "=",
          "right": Node {
            "end": 85,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 8,
              },
              "start": Position {
                "column": 4,
                "line": 8,
              },
            },
            "raw": "2",
            "start": 84,
            "type": "Literal",
            "value": 2,
          },
          "start": 80,
          "type": "AssignmentExpression",
        },
        "isEnvDependent": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 6,
            "line": 8,
          },
          "start": Position {
            "column": 0,
            "line": 8,
          },
        },
        "start": 80,
        "type": "ExpressionStatement",
      },
    },
    Object {
      "env": Object {
        "head": Object {
          "a": 1,
          "f": [Function],
        },
        "heap": Heap {
          "storage": Set {
            [Function],
          },
        },
        "id": "47",
        "name": "programEnvironment",
        "tail": Object {
          "head": Object {
            "$accumulate": [Function],
            "$append": [Function],
            "$build_list": [Function],
            "$enum_list": [Function],
            "$filter": [Function],
            "$length": [Function],
            "$list_to_string": [Function],
            "$map": [Function],
            "$remove": [Function],
            "$remove_all": [Function],
            "$reverse": [Function],
            "__access_export__": [Function],
            "__access_named_export__": [Function],
            "accumulate": [Function],
            "append": [Function],
            "build_list": [Function],
            "build_stream": [Function],
            "enum_list": [Function],
            "enum_stream": [Function],
            "equal": [Function],
            "eval_stream": [Function],
            "filter": [Function],
            "for_each": [Function],
            "integers_from": [Function],
            "is_stream": [Function],
            "length": [Function],
            "list_ref": [Function],
            "list_to_stream": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "member": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "stream_append": [Function],
            "stream_filter": [Function],
            "stream_for_each": [Function],
            "stream_length": [Function],
            "stream_map": [Function],
            "stream_member": [Function],
            "stream_ref": [Function],
            "stream_remove": [Function],
            "stream_remove_all": [Function],
            "stream_reverse": [Function],
            "stream_tail": [Function],
            "stream_to_list": [Function],
          },
          "heap": Heap {
            "storage": Set {
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
            },
          },
          "id": "0",
          "name": "prelude",
          "tail": Object {
            "head": Object {
              "Infinity": Infinity,
              "NaN": NaN,
              "apply_in_underlying_javascript": [Function],
              "arity": [Function],
              "array_length": [Function],
              "call_cc": [Function],
              "char_at": [Function],
              "display": [Function],
              "display_list": [Function],
              "draw_data": [Function],
              "error": [Function],
              "get_time": [Function],
              "head": [Function],
              "is_array": [Function],
              "is_boolean": [Function],
              "is_function": [Function],
              "is_list": [Function],
              "is_null": [Function],
              "is_number": [Function],
              "is_pair": [Function],
              "is_string": [Function],
              "is_undefined": [Function],
              "list": [Function],
              "math_E": 2.718281828459045,
              "math_LN10": 2.302585092994046,
              "math_LN2": 0.6931471805599453,
              "math_LOG10E": 0.4342944819032518,
              "math_LOG2E": 1.4426950408889634,
              "math_PI": 3.141592653589793,
              "math_SQRT1_2": 0.7071067811865476,
              "math_SQRT2": 1.4142135623730951,
              "math_abs": [Function],
              "math_acos": [Function],
              "math_acosh": [Function],
              "math_asin": [Function],
              "math_asinh": [Function],
              "math_atan": [Function],
              "math_atan2": [Function],
              "math_atanh": [Function],
              "math_cbrt": [Function],
              "math_ceil": [Function],
              "math_clz32": [Function],
              "math_cos": [Function],
              "math_cosh": [Function],
              "math_exp": [Function],
              "math_expm1": [Function],
              "math_floor": [Function],
              "math_fround": [Function],
              "math_hypot": [Function],
              "math_imul": [Function],
              "math_log": [Function],
              "math_log10": [Function],
              "math_log1p": [Function],
              "math_log2": [Function],
              "math_max": [Function],
              "math_min": [Function],
              "math_pow": [Function],
              "math_random": [Function],
              "math_round": [Function],
              "math_sign": [Function],
              "math_sin": [Function],
              "math_sinh": [Function],
              "math_sqrt": [Function],
              "math_tan": [Function],
              "math_tanh": [Function],
              "math_trunc": [Function],
              "pair": [Function],
              "parse": [Function],
              "parse_int": [Function],
              "prompt": [Function],
              "raw_display": [Function],
              "set_head": [Function],
              "set_tail": [Function],
              "stream": [Function],
              "stringify": [Function],
              "tail": [Function],
              "tokenize": [Function],
              "undefined": undefined,
            },
            "heap": Heap {
              "storage": null,
            },
            "id": "-1",
            "name": "global",
            "tail": null,
          },
        },
      },
      "instrType": "Environment",
      "isEnvDependent": true,
      "srcNode": Node {
        "arguments": Array [
          Node {
            "end": 77,
            "isEnvDependent": false,
            "loc": SourceLocation {
              "end": Position {
                "column": 3,
                "line": 7,
              },
              "start": Position {
                "column": 2,
                "line": 7,
              },
            },
            "raw": "3",
            "start": 76,
            "type": "Literal",
            "value": 3,
          },
        ],
        "callee": Node {
          "end": 75,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 1,
              "line": 7,
            },
            "start": Position {
              "column": 0,
              "line": 7,
            },
          },
          "name": "f",
          "start": 74,
          "type": "Identifier",
        },
        "end": 78,
        "isEnvDependent": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 4,
            "line": 7,
          },
          "start": Position {
            "column": 0,
            "line": 7,
          },
        },
        "start": 74,
        "type": "CallExpression",
      },
    },
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 70,
        "isEnvDependent": true,
        "left": Node {
          "end": 61,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 5,
            },
            "start": Position {
              "column": 6,
              "line": 5,
            },
          },
          "name": "n",
          "start": 60,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 16,
            "line": 5,
          },
          "start": Position {
            "column": 6,
            "line": 5,
          },
        },
        "operator": "*",
        "right": Node {
          "arguments": Array [
            Node {
              "end": 69,
              "isEnvDependent": true,
              "left": Node {
                "end": 67,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "name": "n",
                "start": 66,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 69,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "raw": "1",
                "start": 68,
                "type": "Literal",
                "value": 1,
              },
              "start": 66,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 65,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 10,
                "line": 5,
              },
            },
            "name": "f",
            "start": 64,
            "type": "Identifier",
          },
          "end": 70,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 5,
            },
            "start": Position {
              "column": 10,
              "line": 5,
            },
          },
          "start": 64,
          "type": "CallExpression",
        },
        "start": 60,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
    Object {
      "env": Object {
        "callExpression": Object {
          "arguments": Array [
            Object {
              "loc": undefined,
              "type": "Literal",
              "value": 3,
            },
          ],
          "callee": Node {
            "end": 75,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 1,
                "line": 7,
              },
              "start": Position {
                "column": 0,
                "line": 7,
              },
            },
            "name": "f",
            "start": 74,
            "type": "Identifier",
          },
          "end": 78,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 4,
              "line": 7,
            },
            "start": Position {
              "column": 0,
              "line": 7,
            },
          },
          "start": 74,
          "type": "CallExpression",
        },
        "head": Object {
          "n": 3,
        },
        "heap": Heap {
          "storage": null,
        },
        "id": "49",
        "name": "f",
        "tail": Object {
          "head": Object {
            "a": 1,
            "f": [Function],
          },
          "heap": Heap {
            "storage": Set {
              [Function],
            },
          },
          "id": "47",
          "name": "programEnvironment",
          "tail": Object {
            "head": Object {
              "$accumulate": [Function],
              "$append": [Function],
              "$build_list": [Function],
              "$enum_list": [Function],
              "$filter": [Function],
              "$length": [Function],
              "$list_to_string": [Function],
              "$map": [Function],
              "$remove": [Function],
              "$remove_all": [Function],
              "$reverse": [Function],
              "__access_export__": [Function],
              "__access_named_export__": [Function],
              "accumulate": [Function],
              "append": [Function],
              "build_list": [Function],
              "build_stream": [Function],
              "enum_list": [Function],
              "enum_stream": [Function],
              "equal": [Function],
              "eval_stream": [Function],
              "filter": [Function],
              "for_each": [Function],
              "integers_from": [Function],
              "is_stream": [Function],
              "length": [Function],
              "list_ref": [Function],
              "list_to_stream": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "member": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "stream_append": [Function],
              "stream_filter": [Function],
              "stream_for_each": [Function],
              "stream_length": [Function],
              "stream_map": [Function],
              "stream_member": [Function],
              "stream_ref": [Function],
              "stream_remove": [Function],
              "stream_remove_all": [Function],
              "stream_reverse": [Function],
              "stream_tail": [Function],
              "stream_to_list": [Function],
            },
            "heap": Heap {
              "storage": Set {
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              },
            },
            "id": "0",
            "name": "prelude",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "apply_in_underlying_javascript": [Function],
                "arity": [Function],
                "array_length": [Function],
                "call_cc": [Function],
                "char_at": [Function],
                "display": [Function],
                "display_list": [Function],
                "draw_data": [Function],
                "error": [Function],
                "get_time": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "list": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "pair": [Function],
                "parse": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stream": [Function],
                "stringify": [Function],
                "tail": [Function],
                "tokenize": [Function],
                "undefined": undefined,
              },
              "heap": Heap {
                "storage": null,
              },
              "id": "-1",
              "name": "global",
              "tail": null,
            },
          },
        },
      },
      "instrType": "Environment",
      "isEnvDependent": true,
      "srcNode": Node {
        "arguments": Array [
          Node {
            "end": 69,
            "isEnvDependent": true,
            "left": Node {
              "end": 67,
              "isEnvDependent": true,
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "name": "n",
              "start": 66,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 15,
                "line": 5,
              },
              "start": Position {
                "column": 12,
                "line": 5,
              },
            },
            "operator": "-",
            "right": Node {
              "end": 69,
              "isEnvDependent": false,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 5,
                },
                "start": Position {
                  "column": 14,
                  "line": 5,
                },
              },
              "raw": "1",
              "start": 68,
              "type": "Literal",
              "value": 1,
            },
            "start": 66,
            "type": "BinaryExpression",
          },
        ],
        "callee": Node {
          "end": 65,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 11,
              "line": 5,
            },
            "start": Position {
              "column": 10,
              "line": 5,
            },
          },
          "name": "f",
          "start": 64,
          "type": "Identifier",
        },
        "end": 70,
        "isEnvDependent": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 16,
            "line": 5,
          },
          "start": Position {
            "column": 10,
            "line": 5,
          },
        },
        "start": 64,
        "type": "CallExpression",
      },
    },
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 70,
        "isEnvDependent": true,
        "left": Node {
          "end": 61,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 5,
            },
            "start": Position {
              "column": 6,
              "line": 5,
            },
          },
          "name": "n",
          "start": 60,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 16,
            "line": 5,
          },
          "start": Position {
            "column": 6,
            "line": 5,
          },
        },
        "operator": "*",
        "right": Node {
          "arguments": Array [
            Node {
              "end": 69,
              "isEnvDependent": true,
              "left": Node {
                "end": 67,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "name": "n",
                "start": 66,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 69,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "raw": "1",
                "start": 68,
                "type": "Literal",
                "value": 1,
              },
              "start": 66,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 65,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 10,
                "line": 5,
              },
            },
            "name": "f",
            "start": 64,
            "type": "Identifier",
          },
          "end": 70,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 5,
            },
            "start": Position {
              "column": 10,
              "line": 5,
            },
          },
          "start": 64,
          "type": "CallExpression",
        },
        "start": 60,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
    Object {
      "env": Object {
        "callExpression": Object {
          "arguments": Array [
            Object {
              "loc": undefined,
              "type": "Literal",
              "value": 2,
            },
          ],
          "callee": Node {
            "end": 65,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 10,
                "line": 5,
              },
            },
            "name": "f",
            "start": 64,
            "type": "Identifier",
          },
          "end": 70,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 5,
            },
            "start": Position {
              "column": 10,
              "line": 5,
            },
          },
          "start": 64,
          "type": "CallExpression",
        },
        "head": Object {
          "n": 2,
        },
        "heap": Heap {
          "storage": null,
        },
        "id": "50",
        "name": "f",
        "tail": Object {
          "head": Object {
            "a": 1,
            "f": [Function],
          },
          "heap": Heap {
            "storage": Set {
              [Function],
            },
          },
          "id": "47",
          "name": "programEnvironment",
          "tail": Object {
            "head": Object {
              "$accumulate": [Function],
              "$append": [Function],
              "$build_list": [Function],
              "$enum_list": [Function],
              "$filter": [Function],
              "$length": [Function],
              "$list_to_string": [Function],
              "$map": [Function],
              "$remove": [Function],
              "$remove_all": [Function],
              "$reverse": [Function],
              "__access_export__": [Function],
              "__access_named_export__": [Function],
              "accumulate": [Function],
              "append": [Function],
              "build_list": [Function],
              "build_stream": [Function],
              "enum_list": [Function],
              "enum_stream": [Function],
              "equal": [Function],
              "eval_stream": [Function],
              "filter": [Function],
              "for_each": [Function],
              "integers_from": [Function],
              "is_stream": [Function],
              "length": [Function],
              "list_ref": [Function],
              "list_to_stream": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "member": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "stream_append": [Function],
              "stream_filter": [Function],
              "stream_for_each": [Function],
              "stream_length": [Function],
              "stream_map": [Function],
              "stream_member": [Function],
              "stream_ref": [Function],
              "stream_remove": [Function],
              "stream_remove_all": [Function],
              "stream_reverse": [Function],
              "stream_tail": [Function],
              "stream_to_list": [Function],
            },
            "heap": Heap {
              "storage": Set {
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              },
            },
            "id": "0",
            "name": "prelude",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "apply_in_underlying_javascript": [Function],
                "arity": [Function],
                "array_length": [Function],
                "call_cc": [Function],
                "char_at": [Function],
                "display": [Function],
                "display_list": [Function],
                "draw_data": [Function],
                "error": [Function],
                "get_time": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "list": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "pair": [Function],
                "parse": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stream": [Function],
                "stringify": [Function],
                "tail": [Function],
                "tokenize": [Function],
                "undefined": undefined,
              },
              "heap": Heap {
                "storage": null,
              },
              "id": "-1",
              "name": "global",
              "tail": null,
            },
          },
        },
      },
      "instrType": "Environment",
      "isEnvDependent": true,
      "srcNode": Node {
        "arguments": Array [
          Node {
            "end": 69,
            "isEnvDependent": true,
            "left": Node {
              "end": 67,
              "isEnvDependent": true,
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "name": "n",
              "start": 66,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 15,
                "line": 5,
              },
              "start": Position {
                "column": 12,
                "line": 5,
              },
            },
            "operator": "-",
            "right": Node {
              "end": 69,
              "isEnvDependent": false,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 5,
                },
                "start": Position {
                  "column": 14,
                  "line": 5,
                },
              },
              "raw": "1",
              "start": 68,
              "type": "Literal",
              "value": 1,
            },
            "start": 66,
            "type": "BinaryExpression",
          },
        ],
        "callee": Node {
          "end": 65,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 11,
              "line": 5,
            },
            "start": Position {
              "column": 10,
              "line": 5,
            },
          },
          "name": "f",
          "start": 64,
          "type": "Identifier",
        },
        "end": 70,
        "isEnvDependent": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 16,
            "line": 5,
          },
          "start": Position {
            "column": 10,
            "line": 5,
          },
        },
        "start": 64,
        "type": "CallExpression",
      },
    },
    Object {
      "instrType": "BinaryOperation",
      "isEnvDependent": false,
      "srcNode": Node {
        "end": 70,
        "isEnvDependent": true,
        "left": Node {
          "end": 61,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 7,
              "line": 5,
            },
            "start": Position {
              "column": 6,
              "line": 5,
            },
          },
          "name": "n",
          "start": 60,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 16,
            "line": 5,
          },
          "start": Position {
            "column": 6,
            "line": 5,
          },
        },
        "operator": "*",
        "right": Node {
          "arguments": Array [
            Node {
              "end": 69,
              "isEnvDependent": true,
              "left": Node {
                "end": 67,
                "isEnvDependent": true,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 13,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 12,
                    "line": 5,
                  },
                },
                "name": "n",
                "start": 66,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "operator": "-",
              "right": Node {
                "end": 69,
                "isEnvDependent": false,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 15,
                    "line": 5,
                  },
                  "start": Position {
                    "column": 14,
                    "line": 5,
                  },
                },
                "raw": "1",
                "start": 68,
                "type": "Literal",
                "value": 1,
              },
              "start": 66,
              "type": "BinaryExpression",
            },
          ],
          "callee": Node {
            "end": 65,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 10,
                "line": 5,
              },
            },
            "name": "f",
            "start": 64,
            "type": "Identifier",
          },
          "end": 70,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 5,
            },
            "start": Position {
              "column": 10,
              "line": 5,
            },
          },
          "start": 64,
          "type": "CallExpression",
        },
        "start": 60,
        "type": "BinaryExpression",
      },
      "symbol": "*",
    },
    Object {
      "env": Object {
        "callExpression": Object {
          "arguments": Array [
            Object {
              "loc": undefined,
              "type": "Literal",
              "value": 1,
            },
          ],
          "callee": Node {
            "end": 65,
            "isEnvDependent": true,
            "loc": SourceLocation {
              "end": Position {
                "column": 11,
                "line": 5,
              },
              "start": Position {
                "column": 10,
                "line": 5,
              },
            },
            "name": "f",
            "start": 64,
            "type": "Identifier",
          },
          "end": 70,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 16,
              "line": 5,
            },
            "start": Position {
              "column": 10,
              "line": 5,
            },
          },
          "start": 64,
          "type": "CallExpression",
        },
        "head": Object {
          "n": 1,
        },
        "heap": Heap {
          "storage": null,
        },
        "id": "51",
        "name": "f",
        "tail": Object {
          "head": Object {
            "a": 1,
            "f": [Function],
          },
          "heap": Heap {
            "storage": Set {
              [Function],
            },
          },
          "id": "47",
          "name": "programEnvironment",
          "tail": Object {
            "head": Object {
              "$accumulate": [Function],
              "$append": [Function],
              "$build_list": [Function],
              "$enum_list": [Function],
              "$filter": [Function],
              "$length": [Function],
              "$list_to_string": [Function],
              "$map": [Function],
              "$remove": [Function],
              "$remove_all": [Function],
              "$reverse": [Function],
              "__access_export__": [Function],
              "__access_named_export__": [Function],
              "accumulate": [Function],
              "append": [Function],
              "build_list": [Function],
              "build_stream": [Function],
              "enum_list": [Function],
              "enum_stream": [Function],
              "equal": [Function],
              "eval_stream": [Function],
              "filter": [Function],
              "for_each": [Function],
              "integers_from": [Function],
              "is_stream": [Function],
              "length": [Function],
              "list_ref": [Function],
              "list_to_stream": [Function],
              "list_to_string": [Function],
              "map": [Function],
              "member": [Function],
              "remove": [Function],
              "remove_all": [Function],
              "reverse": [Function],
              "stream_append": [Function],
              "stream_filter": [Function],
              "stream_for_each": [Function],
              "stream_length": [Function],
              "stream_map": [Function],
              "stream_member": [Function],
              "stream_ref": [Function],
              "stream_remove": [Function],
              "stream_remove_all": [Function],
              "stream_reverse": [Function],
              "stream_tail": [Function],
              "stream_to_list": [Function],
            },
            "heap": Heap {
              "storage": Set {
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              },
            },
            "id": "0",
            "name": "prelude",
            "tail": Object {
              "head": Object {
                "Infinity": Infinity,
                "NaN": NaN,
                "apply_in_underlying_javascript": [Function],
                "arity": [Function],
                "array_length": [Function],
                "call_cc": [Function],
                "char_at": [Function],
                "display": [Function],
                "display_list": [Function],
                "draw_data": [Function],
                "error": [Function],
                "get_time": [Function],
                "head": [Function],
                "is_array": [Function],
                "is_boolean": [Function],
                "is_function": [Function],
                "is_list": [Function],
                "is_null": [Function],
                "is_number": [Function],
                "is_pair": [Function],
                "is_string": [Function],
                "is_undefined": [Function],
                "list": [Function],
                "math_E": 2.718281828459045,
                "math_LN10": 2.302585092994046,
                "math_LN2": 0.6931471805599453,
                "math_LOG10E": 0.4342944819032518,
                "math_LOG2E": 1.4426950408889634,
                "math_PI": 3.141592653589793,
                "math_SQRT1_2": 0.7071067811865476,
                "math_SQRT2": 1.4142135623730951,
                "math_abs": [Function],
                "math_acos": [Function],
                "math_acosh": [Function],
                "math_asin": [Function],
                "math_asinh": [Function],
                "math_atan": [Function],
                "math_atan2": [Function],
                "math_atanh": [Function],
                "math_cbrt": [Function],
                "math_ceil": [Function],
                "math_clz32": [Function],
                "math_cos": [Function],
                "math_cosh": [Function],
                "math_exp": [Function],
                "math_expm1": [Function],
                "math_floor": [Function],
                "math_fround": [Function],
                "math_hypot": [Function],
                "math_imul": [Function],
                "math_log": [Function],
                "math_log10": [Function],
                "math_log1p": [Function],
                "math_log2": [Function],
                "math_max": [Function],
                "math_min": [Function],
                "math_pow": [Function],
                "math_random": [Function],
                "math_round": [Function],
                "math_sign": [Function],
                "math_sin": [Function],
                "math_sinh": [Function],
                "math_sqrt": [Function],
                "math_tan": [Function],
                "math_tanh": [Function],
                "math_trunc": [Function],
                "pair": [Function],
                "parse": [Function],
                "parse_int": [Function],
                "prompt": [Function],
                "raw_display": [Function],
                "set_head": [Function],
                "set_tail": [Function],
                "stream": [Function],
                "stringify": [Function],
                "tail": [Function],
                "tokenize": [Function],
                "undefined": undefined,
              },
              "heap": Heap {
                "storage": null,
              },
              "id": "-1",
              "name": "global",
              "tail": null,
            },
          },
        },
      },
      "instrType": "Environment",
      "isEnvDependent": true,
      "srcNode": Node {
        "arguments": Array [
          Node {
            "end": 69,
            "isEnvDependent": true,
            "left": Node {
              "end": 67,
              "isEnvDependent": true,
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 5,
                },
                "start": Position {
                  "column": 12,
                  "line": 5,
                },
              },
              "name": "n",
              "start": 66,
              "type": "Identifier",
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 15,
                "line": 5,
              },
              "start": Position {
                "column": 12,
                "line": 5,
              },
            },
            "operator": "-",
            "right": Node {
              "end": 69,
              "isEnvDependent": false,
              "loc": SourceLocation {
                "end": Position {
                  "column": 15,
                  "line": 5,
                },
                "start": Position {
                  "column": 14,
                  "line": 5,
                },
              },
              "raw": "1",
              "start": 68,
              "type": "Literal",
              "value": 1,
            },
            "start": 66,
            "type": "BinaryExpression",
          },
        ],
        "callee": Node {
          "end": 65,
          "isEnvDependent": true,
          "loc": SourceLocation {
            "end": Position {
              "column": 11,
              "line": 5,
            },
            "start": Position {
              "column": 10,
              "line": 5,
            },
          },
          "name": "f",
          "start": 64,
          "type": "Identifier",
        },
        "end": 70,
        "isEnvDependent": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 16,
            "line": 5,
          },
          "start": Position {
            "column": 10,
            "line": 5,
          },
        },
        "start": 64,
        "type": "CallExpression",
      },
    },
    Node {
      "end": 53,
      "isEnvDependent": false,
      "loc": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 4,
        },
        "start": Position {
          "column": 6,
          "line": 4,
        },
      },
      "raw": "1",
      "start": 52,
      "type": "Literal",
      "value": 1,
    },
  ],
}
`;

exports[`Avoid unnescessary environment instruction 4 1`] = `
Control {
  "numEnvDependentItems": 0,
  "storage": Array [
    Object {
      "body": Array [
        Node {
          "end": 43,
          "expression": Node {
            "end": 42,
            "isEnvDependent": false,
            "left": Node {
              "end": 38,
              "isEnvDependent": false,
              "loc": SourceLocation {
                "end": Position {
                  "column": 5,
                  "line": 7,
                },
                "start": Position {
                  "column": 4,
                  "line": 7,
                },
              },
              "raw": "1",
              "start": 37,
              "type": "Literal",
              "value": 1,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 9,
                "line": 7,
              },
              "start": Position {
                "column": 4,
                "line": 7,
              },
            },
            "operator": "+",
            "right": Node {
              "end": 42,
              "isEnvDependent": false,
              "loc": SourceLocation {
                "end": Position {
                  "column": 9,
                  "line": 7,
                },
                "start": Position {
                  "column": 8,
                  "line": 7,
                },
              },
              "raw": "2",
              "start": 41,
              "type": "Literal",
              "value": 2,
            },
            "start": 37,
            "type": "BinaryExpression",
          },
          "isEnvDependent": false,
          "loc": SourceLocation {
            "end": Position {
              "column": 10,
              "line": 7,
            },
            "start": Position {
              "column": 4,
              "line": 7,
            },
          },
          "start": 37,
          "type": "ExpressionStatement",
        },
        Node {
          "end": 50,
          "expression": Node {
            "end": 49,
            "isEnvDependent": false,
            "loc": SourceLocation {
              "end": Position {
                "column": 5,
                "line": 8,
              },
              "start": Position {
                "column": 4,
                "line": 8,
              },
            },
            "raw": "3",
            "start": 48,
            "type": "Literal",
            "value": 3,
          },
          "isEnvDependent": false,
          "loc": SourceLocation {
            "end": Position {
              "column": 6,
              "line": 8,
            },
            "start": Position {
              "column": 4,
              "line": 8,
            },
          },
          "start": 48,
          "type": "ExpressionStatement",
        },
      ],
      "isEnvDependent": false,
      "loc": SourceLocation {
        "end": Position {
          "column": 1,
          "line": 9,
        },
        "start": Position {
          "column": 0,
          "line": 6,
        },
      },
      "type": "StatementSequence",
    },
    Object {
      "body": Array [
        Node {
          "declarations": Array [
            Node {
              "end": 13,
              "id": Node {
                "end": 9,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 2,
                  },
                },
                "name": "a",
                "start": 8,
                "type": "Identifier",
              },
              "init": Node {
                "end": 13,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 2,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 2,
                  },
                },
                "raw": "1",
                "start": 12,
                "type": "Literal",
                "value": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 2,
                },
                "start": Position {
                  "column": 6,
                  "line": 2,
                },
              },
              "start": 8,
              "type": "VariableDeclarator",
            },
          ],
          "end": 14,
          "isEnvDependent": true,
          "kind": "let",
          "loc": SourceLocation {
            "end": Position {
              "column": 12,
              "line": 2,
            },
            "start": Position {
              "column": 2,
              "line": 2,
            },
          },
          "start": 4,
          "typability": "NotYetTyped",
          "type": "VariableDeclaration",
        },
        Node {
          "declarations": Array [
            Node {
              "end": 26,
              "id": Node {
                "end": 22,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 7,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 6,
                    "line": 3,
                  },
                },
                "name": "b",
                "start": 21,
                "type": "Identifier",
              },
              "init": Node {
                "end": 26,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 11,
                    "line": 3,
                  },
                  "start": Position {
                    "column": 10,
                    "line": 3,
                  },
                },
                "raw": "2",
                "start": 25,
                "type": "Literal",
                "value": 2,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 11,
                  "line": 3,
                },
                "start": Position {
                  "column": 6,
                  "line": 3,
                },
              },
              "start": 21,
              "type": "VariableDeclarator",
            },
          ],
          "end": 27,
          "kind": "let",
          "loc": SourceLocation {
            "end": Position {
              "column": 12,
              "line": 3,
            },
            "start": Position {
              "column": 2,
              "line": 3,
            },
          },
          "start": 17,
          "typability": "NotYetTyped",
          "type": "VariableDeclaration",
        },
      ],
      "isEnvDependent": false,
      "loc": SourceLocation {
        "end": Position {
          "column": 1,
          "line": 4,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "type": "StatementSequence",
    },
  ],
}
`;

exports[`Breakpoint steps match 1`] = `
Array [
  7,
  46,
  66,
  86,
]
`;

exports[`Breakpoint steps match 2`] = `
Array [
  6,
  20,
]
`;

exports[`Breakpoint steps match 3`] = `
Array [
  46,
]
`;

exports[`Breakpoint steps match 4`] = `
Array [
  46,
  152,
  332,
  364,
  544,
  724,
  756,
  788,
  968,
  1148,
  1180,
  1360,
  1540,
  1572,
  1604,
  1636,
]
`;

exports[`Changepoint steps match 1`] = `
Array [
  1,
  5,
  6,
  14,
  15,
  19,
  20,
  24,
  38,
  39,
  46,
  58,
  59,
  66,
  78,
  79,
  86,
  98,
]
`;

exports[`Changepoint steps match 2`] = `
Array [
  1,
  5,
  10,
  11,
  19,
  20,
]
`;

exports[`Changepoint steps match 3`] = `
Array [
  1,
  6,
  8,
  9,
  13,
  14,
  20,
  32,
  33,
  45,
  52,
  53,
  54,
  55,
  58,
  59,
  68,
  69,
]
`;

exports[`Changepoint steps match 4`] = `
Array [
  1,
  6,
  8,
  9,
  13,
  14,
  20,
  32,
  33,
  45,
  52,
  53,
  54,
  55,
  58,
  59,
  65,
  77,
  83,
  85,
  91,
  92,
  98,
  110,
  122,
  123,
  139,
  149,
  150,
  151,
  158,
  159,
  160,
  161,
  166,
  171,
  183,
  189,
  191,
  197,
  198,
  204,
  216,
  228,
  229,
  245,
  257,
  263,
  265,
  271,
  272,
  278,
  290,
  302,
  303,
  319,
  329,
  330,
  331,
  338,
  339,
  340,
  341,
  346,
  351,
  361,
  362,
  363,
  370,
  371,
  372,
  373,
  378,
  383,
  395,
  401,
  403,
  409,
  410,
  416,
  428,
  440,
  441,
  457,
  469,
  475,
  477,
  483,
  484,
  490,
  502,
  514,
  515,
  531,
  541,
  542,
  543,
  550,
  551,
  552,
  553,
  558,
  563,
  575,
  581,
  583,
  589,
  590,
  596,
  608,
  620,
  621,
  637,
  649,
  655,
  657,
  663,
  664,
  670,
  682,
  694,
  695,
  711,
  721,
  722,
  723,
  730,
  731,
  732,
  733,
  738,
  743,
  753,
  754,
  755,
  762,
  763,
  764,
  765,
  770,
  775,
  785,
  786,
  787,
  794,
  795,
  796,
  797,
  802,
  807,
  819,
  825,
  827,
  833,
  834,
  840,
  852,
  864,
  865,
  881,
  893,
  899,
  901,
  907,
  908,
  914,
  926,
  938,
  939,
  955,
  965,
  966,
  967,
  974,
  975,
  976,
  977,
  982,
  987,
  999,
  1005,
  1007,
  1013,
  1014,
  1020,
  1032,
  1044,
  1045,
  1061,
  1073,
  1079,
  1081,
  1087,
  1088,
  1094,
  1106,
  1118,
  1119,
  1135,
  1145,
  1146,
  1147,
  1154,
  1155,
  1156,
  1157,
  1162,
  1167,
  1177,
  1178,
  1179,
  1186,
  1187,
  1188,
  1189,
  1194,
  1199,
  1211,
  1217,
  1219,
  1225,
  1226,
  1232,
  1244,
  1256,
  1257,
  1273,
  1285,
  1291,
  1293,
  1299,
  1300,
  1306,
  1318,
  1330,
  1331,
  1347,
  1357,
  1358,
  1359,
  1366,
  1367,
  1368,
  1369,
  1374,
  1379,
  1391,
  1397,
  1399,
  1405,
  1406,
  1412,
  1424,
  1436,
  1437,
  1453,
  1465,
  1471,
  1473,
  1479,
  1480,
  1486,
  1498,
  1510,
  1511,
  1527,
  1537,
  1538,
  1539,
  1546,
  1547,
  1548,
  1549,
  1554,
  1559,
  1569,
  1570,
  1571,
  1578,
  1579,
  1580,
  1581,
  1586,
  1591,
  1601,
  1602,
  1603,
  1610,
  1611,
  1612,
  1613,
  1618,
  1623,
  1633,
  1634,
  1635,
  1642,
  1643,
  1644,
  1645,
  1650,
  1655,
  1665,
]
`;
